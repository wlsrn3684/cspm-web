[{"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\index.tsx":"1","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\reportWebVitals.ts":"2","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\App.tsx":"3","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\store\\index.ts":"4","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\asset\\detail.tsx":"5","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\scan\\detail.tsx":"6","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\store\\toggleMenu.ts":"7","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\asset\\index.tsx":"8","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\landing\\index.tsx":"9","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\login\\index.tsx":"10","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\setting\\index.tsx":"11","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\dashboard\\index.tsx":"12","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\asset\\styles.ts":"13","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\signup\\index.tsx":"14","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\checklist\\index.tsx":"15","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\vulnerability\\index.tsx":"16","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\scan\\styles.ts":"17","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\entire\\index.tsx":"18","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\inspection\\index.tsx":"19","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\layout\\topbar\\index.tsx":"20","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\layout\\sidebar\\index.tsx":"21","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\scan\\modal.tsx":"22","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\constant\\requestInit.ts":"23","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\scan\\index.tsx":"24","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\login\\styles.ts":"25","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\landing\\styles.ts":"26","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\setting\\styles.ts":"27","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\dashboard\\styles.ts":"28","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\vulnerability\\styles.ts":"29","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\checklist\\styles.ts":"30","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\layout\\topbar\\styles.ts":"31","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\entire\\styles.ts":"32","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\inspection\\styles.ts":"33","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\layout\\sidebar\\styles.ts":"34","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\hooks\\useChangeToggle.ts":"35","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\hooks\\useToggle.ts":"36","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\asset\\modal.tsx":"37","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\asset\\card.tsx":"38","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\layout\\sidebar\\row.tsx":"39","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\constant\\region.ts":"40","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\constant\\checklist.ts":"41","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\vulnerability\\modal.tsx":"42","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\scan\\detailModal.tsx":"43","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\dashboard\\table.tsx":"44","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\dashboard\\rank.tsx":"45","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\dashboard\\donut.tsx":"46","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\dashboard\\groupbar.tsx":"47","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\dashboard\\radar.tsx":"48","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\dashboard\\vuln.tsx":"49","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\index.tsx":"50","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\reportWebVitals.ts":"51","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\App.tsx":"52","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\store\\index.ts":"53","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\scan\\detail.tsx":"54","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\asset\\detail.tsx":"55","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\store\\toggleMenu.ts":"56","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\asset\\index.tsx":"57","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\scan\\index.tsx":"58","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\login\\index.tsx":"59","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\signup\\index.tsx":"60","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\landing\\index.tsx":"61","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\setting\\index.tsx":"62","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\dashboard\\index.tsx":"63","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\checklist\\index.tsx":"64","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\vulnerability\\index.tsx":"65","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\inspection\\index.tsx":"66","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\entire\\index.tsx":"67","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\layout\\sidebar\\index.tsx":"68","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\layout\\topbar\\index.tsx":"69","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\scan\\styles.ts":"70","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\asset\\styles.ts":"71","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\constant\\requestInit.ts":"72","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\constant\\checklist.ts":"73","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\scan\\detailModal.tsx":"74","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\login\\styles.ts":"75","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\landing\\styles.ts":"76","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\setting\\styles.ts":"77","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\dashboard\\styles.ts":"78","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\entire\\styles.ts":"79","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\layout\\topbar\\styles.ts":"80","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\layout\\sidebar\\styles.ts":"81","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\inspection\\styles.ts":"82","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\checklist\\styles.ts":"83","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\vulnerability\\styles.ts":"84","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\hooks\\useToggle.ts":"85","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\hooks\\useChangeToggle.ts":"86","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\asset\\card.tsx":"87","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\asset\\modal.tsx":"88","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\scan\\modal.tsx":"89","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\dashboard\\donut.tsx":"90","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\dashboard\\rank.tsx":"91","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\dashboard\\radar.tsx":"92","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\dashboard\\table.tsx":"93","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\dashboard\\vuln.tsx":"94","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\dashboard\\groupbar.tsx":"95","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\layout\\sidebar\\row.tsx":"96","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\vulnerability\\modal.tsx":"97","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\constant\\region.ts":"98","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\dashboard\\modal.tsx":"99"},{"size":651,"mtime":1610870465682,"results":"100","hashOfConfig":"101"},{"size":425,"mtime":499162500000,"results":"102","hashOfConfig":"101"},{"size":2696,"mtime":1621139437290,"results":"103","hashOfConfig":"101"},{"size":233,"mtime":1617498684160,"results":"104","hashOfConfig":"101"},{"size":11130,"mtime":1621226368754,"results":"105","hashOfConfig":"101"},{"size":9248,"mtime":1621361353557,"results":"106","hashOfConfig":"101"},{"size":551,"mtime":1610906268599,"results":"107","hashOfConfig":"101"},{"size":3705,"mtime":1621334851787,"results":"108","hashOfConfig":"101"},{"size":1610,"mtime":1621225467991,"results":"109","hashOfConfig":"101"},{"size":5293,"mtime":1621326798895,"results":"110","hashOfConfig":"101"},{"size":14555,"mtime":1621340967975,"results":"111","hashOfConfig":"101"},{"size":29213,"mtime":1621392640687,"results":"112","hashOfConfig":"101"},{"size":5430,"mtime":1621341272006,"results":"113","hashOfConfig":"101"},{"size":6724,"mtime":1621327220572,"results":"114","hashOfConfig":"101"},{"size":6338,"mtime":1621363379584,"results":"115","hashOfConfig":"101"},{"size":18548,"mtime":1621361358577,"results":"116","hashOfConfig":"101"},{"size":5696,"mtime":1621349194704,"results":"117","hashOfConfig":"101"},{"size":9689,"mtime":1621345483352,"results":"118","hashOfConfig":"101"},{"size":19132,"mtime":1621325918935,"results":"119","hashOfConfig":"101"},{"size":1399,"mtime":1621340917882,"results":"120","hashOfConfig":"101"},{"size":1722,"mtime":1621173394204,"results":"121","hashOfConfig":"101"},{"size":4625,"mtime":1621347037330,"results":"122","hashOfConfig":"101"},{"size":503,"mtime":1621393554127,"results":"123","hashOfConfig":"101"},{"size":26491,"mtime":1621356260119,"results":"124","hashOfConfig":"101"},{"size":6024,"mtime":1621326765292,"results":"125","hashOfConfig":"101"},{"size":3324,"mtime":1621341360640,"results":"126","hashOfConfig":"101"},{"size":1378,"mtime":1621337986515,"results":"127","hashOfConfig":"101"},{"size":5161,"mtime":1621387930604,"results":"128","hashOfConfig":"101"},{"size":4301,"mtime":1621345077096,"results":"129","hashOfConfig":"101"},{"size":2289,"mtime":1621361770092,"results":"130","hashOfConfig":"101"},{"size":1407,"mtime":1621326381324,"results":"131","hashOfConfig":"101"},{"size":1777,"mtime":1621363716865,"results":"132","hashOfConfig":"101"},{"size":1849,"mtime":1621363690205,"results":"133","hashOfConfig":"101"},{"size":3087,"mtime":1617179923642,"results":"134","hashOfConfig":"101"},{"size":282,"mtime":1610906486488,"results":"135","hashOfConfig":"101"},{"size":224,"mtime":1610905681514,"results":"136","hashOfConfig":"101"},{"size":9980,"mtime":1621391748173,"results":"137","hashOfConfig":"101"},{"size":1490,"mtime":1621332275715,"results":"138","hashOfConfig":"101"},{"size":2621,"mtime":1621336449939,"results":"139","hashOfConfig":"101"},{"size":1077,"mtime":1617452674602,"results":"140","hashOfConfig":"101"},{"size":410800,"mtime":1621392584843,"results":"141","hashOfConfig":"101"},{"size":8661,"mtime":1621359564903,"results":"142","hashOfConfig":"101"},{"size":4334,"mtime":1621349841870,"results":"143","hashOfConfig":"101"},{"size":2677,"mtime":1621351166211,"results":"144","hashOfConfig":"101"},{"size":3440,"mtime":1621391731057,"results":"145","hashOfConfig":"101"},{"size":11734,"mtime":1621391345410,"results":"146","hashOfConfig":"101"},{"size":6136,"mtime":1621391749896,"results":"147","hashOfConfig":"101"},{"size":11615,"mtime":1621393054627,"results":"148","hashOfConfig":"101"},{"size":10290,"mtime":1621390501298,"results":"149","hashOfConfig":"101"},{"size":651,"mtime":1610870465682,"results":"150","hashOfConfig":"151"},{"size":425,"mtime":499162500000,"results":"152","hashOfConfig":"151"},{"size":2696,"mtime":1621139437290,"results":"153","hashOfConfig":"151"},{"size":233,"mtime":1617498684160,"results":"154","hashOfConfig":"151"},{"size":9248,"mtime":1621361353557,"results":"155","hashOfConfig":"151"},{"size":11130,"mtime":1621226368754,"results":"156","hashOfConfig":"151"},{"size":551,"mtime":1610906268599,"results":"157","hashOfConfig":"151"},{"size":3705,"mtime":1621334851787,"results":"158","hashOfConfig":"151"},{"size":26414,"mtime":1621394895432,"results":"159","hashOfConfig":"151"},{"size":5293,"mtime":1621326798895,"results":"160","hashOfConfig":"151"},{"size":6724,"mtime":1621327220572,"results":"161","hashOfConfig":"151"},{"size":1610,"mtime":1621225467991,"results":"162","hashOfConfig":"151"},{"size":14730,"mtime":1621402180383,"results":"163","hashOfConfig":"151"},{"size":29253,"mtime":1621402391782,"results":"164","hashOfConfig":"151"},{"size":6338,"mtime":1621363379584,"results":"165","hashOfConfig":"151"},{"size":18548,"mtime":1621361358577,"results":"166","hashOfConfig":"151"},{"size":19132,"mtime":1621325918935,"results":"167","hashOfConfig":"151"},{"size":9689,"mtime":1621345483352,"results":"168","hashOfConfig":"151"},{"size":1722,"mtime":1621173394204,"results":"169","hashOfConfig":"151"},{"size":1399,"mtime":1621340917882,"results":"170","hashOfConfig":"151"},{"size":5696,"mtime":1621402966316,"results":"171","hashOfConfig":"151"},{"size":5430,"mtime":1621341272006,"results":"172","hashOfConfig":"151"},{"size":503,"mtime":1621393554127,"results":"173","hashOfConfig":"151"},{"size":410800,"mtime":1621392584843,"results":"174","hashOfConfig":"151"},{"size":3823,"mtime":1621394883767,"results":"175","hashOfConfig":"151"},{"size":6024,"mtime":1621326765292,"results":"176","hashOfConfig":"151"},{"size":3324,"mtime":1621341360640,"results":"177","hashOfConfig":"151"},{"size":1378,"mtime":1621337986515,"results":"178","hashOfConfig":"151"},{"size":7537,"mtime":1621402991852,"results":"179","hashOfConfig":"151"},{"size":1777,"mtime":1621363716865,"results":"180","hashOfConfig":"151"},{"size":1407,"mtime":1621326381324,"results":"181","hashOfConfig":"151"},{"size":3087,"mtime":1617179923642,"results":"182","hashOfConfig":"151"},{"size":1849,"mtime":1621363690205,"results":"183","hashOfConfig":"151"},{"size":2289,"mtime":1621361770092,"results":"184","hashOfConfig":"151"},{"size":4326,"mtime":1621402598902,"results":"185","hashOfConfig":"151"},{"size":224,"mtime":1610905681514,"results":"186","hashOfConfig":"151"},{"size":282,"mtime":1610906486488,"results":"187","hashOfConfig":"151"},{"size":1490,"mtime":1621332275715,"results":"188","hashOfConfig":"151"},{"size":9980,"mtime":1621391748173,"results":"189","hashOfConfig":"151"},{"size":4625,"mtime":1621347037330,"results":"190","hashOfConfig":"151"},{"size":11734,"mtime":1621391345410,"results":"191","hashOfConfig":"151"},{"size":3440,"mtime":1621391731057,"results":"192","hashOfConfig":"151"},{"size":11615,"mtime":1621393054627,"results":"193","hashOfConfig":"151"},{"size":2677,"mtime":1621351166211,"results":"194","hashOfConfig":"151"},{"size":10249,"mtime":1621403075627,"results":"195","hashOfConfig":"151"},{"size":6136,"mtime":1621391749896,"results":"196","hashOfConfig":"151"},{"size":2621,"mtime":1621336449939,"results":"197","hashOfConfig":"151"},{"size":8661,"mtime":1621359564903,"results":"198","hashOfConfig":"151"},{"size":1077,"mtime":1617452674602,"results":"199","hashOfConfig":"151"},{"size":8661,"mtime":1621403073979,"results":"200","hashOfConfig":"151"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},"8mpqih",{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"203"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"203"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"203"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"203"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"203"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"203"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"203"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"203"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"203"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"203"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"203"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"203"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"203"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"203"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"203"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"203"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"203"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"203"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},"v1qivc",{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"327"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"327"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"327"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"327"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"327"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"352","messages":"353","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"354","messages":"355","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"327"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"327"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"327"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"327"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"327"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"327"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"327"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"327"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"327"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"327"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"327"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"327"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"416","messages":"417","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"327"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"327"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"327"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\index.tsx",[],["426","427"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\reportWebVitals.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\App.tsx",["428","429","430","431","432","433","434"],"import React, { useEffect } from \"react\";\nimport {\n  Route,\n  BrowserRouter as Router,\n  useHistory,\n  useLocation,\n} from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport Login from \"./components/login\";\nimport Sidebar from \"./components/layout/sidebar\";\nimport Topbar from \"./components/layout/topbar\";\nimport Dashboard from \"./components/service/dashboard\";\nimport Landing from \"./components/landing\";\nimport Setting from \"./components/service/setting\";\nimport Checklist from \"./components/service/checklist\";\nimport Scan from \"./components/service/scan\";\nimport Asset from \"./components/service/asset\";\nimport AssetDetail from \"./components/service/asset/detail\";\nimport Signup from \"./components/signup\";\nimport ScanDetail from \"./components/service/scan/detail\";\nimport Vlun from \"./components/service/vulnerability\";\nimport Inspection from \"./components/service/inspection\";\nimport Entire from \"./components/service/entire\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div\n      className=\"App\"\n      style={{\n        height:\n          window.location.href.split(\"/\")[3] == \"\" ||\n          window.location.href.split(\"/\")[3] == \"landing\"\n            ? \"100%\"\n            : \"fit-content\",\n      }}\n    >\n      <Router>\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/landing\" component={Landing} />\n        <Route exact path=\"/\" component={Landing} />\n        <Route exact path=\"/signup\" component={Signup} />\n        <Route path=\"/service\" component={Sidebar} />\n        <div\n          className={`${\n            window.location.href.indexOf(\"service\") != -1 && \"Content\"\n          }`}\n        >\n          <Route path=\"/service\" component={Topbar} />\n          <Route exact path=\"/service\" component={Dashboard} />\n          <Route exact path=\"/service/dashboard\" component={Dashboard} />\n          <Route exact path=\"/service/asset\" component={Asset} />\n          <Route path=\"/service/asset/detail\" component={AssetDetail} />\n          <Route exact path=\"/service/setting\" component={Setting} />\n          <Route exact path=\"/service/checklist\" component={Checklist} />\n          <Route exact path=\"/service/manage\" component={Scan} />\n          <Route exact path=\"/service/manage/scan\" component={Scan} />\n          <Route path=\"/service/manage/scan/detail\" component={ScanDetail} />\n          <Route exact path=\"/service/manage/vlun\" component={Vlun} />\n          <Route\n            exact\n            path=\"/service/manage/inspection\"\n            component={Inspection}\n          />\n          <Route exact path=\"/service/manage/entire\" component={Entire} />\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\store\\index.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\asset\\detail.tsx",["435","436","437","438","439"],"import React, { useEffect, useState } from \"react\";\r\nimport { detailStyles } from \"./styles\";\r\nimport qs from \"qs\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { requestInit } from \"../../../constant/requestInit\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AWSChecklist } from \"../../../constant/checklist\";\r\nimport { CachedTwoTone } from \"@material-ui/icons\";\r\n\r\ninterface IAssetDetail {\r\n  service: string;\r\n  resourceId: string;\r\n  tag: { key: string; value: string }[];\r\n  detail: IServiceDetail[];\r\n}\r\n\r\ninterface IServiceDetail {\r\n  assessment_id: string;\r\n  date: string;\r\n  service: string;\r\n  chkIndex: string;\r\n  name: string;\r\n  risk: string;\r\n}\r\n\r\ninterface IFetchData {\r\n  accessKey: string;\r\n  secretKey: string;\r\n  regionName: string;\r\n}\r\n\r\nexport default function AssetDetail({ location }: any): JSX.Element {\r\n  const query = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  const classes = detailStyles();\r\n  const history = useHistory();\r\n\r\n  const [detailData, setDetail] =\r\n    useState<IAssetDetail[] | undefined>(undefined);\r\n  const [accountInfo, setAccountInfo] =\r\n    useState<IFetchData | undefined>(undefined);\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n\r\n  const getAccountInfo = async () => {\r\n    await fetch(\r\n      `http://localhost:4000/api/asset?id=${query.account_id}`,\r\n      requestInit(\"GET\")\r\n    )\r\n      .then((res) => res.json())\r\n      .then(async (res) => {\r\n        await setAccountInfo({\r\n          accessKey: res.accounts[0].accessKey,\r\n          secretKey: res.accounts[0].secretKey,\r\n          regionName: res.accounts[0].region,\r\n        });\r\n      })\r\n      .then(async () => {\r\n        await getResourceInfo();\r\n      });\r\n  };\r\n\r\n  const requestAccount = async () => {\r\n    setDetail([]);\r\n    localStorage.setItem(\"state\", \"isLoading\");\r\n    await fetch(\r\n      `http://116.43.4.229:10831/resources`,\r\n      requestInit(\"POST\", accountInfo)\r\n    ).then(async () => {\r\n      localStorage.removeItem(\"state\");\r\n      getResourceInfo();\r\n    });\r\n  };\r\n\r\n  const getResourceInfo = async () => {\r\n    let detail_list: IAssetDetail[] = [];\r\n\r\n    let historyId = \"\";\r\n    let assessment_id = \"\";\r\n    let date = \"\";\r\n\r\n    if (accountInfo) {\r\n      await fetch(\r\n        `http://116.43.4.229:10831/resources?accessKey=${accountInfo.accessKey}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then(async (res) => {\r\n          await res.map(async (o: any, idx: any) => {\r\n            let temp: IAssetDetail = {\r\n              service: o.service,\r\n              resourceId: o.resourceId,\r\n              tag: o.tag,\r\n              detail: [],\r\n            };\r\n\r\n            await fetch(\r\n              `http://116.43.4.229:10831/assessment-results?resourceId=${o.resourceId}`\r\n            )\r\n              .then((res2) => res2.json())\r\n              .then(async (res2) => {\r\n                if (res2.length > 0) {\r\n                  if (res2[0].history.historyId != historyId) {\r\n                    historyId = res2[0].history.historyId;\r\n\r\n                    await fetch(\r\n                      `http://localhost:4000/api/history/id?id=${res2[0].history.historyId}`\r\n                    )\r\n                      .then((res3) => res3.json())\r\n                      .then(async (res3) => {\r\n                        if (res3.history) {\r\n                          assessment_id = res3.history.assessment_id;\r\n                          date = res3.history.start_date;\r\n                        }\r\n                      });\r\n                  }\r\n\r\n                  await res2.map(async (x: any) => {\r\n                    let chk = \"\";\r\n\r\n                    for (let i = 0; i < 3 - String(x.chkIndex).length; i++) {\r\n                      chk += \"0\";\r\n                    }\r\n\r\n                    for (let check of AWSChecklist) {\r\n                      if (check.index == `${x.service}_${chk}${x.chkIndex}`) {\r\n                        temp.detail.push({\r\n                          assessment_id: assessment_id,\r\n                          date: date,\r\n                          service: x.service,\r\n                          chkIndex: x.chkIndex,\r\n                          name: check.name,\r\n                          risk: check.risk,\r\n                        });\r\n\r\n                        break;\r\n                      }\r\n                    }\r\n                  });\r\n                }\r\n              })\r\n              .then(() => {\r\n                detail_list.push(temp);\r\n              });\r\n            if (res.length - 1 == idx) {\r\n              setDetail(detail_list);\r\n            }\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (document.cookie === \"path=/\" || document.cookie === \"\") {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"로그인 에러\",\r\n        text: \"로그인후에 이용해주세요.\",\r\n        heightAuto: false,\r\n      }).then(() => {\r\n        window.location.href = \"/login\";\r\n        return;\r\n      });\r\n    }\r\n\r\n    getAccountInfo();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getResourceInfo();\r\n  }, [accountInfo]);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"state\")) {\r\n      setLoading(true);\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [detailData]);\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className={classes.header}>\r\n        <div className={classes.headerText}>\r\n          세부정보\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.headerButton}\r\n            onClick={() => {\r\n              history.push(\"/service/asset\");\r\n            }}\r\n          >\r\n            뒤로가기\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes.content}>\r\n        <div className={classes.contentHeader}></div>\r\n        <div className={classes.tableWrapper}>\r\n          <MaterialTable\r\n            title={\r\n              <div className={classes.tableHeader}>\r\n                <div className={classes.tableHeaderText}>자산목록</div>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.headerButton}\r\n                  onClick={async () => {\r\n                    const account_id = query.account_id;\r\n                    let assessment_manager;\r\n\r\n                    const { value: getName } = await Swal.fire({\r\n                      title: \"점검 관리자를 입력해주세요.\",\r\n                      input: \"text\",\r\n                      confirmButtonText: \"확인\",\r\n                      showCancelButton: true,\r\n                      cancelButtonText: \"취소\",\r\n                      inputPlaceholder: \"관리자명\",\r\n                      heightAuto: false,\r\n                    });\r\n\r\n                    if (getName) {\r\n                      assessment_manager = getName;\r\n                    } else return;\r\n\r\n                    const body = {\r\n                      account_id: account_id,\r\n                      assessment_manager: assessment_manager,\r\n                    };\r\n\r\n                    let response = await fetch(\r\n                      \"http://localhost:4000/api/assessment\",\r\n                      requestInit(\"POST\", body)\r\n                    ).then((res) => res.json());\r\n\r\n                    if (response.result) {\r\n                      Swal.fire({\r\n                        icon: \"success\",\r\n                        title: \"생성완료!\",\r\n                        text: \"스캔 페이지로 이동하시겠습니까?\",\r\n                        showCancelButton: true,\r\n                        heightAuto: false,\r\n                      }).then((result) => {\r\n                        if (result.isConfirmed) {\r\n                          history.push(\"/service/manage/scan\");\r\n                        }\r\n                      });\r\n                    }\r\n                  }}\r\n                >\r\n                  진단 대기열 추가\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.headerButton}\r\n                  onClick={requestAccount}\r\n                >\r\n                  리소스 목록 가져오기\r\n                </Button>\r\n                {isLoading && (\r\n                  <CachedTwoTone className={`${classes.loadingIcon} loading`} />\r\n                )}\r\n              </div>\r\n            }\r\n            columns={[\r\n              { title: \"서비스\", field: \"service\" },\r\n              { title: \"리소스 ID(ARN)\", field: \"resourceId\" },\r\n              { title: \"태그\", field: \"tag\", render: (rowData) => <div></div> },\r\n              {\r\n                title: \"취약점 이력\",\r\n                field: \"detail\",\r\n                render: (rowData) => <div></div>,\r\n              },\r\n            ]}\r\n            data={detailData as IAssetDetail[]}\r\n            options={{\r\n              exportButton: true,\r\n              selection: false,\r\n            }}\r\n            detailPanel={(rowData) => {\r\n              if (rowData.detail.length > 0)\r\n                return (\r\n                  <div className={classes.innerTable}>\r\n                    <table className={classes.table}>\r\n                      <thead className={classes.thead}>\r\n                        <tr className={classes.tr}>\r\n                          <th className={classes.th}>진단번호</th>\r\n                          <th className={classes.th}>일자</th>\r\n                          <th className={classes.th}>서비스</th>\r\n                          <th className={classes.th}>리스트번호</th>\r\n                          <th className={classes.th}>항목명</th>\r\n                          <th className={classes.th}>위험도</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className={classes.tbody}>\r\n                        {rowData.detail.map((o, idx) => {\r\n                          return (\r\n                            <tr\r\n                              className={classes.tr}\r\n                              key={`service-detail-${idx}`}\r\n                            >\r\n                              <td className={classes.td}>{o.assessment_id}</td>\r\n                              <td className={classes.td}>{o.date}</td>\r\n                              <td className={classes.td}>{o.service}</td>\r\n                              <td className={classes.td}>{o.chkIndex}</td>\r\n                              <td className={classes.td}>{o.name}</td>\r\n                              <td className={classes.td}>{o.risk}</td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                );\r\n            }}\r\n            onRowClick={(event, rowData, toggleDetailPanel: any) => {\r\n              toggleDetailPanel();\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\scan\\detail.tsx",["440","441","442","443","444","445","446","447","448","449","450","451","452","453","454"],"import React, { useEffect, useState } from \"react\";\r\nimport { detailStyles } from \"./styles\";\r\nimport qs from \"qs\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { AWSChecklist } from \"../../../constant/checklist\";\r\nimport Modal from \"./detailModal\";\r\nimport { useHistory } from \"react-router\";\r\nimport Swal from \"sweetalert2\";\r\n\r\ninterface IVuln {\r\n  id: string;\r\n  assessment_id: string;\r\n  service: string;\r\n  chkIndex: string;\r\n  name: string;\r\n  risk: string;\r\n  date: string;\r\n  status: string;\r\n  summary: any;\r\n  comment: string;\r\n}\r\n\r\ninterface IAccountInfo {\r\n  id: string;\r\n  systemId: string;\r\n  manager: string;\r\n  platform: string;\r\n  type: string;\r\n  name: string;\r\n  accessKey: string;\r\n  secretKey: string;\r\n}\r\n\r\ninterface IModalInfo {\r\n  result: string;\r\n  id: string;\r\n  comment: string;\r\n  isFetch: boolean;\r\n}\r\n\r\nexport default function ScanDetail({ location }: any): JSX.Element {\r\n  const query = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true, // /about?details=true 에서 쿼리 주소의 '?'를 생략해주는 옵션\r\n  });\r\n  const classes = detailStyles();\r\n  const history = useHistory();\r\n\r\n  const [vulnList, setVuln] = useState<IVuln[] | undefined>(undefined);\r\n  const [modal, setModal] = useState<boolean>(true);\r\n  const [info, setInfo] = useState<IModalInfo>({\r\n    id: \"\",\r\n    result: \"\",\r\n    comment: \"\",\r\n    isFetch: false,\r\n  });\r\n\r\n  const getVulnList = async () => {\r\n    let vuln_List: IVuln[] = [];\r\n\r\n    await fetch(\r\n      `http://localhost:4000/api/history/last?assessment_id=${query.assessment_id}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then(async (res) => {\r\n        if (res.result) {\r\n          await fetch(\r\n            `http://116.43.4.229:10831/assessment-results?historyId=${res.history.id}`\r\n          )\r\n            .then((res2) => res2.json())\r\n            .then(async (res2) => {\r\n              if (Array.isArray(res2)) {\r\n                res2.map((y: any) => {\r\n                  let name = \"\";\r\n                  let risk = \"\";\r\n\r\n                  let chk = \"\";\r\n\r\n                  for (let i = 0; i < 3 - String(y.chkIndex).length; i++) {\r\n                    chk += \"0\";\r\n                  }\r\n\r\n                  for (let check of AWSChecklist) {\r\n                    if (check.index == `${y.service}_${chk}${y.chkIndex}`) {\r\n                      name = check.name;\r\n                      risk = check.risk;\r\n                      break;\r\n                    }\r\n                  }\r\n\r\n                  let result = \"\";\r\n                  let qcheck = false;\r\n                  let dqcheck = false;\r\n\r\n                  y.rawData.split(\"\").map((o: any) => {\r\n                    if (o == \"'\") qcheck = !qcheck;\r\n                    if (o == '\"' && !qcheck) dqcheck = !dqcheck;\r\n\r\n                    if (dqcheck) {\r\n                      result += o;\r\n                    } else if (qcheck) {\r\n                      if (o == '\"') {\r\n                        result += '\\\\\"';\r\n                      } else {\r\n                        if (o == \"'\") {\r\n                          result += '\"';\r\n                        } else {\r\n                          result += o;\r\n                        }\r\n                      }\r\n                    } else {\r\n                      if (o == \"'\") {\r\n                        result += '\"';\r\n                      } else {\r\n                        result += o;\r\n                      }\r\n                    }\r\n                  });\r\n\r\n                  let temp = \"\";\r\n\r\n                  result.split(\"datetime.datetime(\").map((o, idx) => {\r\n                    if (idx % 2 == 1) {\r\n                      let str = o.split(\", tzinfo=tzutc())\");\r\n                      temp += '\"datetime.datetime(';\r\n                      temp += str[0];\r\n                      temp += ', tzinfo=tzutc())\"';\r\n                      temp += str[1];\r\n                    } else {\r\n                      temp += o;\r\n                    }\r\n                  });\r\n\r\n                  result = temp;\r\n\r\n                  vuln_List.push({\r\n                    id: y.id,\r\n                    assessment_id: query.assessment_id as string,\r\n                    service: y.service,\r\n                    chkIndex: y.chkIndex,\r\n                    name: name,\r\n                    risk: risk,\r\n                    date: res.history.start_date,\r\n                    status: y.result,\r\n                    summary: JSON.parse(\r\n                      result.replace(/True/g, \"true\").replace(/False/g, \"false\")\r\n                    ).summary,\r\n                    comment: y.interviewContent,\r\n                  });\r\n                });\r\n              }\r\n            })\r\n            .then(() => {\r\n              setVuln(vuln_List);\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (document.cookie === \"path=/\" || document.cookie === \"\") {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"로그인 에러\",\r\n        text: \"로그인후에 이용해주세요.\",\r\n        heightAuto: false,\r\n      }).then(() => {\r\n        window.location.href = \"/login\";\r\n        return;\r\n      });\r\n    }\r\n\r\n    getVulnList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (info.isFetch) {\r\n      let vuln_list: IVuln[] = [];\r\n\r\n      vulnList?.map((o) => {\r\n        if (o.id == info.id) {\r\n          vuln_list.push({ ...o, status: info.result, comment: info.comment });\r\n        } else {\r\n          vuln_list.push(o);\r\n        }\r\n      });\r\n\r\n      setVuln(vuln_list);\r\n    }\r\n  }, [info]);\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className={classes.header}>\r\n        <div className={classes.headerText}>\r\n          취약점현황\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.headerButton}\r\n            onClick={() => {\r\n              history.push(\"/service/manage/scan\");\r\n            }}\r\n          >\r\n            뒤로가기\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes.content}>\r\n        <div className={classes.contentHeader}></div>\r\n        <div className={classes.tableWrapper}>\r\n          <MaterialTable\r\n            title=\"\"\r\n            columns={[\r\n              {\r\n                title: \"번호\",\r\n                field: \"id\",\r\n                cellStyle: { width: \"5.5%\" },\r\n              },\r\n              {\r\n                title: \"리스트번호\",\r\n                field: \"chkIndex\",\r\n                cellStyle: { width: \"8%\" },\r\n                render: (rowData) => {\r\n                  let chk = \"\";\r\n\r\n                  for (\r\n                    let i = 0;\r\n                    i < 3 - String(rowData.chkIndex).length;\r\n                    i++\r\n                  ) {\r\n                    chk += \"0\";\r\n                  }\r\n                  return (\r\n                    <React.Fragment>{`${rowData.service}_${chk}${rowData.chkIndex}`}</React.Fragment>\r\n                  );\r\n                },\r\n              },\r\n              { title: \"항목명\", field: \"name\" },\r\n              { title: \"위험도\", field: \"risk\", cellStyle: { width: \"6.5%\" } },\r\n              {\r\n                title: \"진단날짜\",\r\n                field: \"date\",\r\n                cellStyle: { width: \"11.6%\" },\r\n              },\r\n              { title: \"결과\", field: \"status\", cellStyle: { width: \"6%\" } },\r\n              {\r\n                title: \"요약\",\r\n                field: \"summary\",\r\n                render: (rowData) => {\r\n                  return <div>{rowData.summary}</div>;\r\n                },\r\n              },\r\n              {\r\n                title: \"코멘트\",\r\n                field: \"comment\",\r\n                cellStyle: { width: \"11.6%\" },\r\n              },\r\n              {\r\n                title: \"상세보기\",\r\n                field: \"\",\r\n                cellStyle: { width: \"7.8%\" },\r\n                render: (rowData) => {\r\n                  return (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        setInfo({\r\n                          result: rowData.status,\r\n                          id: rowData.id,\r\n                          comment: rowData.comment || \"\",\r\n                          isFetch: false,\r\n                        });\r\n                        setModal(false);\r\n                      }}\r\n                    >\r\n                      상세보기\r\n                    </Button>\r\n                  );\r\n                },\r\n              },\r\n            ]}\r\n            data={vulnList as IVuln[]}\r\n            options={{\r\n              exportButton: {\r\n                csv: true,\r\n                pdf: false,\r\n              },\r\n              selection: false,\r\n              exportFileName: \"취약점 현황\",\r\n              exportAllData: true,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={`${classes.overlay} ${modal && classes.visibility}`}\r\n        onClick={() => {\r\n          setModal(true);\r\n        }}\r\n      ></div>\r\n      <Modal modal={modal} setModal={setModal} info={info} setInfo={setInfo} />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\store\\toggleMenu.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\asset\\index.tsx",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\landing\\index.tsx",["455","456"],"import { DonutLarge } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { landingStyles } from \"./styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Landing() {\r\n  const classes = landingStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className={classes.header}>\r\n        <div className={classes.headerLogo}>\r\n          <DonutLarge />\r\n          <span>DDDG</span>\r\n        </div>\r\n        <div\r\n          className={classes.login}\r\n          onClick={() => {\r\n            window.location.href = \"/login\";\r\n          }}\r\n        >\r\n          LOGIN\r\n        </div>\r\n      </div>\r\n      <div className={classes.bodyContainer}>\r\n        <div className={classes.overlay} />\r\n        <div className={classes.overlayShadow} />\r\n        <div className={classes.content}>\r\n          <div className={classes.main}>\r\n            <h3 className={classes.title}>안녕하세요 팀 DDDG입니다</h3>\r\n            <h1 className={classes.description}>\r\n              클라우드 보안을 위한\r\n              <br />\r\n              CSPM 보안 솔루션\r\n              <br />\r\n              서비스 페이지 입니다.\r\n            </h1>\r\n            <div className={classes.buttonLayout}>\r\n              <a href=\"/service\" className={classes.homeButton}>\r\n                Start a Project\r\n              </a>\r\n              <a href=\"\" className={classes.homeButton}>\r\n                More About Us\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\login\\index.tsx",["457","458"],"import React, { useState } from \"react\";\r\nimport { loginStyles } from \"./styles\";\r\nimport {\r\n  Visibility,\r\n  VisibilityOff,\r\n  Facebook,\r\n  Twitter,\r\n  DonutLarge,\r\n} from \"@material-ui/icons\";\r\nimport { requestInit } from \"../../constant/requestInit\";\r\nimport Swal from \"sweetalert2\";\r\n\r\ninterface ILogin {\r\n  id: string;\r\n  password: string;\r\n}\r\n\r\nexport default function Login() {\r\n  const classes = loginStyles();\r\n  const [passwdVisible, setVisible] = useState<boolean>(false);\r\n  const [info, setInfo] = useState<ILogin>({ id: \"\", password: \"\" });\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div>\r\n        <div\r\n          className={classes.headerLogo}\r\n          onClick={() => {\r\n            window.location.href = \"/\";\r\n          }}\r\n        >\r\n          <DonutLarge />\r\n          <span>DDDG</span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.loginBox}>\r\n        <div className={classes.wrapper}>\r\n          <div>\r\n            <div className={classes.header}>로그인</div>\r\n            <div className={classes.connection}>\r\n              <a href=\"\" className={classes.facebook}>\r\n                <Facebook />\r\n                페이스북으로 로그인\r\n              </a>\r\n              <a href=\"\" className={classes.google}>\r\n                <Twitter />\r\n                트위터로 로그인\r\n              </a>\r\n            </div>\r\n\r\n            <div className={classes.subHeader}>\r\n              <div>아이디로 로그인</div>\r\n            </div>\r\n\r\n            <div className={classes.id}>\r\n              <input\r\n                type=\"text\"\r\n                className={classes.input}\r\n                placeholder=\"아이디\"\r\n                onChange={(event: any) => {\r\n                  setInfo({ ...info, id: event.target.value });\r\n                }}\r\n              />\r\n              <span className={classes.focusInput}></span>\r\n            </div>\r\n\r\n            <div className={classes.password}>\r\n              <span\r\n                className={classes.showPasswd}\r\n                onClick={() => {\r\n                  setVisible(!passwdVisible);\r\n                }}\r\n              >\r\n                {passwdVisible ? <VisibilityOff /> : <Visibility />}\r\n              </span>\r\n              <input\r\n                type={`${passwdVisible ? \"text\" : \"password\"}`}\r\n                className={classes.input}\r\n                placeholder=\"비밀번호\"\r\n                onChange={(event: any) => {\r\n                  setInfo({ ...info, password: event.target.value });\r\n                }}\r\n              />\r\n              <span className={classes.focusInput}></span>\r\n            </div>\r\n\r\n            <div className={classes.login}>\r\n              <button\r\n                className={classes.loginButton}\r\n                onClick={async () => {\r\n                  if (info.id === \"\") {\r\n                    Swal.fire({\r\n                      icon: \"error\",\r\n                      title: \"아이디 값이 비어있습니다.\",\r\n                      text: \"값을 채워주십시오.\",\r\n                      heightAuto: false,\r\n                    });\r\n                    return;\r\n                  }\r\n\r\n                  if (info.password === \"\") {\r\n                    Swal.fire({\r\n                      icon: \"error\",\r\n                      title: \"비밀번호 값이 비어있습니다.\",\r\n                      text: \"값을 채워주십시오.\",\r\n                      heightAuto: false,\r\n                    });\r\n                    return;\r\n                  }\r\n\r\n                  const body = info;\r\n\r\n                  const response: any = await fetch(\r\n                    \"http://localhost:4000/api/account/login\",\r\n                    requestInit(\"POST\", body)\r\n                  ).then((res) => res.json());\r\n\r\n                  if (response.result) {\r\n                    document.cookie = `token=${response.token}`;\r\n                    document.cookie = `path=/;`;\r\n                    localStorage.setItem(\"systemId\", info.id);\r\n\r\n                    Swal.fire({\r\n                      icon: \"success\",\r\n                      title: \"로그인 성공!\",\r\n                      text: \"서비스 화면으로 이동합니다.\",\r\n                      heightAuto: false,\r\n                    }).then((result) => {\r\n                      if (result.isConfirmed) {\r\n                        window.location.href = \"/service/dashboard\";\r\n                      }\r\n                    });\r\n                  } else {\r\n                    Swal.fire({\r\n                      icon: \"error\",\r\n                      title: \"로그인 실패..\",\r\n                      text: \"아이디 또는 비밀번호를 확인해주세요.\",\r\n                      heightAuto: false,\r\n                    });\r\n                  }\r\n                }}\r\n              >\r\n                로그인\r\n              </button>\r\n            </div>\r\n\r\n            <div className={classes.signup}>\r\n              <div className={classes.signupContent}>\r\n                <span>Don't have an account?</span>\r\n              </div>\r\n\r\n              <a href=\"/signup\" className={classes.signupButton}>\r\n                회원 가입\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\setting\\index.tsx",["459","460"],"import React, { useEffect, useState } from \"react\";\r\nimport { settingStyles } from \"./styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { requestInit } from \"../../../constant/requestInit\";\r\n\r\ninterface IChange {\r\n  currentPassword: string;\r\n  checkPassword: string;\r\n  newPassword: string;\r\n}\r\n\r\ninterface IDelete {\r\n  currentPassword: string;\r\n  checkPassword: string;\r\n  check: boolean;\r\n}\r\n\r\nexport default function Setting() {\r\n  const classes = settingStyles();\r\n  const history = useHistory();\r\n  const [changePassword, setChangePassword] = useState<IChange>({\r\n    checkPassword: \"\",\r\n    currentPassword: \"\",\r\n    newPassword: \"\",\r\n  });\r\n  const [deleteInfo, setDelete] = useState<IDelete>({\r\n    checkPassword: \"\",\r\n    currentPassword: \"\",\r\n    check: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (document.cookie === \"path=/\" || document.cookie === \"\") {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"로그인 에러\",\r\n        text: \"로그인후에 이용해주세요.\",\r\n        heightAuto: false,\r\n      }).then(() => {\r\n        window.location.href = \"/login\";\r\n        return;\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className={classes.header}>\r\n        <div className={classes.headerText}>설정</div>\r\n      </div>\r\n\r\n      <div className={classes.content}>\r\n        <div className={classes.contentHeader}>\r\n          <div className={classes.section}>\r\n            <div className={classes.sectionHeader}>비밀번호 변경</div>\r\n            <div className={classes.sectionContent}>\r\n              <div className={classes.inputWrapper}>\r\n                <TextField\r\n                  required\r\n                  id=\"filled-required\"\r\n                  label=\"현재비밀번호\"\r\n                  variant=\"filled\"\r\n                  value={changePassword.currentPassword}\r\n                  onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n                    setChangePassword({\r\n                      ...changePassword,\r\n                      currentPassword: event.target.value as string,\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className={classes.inputWrapper}>\r\n                <TextField\r\n                  required\r\n                  id=\"filled-required\"\r\n                  label=\"비밀번호확인\"\r\n                  variant=\"filled\"\r\n                  value={changePassword.checkPassword}\r\n                  onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n                    setChangePassword({\r\n                      ...changePassword,\r\n                      checkPassword: event.target.value as string,\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className={classes.inputWrapper}>\r\n                <TextField\r\n                  required\r\n                  id=\"filled-required\"\r\n                  label=\"새비밀번호\"\r\n                  variant=\"filled\"\r\n                  value={changePassword.newPassword}\r\n                  onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n                    setChangePassword({\r\n                      ...changePassword,\r\n                      newPassword: event.target.value as string,\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className={classes.buttonWrapper}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    if (\r\n                      changePassword.checkPassword === \"\" ||\r\n                      changePassword.currentPassword === \"\" ||\r\n                      changePassword.newPassword === \"\"\r\n                    ) {\r\n                      Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"빈 값이 존재합니다\",\r\n                        text: \"값을 채워주세요\",\r\n                        heightAuto: false,\r\n                      });\r\n                      return;\r\n                    }\r\n\r\n                    if (\r\n                      changePassword.checkPassword !==\r\n                      changePassword.currentPassword\r\n                    ) {\r\n                      Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"비밀번호가 일치하지 않습니다\",\r\n                        text: \"비밀번호를 확인해주세요\",\r\n                        heightAuto: false,\r\n                      });\r\n\r\n                      return;\r\n                    }\r\n\r\n                    fetch(\r\n                      `http://localhost:4000/api/account`,\r\n                      requestInit(\r\n                        \"PUT\",\r\n                        {\r\n                          password: changePassword.currentPassword,\r\n                          new_password: changePassword.newPassword,\r\n                        },\r\n                        true\r\n                      )\r\n                    )\r\n                      .then((res) => res.json())\r\n                      .then((res) => {\r\n                        if (res.result === true) {\r\n                          if (res.msg === \"password is not valid\") {\r\n                            Swal.fire({\r\n                              icon: \"error\",\r\n                              title: \"비밀번호가 올바르지 않습니다.\",\r\n                              text: \"비밀번호를 확인해주세요.\",\r\n                              heightAuto: false,\r\n                            });\r\n                          } else if (res.msg === \"token is not valid\") {\r\n                            document.cookie =\r\n                              \"token=; expires=Thu, 01 Jan 1999 00:00:10 GMT;\";\r\n                            localStorage.removeItem(\"systemId\");\r\n                            Swal.fire({\r\n                              icon: \"error\",\r\n                              title: \"로그인 토큰이 만료되었습니다.\",\r\n                              text: \"다시 로그인 해주세요.\",\r\n                              heightAuto: false,\r\n                            }).then(() => {\r\n                              document.cookie =\r\n                                \"token=; expires=Thu, 01 Jan 1999 00:00:10 GMT;\";\r\n                              localStorage.removeItem(\"systemId\");\r\n                              window.location.href = \"/login\";\r\n                            });\r\n                          } else {\r\n                            document.cookie =\r\n                              \"token=; expires=Thu, 01 Jan 1999 00:00:10 GMT;\";\r\n                            localStorage.removeItem(\"systemId\");\r\n                            Swal.fire({\r\n                              icon: \"success\",\r\n                              title: \"비밀번호 변경이 완료되었습니다.\",\r\n                              text: \"다시 로그인 해주세요.\",\r\n                              heightAuto: false,\r\n                            }).then(() => {\r\n                              document.cookie =\r\n                                \"token=; expires=Thu, 01 Jan 1999 00:00:10 GMT;\";\r\n                              localStorage.removeItem(\"systemId\");\r\n                              window.location.href = \"/login\";\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                  }}\r\n                >\r\n                  변경\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={classes.section}>\r\n            <div className={classes.sectionHeader}>회원탈퇴</div>\r\n            <div className={classes.sectionContent}>\r\n              <div className={classes.inputWrapper}>\r\n                <TextField\r\n                  required\r\n                  id=\"filled-required\"\r\n                  label=\"현재비밀번호\"\r\n                  variant=\"filled\"\r\n                  value={deleteInfo.currentPassword}\r\n                  onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n                    setDelete({\r\n                      ...deleteInfo,\r\n                      currentPassword: event.target.value as string,\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className={classes.inputWrapper}>\r\n                <TextField\r\n                  required\r\n                  id=\"filled-required\"\r\n                  label=\"비밀번호확인\"\r\n                  variant=\"filled\"\r\n                  value={deleteInfo.checkPassword}\r\n                  onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n                    setDelete({\r\n                      ...deleteInfo,\r\n                      checkPassword: event.target.value as string,\r\n                    });\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className={classes.checkbox}>\r\n                <FormGroup>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={deleteInfo.check}\r\n                        onChange={(\r\n                          event: React.ChangeEvent<HTMLInputElement>\r\n                        ) => {\r\n                          setDelete({\r\n                            ...deleteInfo,\r\n                            check: event.target.checked,\r\n                          });\r\n                        }}\r\n                        name=\"check\"\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    labelPlacement=\"start\"\r\n                    label=\"정말로 계정을 삭제하시겠습니까?\"\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n\r\n              <div className={classes.buttonWrapper}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={() => {\r\n                    if (\r\n                      deleteInfo.checkPassword === \"\" ||\r\n                      deleteInfo.currentPassword === \"\"\r\n                    ) {\r\n                      Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"빈 값이 존재합니다\",\r\n                        text: \"값을 채워주세요\",\r\n                        heightAuto: false,\r\n                      });\r\n                      return;\r\n                    }\r\n\r\n                    if (\r\n                      deleteInfo.checkPassword !== deleteInfo.currentPassword\r\n                    ) {\r\n                      Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"비밀번호가 일치하지 않습니다\",\r\n                        text: \"비밀번호를 확인해주세요\",\r\n                        heightAuto: false,\r\n                      });\r\n\r\n                      return;\r\n                    }\r\n\r\n                    if (!deleteInfo.check) {\r\n                      Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"체크박스가 선택되지 않았습니다.\",\r\n                        text: \"동의해주세요\",\r\n                        heightAuto: false,\r\n                      });\r\n                      return;\r\n                    }\r\n\r\n                    fetch(\r\n                      `http://localhost:4000/api/account`,\r\n                      requestInit(\r\n                        \"DELETE\",\r\n                        { password: deleteInfo.currentPassword },\r\n                        true\r\n                      )\r\n                    )\r\n                      .then((res) => res.json())\r\n                      .then((res) => {\r\n                        if (res.result === true) {\r\n                          if (res.msg === \"password is not valid\") {\r\n                            Swal.fire({\r\n                              icon: \"error\",\r\n                              title: \"비밀번호가 올바르지 않습니다.\",\r\n                              text: \"비밀번호를 확인해주세요.\",\r\n                              heightAuto: false,\r\n                            });\r\n                          } else if (res.msg === \"token is not valid\") {\r\n                            document.cookie =\r\n                              \"token=; expires=Thu, 01 Jan 1999 00:00:10 GMT;\";\r\n                            localStorage.removeItem(\"systemId\");\r\n                            Swal.fire({\r\n                              icon: \"error\",\r\n                              title: \"로그인 토큰이 만료되었습니다.\",\r\n                              text: \"다시 로그인 해주세요.\",\r\n                              heightAuto: false,\r\n                            }).then(() => {\r\n                              document.cookie =\r\n                                \"token=; expires=Thu, 01 Jan 1999 00:00:10 GMT;\";\r\n                              localStorage.removeItem(\"systemId\");\r\n                              window.location.href = \"/login\";\r\n                            });\r\n                          } else {\r\n                            document.cookie =\r\n                              \"token=; expires=Thu, 01 Jan 1999 00:00:10 GMT;\";\r\n                            localStorage.removeItem(\"systemId\");\r\n                            Swal.fire({\r\n                              icon: \"success\",\r\n                              title: \"회원탈퇴가 완료되었습니다.\",\r\n                              text: \"서비스를 이용해주셔서 감사합니다.\",\r\n                              heightAuto: false,\r\n                            }).then(() => {\r\n                              document.cookie =\r\n                                \"token=; expires=Thu, 01 Jan 1999 00:00:10 GMT;\";\r\n                              localStorage.removeItem(\"systemId\");\r\n                              window.location.href = \"/\";\r\n                            });\r\n                          }\r\n                        }\r\n                      });\r\n                  }}\r\n                >\r\n                  회원탈퇴\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\dashboard\\index.tsx",["461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486"],"import React, { useEffect, useState } from \"react\";\r\nimport { dashboardStyles } from \"./styles\";\r\nimport Rank from \"./rank\";\r\nimport Swal from \"sweetalert2\";\r\nimport Table from \"./table\";\r\nimport Donut from \"./donut\";\r\nimport GroupedBar from \"./groupbar\";\r\nimport Radar from \"./radar\";\r\nimport { requestInit } from \"../../../constant/requestInit\";\r\nimport Vlun from \"./vuln\";\r\nimport { AWSChecklist } from \"../../../constant/checklist\";\r\n\r\nexport interface IDonut {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\ninterface IRadar {\r\n  area: string;\r\n  value: number;\r\n}\r\n\r\ninterface IHistory {\r\n  id: string;\r\n  historyId: string;\r\n  service: string;\r\n  platform: string;\r\n  lastDate: string;\r\n  vuln: IVuln;\r\n}\r\n\r\ninterface IVuln {\r\n  high_total: string;\r\n  high_count: string;\r\n  middle_total: string;\r\n  middle_count: string;\r\n  low_total: string;\r\n  low_count: string;\r\n}\r\n\r\ntype IVulnType =\r\n  | \"high_total\"\r\n  | \"high_count\"\r\n  | \"middle_total\"\r\n  | \"middle_count\"\r\n  | \"low_total\"\r\n  | \"low_count\";\r\n\r\ninterface IAccountInfo {\r\n  id: string;\r\n  systemId: string;\r\n  manager: string;\r\n  platform: string;\r\n  type: string;\r\n  name: string;\r\n  accessKey: string;\r\n  secretKey: string;\r\n}\r\n\r\ninterface IVulnList {\r\n  id: string;\r\n  service: string;\r\n  chkIndex: string;\r\n  name: string;\r\n  risk: string;\r\n  status: string;\r\n  summary: any;\r\n  raw_data: any;\r\n}\r\n\r\ninterface IRadarList {\r\n  IAM: IRadar[][];\r\n  EC2: IRadar[][];\r\n  CloudFront: IRadar[][];\r\n  CloudTrail: IRadar[][];\r\n  CloudWatch: IRadar[][];\r\n  S3: IRadar[][];\r\n  RDS: IRadar[][];\r\n  Lambda: IRadar[][];\r\n  EBS: IRadar[][];\r\n  KMS: IRadar[][];\r\n  Cost: IRadar[][];\r\n  VPC: IRadar[][];\r\n}\r\n\r\ninterface IRank {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\ntype IRadarType =\r\n  | \"IAM\"\r\n  | \"EC2\"\r\n  | \"CloudFront\"\r\n  | \"CloudTrail\"\r\n  | \"CloudWatch\"\r\n  | \"S3\"\r\n  | \"RDS\"\r\n  | \"Lambda\"\r\n  | \"EBS\"\r\n  | \"KMS\"\r\n  | \"Cost\";\r\n\r\nexport default function Dashboard(): JSX.Element {\r\n  const classes = dashboardStyles();\r\n  const [accountList, setAccount] = useState<string[]>([]);\r\n  const [assessment, setAssessment] = useState<string>(\"\");\r\n  const [vuln, setVuln] = useState<IVuln | undefined>(undefined);\r\n  const [accountInfo, setAccountInfo] = useState<IAccountInfo[]>([]);\r\n  const [history, setHistory] = useState<IHistory[] | undefined>(undefined);\r\n  const [tableData, setTable] = useState<IHistory[] | undefined>(undefined);\r\n  const [donutData, setDonut] = useState<IDonut[] | undefined>(undefined);\r\n  const [historyId, setHistoryId] = useState<string>(\"\");\r\n  const [vulnList, setVulnList] = useState<IVulnList[] | undefined>(undefined);\r\n  const [radarData, setRadar] = useState<IRadarList>({\r\n    IAM: [[{ area: \"initail\", value: -1 }], [], [], []],\r\n    EC2: [[{ area: \"initail\", value: -1 }], [], [], []],\r\n    CloudFront: [[{ area: \"initail\", value: -1 }], [], [], []],\r\n    CloudTrail: [[{ area: \"initail\", value: -1 }], [], [], []],\r\n    CloudWatch: [[{ area: \"initail\", value: -1 }], [], [], []],\r\n    S3: [[{ area: \"initail\", value: -1 }], [], [], []],\r\n    RDS: [[{ area: \"initail\", value: -1 }], [], [], []],\r\n    Lambda: [[{ area: \"initail\", value: -1 }], [], [], []],\r\n    EBS: [[{ area: \"initail\", value: -1 }], [], [], []],\r\n    KMS: [[{ area: \"initail\", value: -1 }], [], [], []],\r\n    Cost: [[{ area: \"initail\", value: -1 }], [], [], []],\r\n    VPC: [[{ area: \"initail\", value: -1 }], [], [], []],\r\n  });\r\n  const [rankData, setRankData] = useState<IRank[]>([]);\r\n\r\n  const getAccountList = async () => {\r\n    let account_list: string[] = [];\r\n\r\n    let response = await fetch(\r\n      `http://localhost:4000/api/asset`,\r\n      requestInit(\"GET\", undefined, true)\r\n    )\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.result === true) {\r\n          if (res.msg === \"token is not valid\") {\r\n            document.cookie = \"token=; expires=Thu, 01 Jan 1999 00:00:10 GMT;\";\r\n            localStorage.removeItem(\"systemId\");\r\n\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              title: \"로그인 토큰이 만료되었습니다.\",\r\n              text: \"다시 로그인 해주세요.\",\r\n              heightAuto: false,\r\n            }).then(() => {\r\n              window.location.href = \"/login\";\r\n            });\r\n          } else if (res.msg === \"Query is not valid\") {\r\n            console.log(\"Query is not valid\");\r\n          } else {\r\n            setAccountInfo(res.accounts);\r\n            res.accounts.map((o: any, idx: number) => {\r\n              account_list.push(o.id);\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n    setAccount(account_list);\r\n  };\r\n\r\n  const setRisk = async (assessmentList: IHistory[]) => {\r\n    let temp: IHistory[] = [];\r\n\r\n    await assessmentList.map(async (o, idx) => {\r\n      await fetch(\r\n        `http://localhost:4000/api/history?assessment_id=${o.id}`,\r\n        requestInit(\"GET\")\r\n      )\r\n        .then(async (res2) => res2.json())\r\n        .then(async (res2) => {\r\n          if (Array.isArray(res2.histories)) {\r\n            res2.histories.map((x: any) => {\r\n              temp.push({\r\n                historyId: x.id,\r\n                vuln: {\r\n                  high_total: x.high_total,\r\n                  high_count: x.high_count,\r\n                  middle_total: x.middle_total,\r\n                  middle_count: x.middle_count,\r\n                  low_total: x.low_total,\r\n                  low_count: x.low_count,\r\n                },\r\n                lastDate: x.start_date,\r\n                id: o.id,\r\n                platform: o.platform,\r\n                service: o.service,\r\n              });\r\n            });\r\n          } else {\r\n            temp.push({\r\n              historyId: \"\",\r\n              vuln: {\r\n                high_total: \"0\",\r\n                high_count: \"0\",\r\n                middle_total: \"0\",\r\n                middle_count: \"0\",\r\n                low_total: \"0\",\r\n                low_count: \"0\",\r\n              },\r\n              lastDate: \"진단이력 없음\",\r\n              id: o.id,\r\n              platform: o.platform,\r\n              service: o.service,\r\n            });\r\n          }\r\n        });\r\n\r\n      if (assessmentList.length - 1 == idx) {\r\n        setHistory(temp);\r\n      }\r\n    });\r\n  };\r\n\r\n  const getHistory = async () => {\r\n    let historyList: IHistory[] = [];\r\n\r\n    await accountList.map(async (o: any, idx: number) => {\r\n      await fetch(\r\n        `http://localhost:4000/api/assessment?account_id=${o}`,\r\n        requestInit(\"GET\")\r\n      )\r\n        .then(async (res) => res.json())\r\n        .then(async (res) => {\r\n          if (res.result === true) {\r\n            await res.assessments.map(async (x: any) => {\r\n              let asseement: IHistory = {\r\n                id: x.id,\r\n                historyId: \"\",\r\n                service: \"\",\r\n                platform: \"\",\r\n                lastDate: \"\",\r\n                vuln: {\r\n                  high_total: \"\",\r\n                  high_count: \"\",\r\n                  middle_total: \"\",\r\n                  middle_count: \"\",\r\n                  low_total: \"\",\r\n                  low_count: \"\",\r\n                },\r\n              };\r\n\r\n              accountInfo.map((y: IAccountInfo) => {\r\n                if (o == y.id) {\r\n                  asseement.platform = y.platform;\r\n                  asseement.service = y.name;\r\n                }\r\n              });\r\n\r\n              historyList.push(asseement);\r\n            });\r\n          }\r\n        });\r\n\r\n      if (accountList.length - 1 == idx) {\r\n        await setRisk(historyList);\r\n      }\r\n    });\r\n  };\r\n\r\n  const getVulnList = async () => {\r\n    let vuln_List: IVulnList[] = [];\r\n\r\n    await fetch(\r\n      `http://116.43.4.229:10831/assessment-results?historyId=${historyId}`\r\n    )\r\n      .then((res3) => res3.json())\r\n      .then(async (res3) => {\r\n        if (Array.isArray(res3)) {\r\n          await res3.map(async (y: any, idx2: number) => {\r\n            let name = \"\";\r\n            let risk = \"\";\r\n\r\n            let chk = \"\";\r\n\r\n            for (let i = 0; i < 3 - String(y.chkIndex).length; i++) {\r\n              chk += \"0\";\r\n            }\r\n\r\n            for (let check of AWSChecklist) {\r\n              if (check.index == `${y.service}_${chk}${y.chkIndex}`) {\r\n                name = check.name;\r\n                risk = check.risk;\r\n                break;\r\n              }\r\n            }\r\n\r\n            let result = \"\";\r\n            let qcheck = false;\r\n            let dqcheck = false;\r\n\r\n            await y.rawData.split(\"\").map((o: any) => {\r\n              if (o == \"'\") qcheck = !qcheck;\r\n              if (o == '\"' && !qcheck) dqcheck = !dqcheck;\r\n\r\n              if (dqcheck) {\r\n                result += o;\r\n              } else if (qcheck) {\r\n                if (o == '\"') {\r\n                  result += '\\\\\"';\r\n                } else {\r\n                  if (o == \"'\") {\r\n                    result += '\"';\r\n                  } else {\r\n                    result += o;\r\n                  }\r\n                }\r\n              } else {\r\n                if (o == \"'\") {\r\n                  result += '\"';\r\n                } else {\r\n                  result += o;\r\n                }\r\n              }\r\n            });\r\n\r\n            let temp = \"\";\r\n\r\n            await result.split(\"datetime.datetime(\").map((o, idx) => {\r\n              if (idx % 2 == 1) {\r\n                let str = o.split(\", tzinfo=tzutc())\");\r\n                temp += '\"datetime.datetime(';\r\n                temp += str[0];\r\n                temp += ', tzinfo=tzutc())\"';\r\n                temp += str[1];\r\n              } else {\r\n                temp += o;\r\n              }\r\n            });\r\n\r\n            result = temp;\r\n\r\n            vuln_List.push({\r\n              id: y.id,\r\n              service: y.service,\r\n              chkIndex: y.chkIndex,\r\n              name: name,\r\n              risk: risk,\r\n              status: y.result,\r\n              summary: JSON.parse(\r\n                result.replace(/True/g, \"true\").replace(/False/g, \"false\")\r\n              ).summary,\r\n              raw_data: result,\r\n            });\r\n\r\n            if (res3.length - 1 == idx2) {\r\n              await setVulnList(vuln_List);\r\n            }\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (document.cookie === \"path=/\" || document.cookie === \"\") {\r\n      document.cookie = \"token=; expires=Thu, 01 Jan 1999 00:00:10 GMT;\";\r\n      localStorage.removeItem(\"systemId\");\r\n\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"로그인 에러\",\r\n        text: \"로그인후에 이용해주세요.\",\r\n        heightAuto: false,\r\n      }).then(() => {\r\n        window.location.href = \"/login\";\r\n        return;\r\n      });\r\n    }\r\n\r\n    getAccountList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getHistory();\r\n  }, [accountList]);\r\n\r\n  useEffect(() => {\r\n    let temp: IHistory[] = [];\r\n\r\n    history?.map((o) => {\r\n      if (o.id === assessment) temp.push(o);\r\n    });\r\n    setTable(temp);\r\n    if (temp.length > 0) {\r\n      setVuln(temp[0].vuln);\r\n      setHistoryId(temp[0].historyId);\r\n    }\r\n  }, [assessment]);\r\n\r\n  useEffect(() => {\r\n    getVulnList();\r\n  }, [historyId]);\r\n\r\n  useEffect(() => {\r\n    let temp: IDonut[] = [];\r\n    if (vuln) {\r\n      temp.push({\r\n        name: \"pass\",\r\n        value:\r\n          Number(vuln.high_total) +\r\n          Number(vuln.middle_total) +\r\n          Number(vuln.low_total) -\r\n          Number(vuln.high_count) -\r\n          Number(vuln.middle_count) -\r\n          Number(vuln.low_count),\r\n      });\r\n      for (let value in vuln) {\r\n        if (value == \"high_count\")\r\n          temp.push({ name: \"high\", value: Number(vuln[value as IVulnType]) });\r\n        if (value == \"middle_count\")\r\n          temp.push({\r\n            name: \"middle\",\r\n            value: Number(vuln[value as IVulnType]),\r\n          });\r\n        if (value == \"low_count\")\r\n          temp.push({ name: \"low\", value: Number(vuln[value as IVulnType]) });\r\n      }\r\n    }\r\n    setDonut(temp);\r\n  }, [vuln]);\r\n\r\n  useEffect(() => {\r\n    if (vulnList) {\r\n      let tempRank: IRank[] = [\r\n        { name: \"IAM\", value: 0 },\r\n        { name: \"EC2\", value: 0 },\r\n        { name: \"S3\", value: 0 },\r\n        { name: \"RDS\", value: 0 },\r\n        { name: \"VPC\", value: 0 },\r\n        { name: \"CloudFront\", value: 0 },\r\n        { name: \"CloudTrail\", value: 0 },\r\n        { name: \"CloudWatch\", value: 0 },\r\n        { name: \"Lambda\", value: 0 },\r\n        { name: \"KMS\", value: 0 },\r\n        { name: \"EBS\", value: 0 },\r\n        { name: \"Cost\", value: 0 },\r\n      ];\r\n\r\n      let temp: IRadarList = {\r\n        IAM: [\r\n          [\r\n            { area: \"계정 관리\", value: 0 },\r\n            { area: \"권한 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"계정 관리\", value: 0 },\r\n            { area: \"권한 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"계정 관리\", value: 0 },\r\n            { area: \"권한 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"계정 관리\", value: 0 },\r\n            { area: \"권한 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n        ],\r\n        EC2: [\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n        ],\r\n        CloudFront: [\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n        ],\r\n        CloudTrail: [\r\n          [\r\n            { area: \"암호화\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"암호화\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"암호화\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"암호화\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n        ],\r\n        CloudWatch: [\r\n          [\r\n            { area: \"계정 관리\", value: 0 },\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"계정 관리\", value: 0 },\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"계정 관리\", value: 0 },\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"계정 관리\", value: 0 },\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n        ],\r\n        S3: [\r\n          [\r\n            { area: \"패치 관리\", value: 0 },\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"패치 관리\", value: 0 },\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"패치 관리\", value: 0 },\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"패치 관리\", value: 0 },\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n        ],\r\n        RDS: [\r\n          [\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"백업 관리\", value: 0 },\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"패치 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"백업 관리\", value: 0 },\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"패치 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"백업 관리\", value: 0 },\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"패치 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"백업 관리\", value: 0 },\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"패치 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n        ],\r\n        Lambda: [\r\n          [\r\n            { area: \"권한 관리\", value: 0 },\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"권한 관리\", value: 0 },\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"권한 관리\", value: 0 },\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"권한 관리\", value: 0 },\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n        ],\r\n        EBS: [\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"백업 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"백업 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"백업 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"백업 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n          ],\r\n        ],\r\n        KMS: [\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n        ],\r\n        Cost: [\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"암호화\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n        ],\r\n        VPC: [\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n          [\r\n            { area: \"접근 관리\", value: 0 },\r\n            { area: \"로그 관리\", value: 0 },\r\n            { area: \"서비스 관리\", value: 0 },\r\n          ],\r\n        ],\r\n      };\r\n\r\n      vulnList.map((y, idx) => {\r\n        let chk = \"\";\r\n\r\n        for (let i = 0; i < 3 - String(y.chkIndex).length; i++) {\r\n          chk += \"0\";\r\n        }\r\n\r\n        for (let check of AWSChecklist) {\r\n          if (check.index == `${y.service}_${chk}${y.chkIndex}`) {\r\n            for (let i = 0; i < 12; i++) {\r\n              if (tempRank[i].name === y.service) {\r\n                tempRank[i].value++;\r\n                break;\r\n              }\r\n            }\r\n            let riskIndex = -1;\r\n            if (y.status === \"Y\") {\r\n              riskIndex = 0;\r\n            } else if (y.status === \"N\") {\r\n              if (check.risk === \"상\") {\r\n                riskIndex = 1;\r\n              } else if (check.risk === \"중\") {\r\n                riskIndex = 2;\r\n              } else {\r\n                riskIndex = 3;\r\n              }\r\n            }\r\n\r\n            let valueIndex = -1;\r\n\r\n            for (\r\n              let a = 0;\r\n              a < temp[y.service as IRadarType][riskIndex].length;\r\n              a++\r\n            ) {\r\n              if (\r\n                temp[y.service as IRadarType][riskIndex][a].area ===\r\n                check.classification\r\n              )\r\n                valueIndex = a;\r\n            }\r\n\r\n            if (valueIndex !== -1) {\r\n              temp[y.service as IRadarType][riskIndex][valueIndex].value++;\r\n            } else {\r\n              temp[y.service as IRadarType][riskIndex].push({\r\n                area: check.classification,\r\n                value: 1,\r\n              });\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n        if (vulnList.length - 1 === idx) {\r\n          setRadar(temp);\r\n          setRankData(tempRank);\r\n        }\r\n      });\r\n    }\r\n  }, [vulnList]);\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className={classes.header}>\r\n        <div className={classes.headerText}>대시보드</div>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <div className={classes.contentHeader}></div>\r\n\r\n        <div className={classes.row}>\r\n          <div className={`${classes.cardWrapper} ${classes.width100}`}>\r\n            <div className={classes.card}>\r\n              <Rank data={rankData} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={classes.row}>\r\n          <div className={`${classes.cardWrapper} ${classes.width60}`}>\r\n            <div className={classes.card}>\r\n              <GroupedBar\r\n                data={history as IHistory[]}\r\n                setAssessment={setAssessment}\r\n                assessment={assessment}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={`${classes.cardWrapper} ${classes.width40}`}>\r\n            <div className={classes.card}>\r\n              <Table\r\n                data={tableData as IHistory[]}\r\n                setVuln={setVuln}\r\n                vuln={vuln as IVuln}\r\n                setHistoryId={setHistoryId}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={classes.row}>\r\n          <div className={`${classes.cardWrapper} ${classes.width100}`}>\r\n            <div className={`${classes.card} ${classes.scoreText}`}>65점</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={classes.row}>\r\n          <div className={`${classes.cardWrapper} ${classes.width30}`}>\r\n            <div className={classes.card}>\r\n              <Donut\r\n                data={donutData as IDonut[]}\r\n                historyId={historyId}\r\n                serviceByData={radarData}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={`${classes.cardWrapper} ${classes.width70}`}>\r\n            <div className={classes.card}>\r\n              <div className={classes.header}>\r\n                <div className={classes.headerText}>서비스 별 취약점 현황</div>\r\n              </div>\r\n              <div className={classes.flex}>\r\n                <Radar\r\n                  historyId={historyId}\r\n                  data={radarData.IAM}\r\n                  service=\"IAM\"\r\n                />\r\n                <Radar\r\n                  historyId={historyId}\r\n                  data={radarData.EC2}\r\n                  service=\"EC2\"\r\n                />\r\n                <Radar historyId={historyId} data={radarData.S3} service=\"S3\" />\r\n                <Radar\r\n                  historyId={historyId}\r\n                  data={radarData.RDS}\r\n                  service=\"RDS\"\r\n                />\r\n                <Radar\r\n                  historyId={historyId}\r\n                  data={radarData.CloudFront}\r\n                  service=\"CloudFront\"\r\n                />\r\n                <Radar\r\n                  historyId={historyId}\r\n                  data={radarData.CloudTrail}\r\n                  service=\"CloudTrail\"\r\n                />\r\n                <Radar\r\n                  historyId={historyId}\r\n                  data={radarData.CloudWatch}\r\n                  service=\"CloudWatch\"\r\n                />\r\n                <Radar\r\n                  historyId={historyId}\r\n                  data={radarData.EBS}\r\n                  service=\"EBS\"\r\n                />\r\n                <Radar\r\n                  historyId={historyId}\r\n                  data={radarData.Lambda}\r\n                  service=\"Lambda\"\r\n                />\r\n                <Radar\r\n                  historyId={historyId}\r\n                  data={radarData.KMS}\r\n                  service=\"KMS\"\r\n                />\r\n                <Radar\r\n                  historyId={historyId}\r\n                  data={radarData.Cost}\r\n                  service=\"Cost\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={classes.row}>\r\n          <div className={`${classes.cardWrapper} ${classes.width100}`}>\r\n            <div className={classes.card}>\r\n              <Vlun vulnList={vulnList as IVulnList[]} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\asset\\styles.ts",["487"],"import { createStyles, makeStyles } from \"@material-ui/core\";\r\nimport { transform } from \"typescript\";\r\n\r\nexport const cloudStyles = makeStyles(() =>\r\n  createStyles({\r\n    mainContainer: {\r\n      padding: \"20px\",\r\n    },\r\n    header: {\r\n      height: \"46px\",\r\n      paddingBottom: \"16px\",\r\n      marginBottom: \"16px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      borderBottom: \"1px solid #353a53\",\r\n    },\r\n    headerText: {\r\n      color: \"#FFFFFF\",\r\n      fontSize: \"24px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    headerButton: {\r\n      marginLeft: \"12px\",\r\n    },\r\n    content: {},\r\n    contentHeader: {\r\n      height: \"30px\",\r\n      color: \"#ffffff\",\r\n    },\r\n    cardWrapper: {\r\n      padding: \"20px 30px\",\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"repeat(3, 1fr)\",\r\n      gap: \"3vh 1.5vw\",\r\n      margin: \"0px -20px\",\r\n    },\r\n    add: {\r\n      border: \"3px solid #1f2e3d\",\r\n      height: \"25vh\",\r\n      borderRadius: \"8px\",\r\n      padding: \"15px\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      cursor: \"pointer\",\r\n      \"&>svg\": {\r\n        width: \"75px\",\r\n        height: \"75px\",\r\n        color: \"gray\",\r\n      },\r\n    },\r\n    overlay: {\r\n      position: \"fixed\",\r\n      backgroundColor: \"black\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      top: \"0\",\r\n      left: \"0\",\r\n      zIndex: 999,\r\n      opacity: 0.5,\r\n    },\r\n    visibility: {\r\n      visibility: \"hidden\",\r\n    },\r\n  })\r\n);\r\n\r\nexport const cardStyles = makeStyles(() =>\r\n  createStyles({\r\n    mainContainer: {\r\n      border: \"3px solid #1f2e3d\",\r\n      height: \"25vh\",\r\n      borderRadius: \"8px\",\r\n      padding: \"15px\",\r\n      cursor: \"pointer\",\r\n    },\r\n    provider: {\r\n      height: \"50%\",\r\n      margin: \"6% 0px\",\r\n    },\r\n    name: {\r\n      color: \"#565775\",\r\n      textAlign: \"center\",\r\n    },\r\n    settingLogo: {\r\n      position: \"relative\",\r\n      top: \"10px\",\r\n      right: \"15px\",\r\n      float: \"right\",\r\n      cursor: \"pointer\",\r\n      zIndex: 999,\r\n      \"&>svg\": {\r\n        color: \"gray\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nexport const modalStyles = makeStyles(() =>\r\n  createStyles({\r\n    mainContainer: {},\r\n    visibility: {\r\n      visibility: \"hidden\",\r\n    },\r\n    modalWrapper: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      top: \"0\",\r\n      left: \"0\",\r\n      zIndex: 9999,\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    modal: {\r\n      position: \"fixed\",\r\n      backgroundColor: \"#27293D\",\r\n      width: \"calc(30% - 60px)\",\r\n      height: \"calc(70% - 60px)\",\r\n      zIndex: 9999,\r\n      opacity: 1,\r\n      top: \"0\",\r\n      left: \"0\",\r\n      margin: \"8.725% 35%\",\r\n      padding: \"30px\",\r\n    },\r\n    modalHead: {\r\n      height: \"10%\",\r\n      color: \"#EDEDED\",\r\n    },\r\n    title: {\r\n      fontSize: \"22px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    modalBody: {\r\n      height: \"75%\",\r\n    },\r\n    modalFooter: {\r\n      display: \"flex\",\r\n      alignItems: \"flex-end\",\r\n      float: \"right\",\r\n      height: \"10%\",\r\n      \"&>button\": {\r\n        marginLeft: \"0.4vw\",\r\n      },\r\n    },\r\n    inputWrapper: {\r\n      marginBottom: \"16px\",\r\n      \"&>div\": {\r\n        width: \"100%\",\r\n      },\r\n    },\r\n    input: {},\r\n    button: {\r\n      width: \"4.5vw\",\r\n      height: \"3.43vh\",\r\n      padding: \"0.56vh 1.15vw\",\r\n      fontSize: \"0.9rem\",\r\n    },\r\n    formControl: {\r\n      marginTop: \"2px\",\r\n      \"& svg\": {\r\n        color: \"rgb(170, 170, 170)\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nexport const detailStyles = makeStyles(() =>\r\n  createStyles({\r\n    mainContainer: {\r\n      padding: \"20px\",\r\n      height: \"fit-content\",\r\n    },\r\n    header: {\r\n      height: \"46px\",\r\n      paddingBottom: \"16px\",\r\n      marginBottom: \"16px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      borderBottom: \"1px solid #353a53\",\r\n    },\r\n    headerText: {\r\n      color: \"#FFFFFF\",\r\n      fontSize: \"24px\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    headerButton: {\r\n      marginLeft: \"12px\",\r\n      height: \"26px\",\r\n    },\r\n    content: {},\r\n    contentHeader: {\r\n      height: \"30px\",\r\n      color: \"#ffffff\",\r\n    },\r\n    tableWrapper: {\r\n      \"&>div\": {\r\n        backgroundColor: \"#27293D\",\r\n        borderBottom: \"1px solid #27293D\",\r\n        color: \"#D6D6D6\",\r\n        \"& span\": {\r\n          color: \"#D6D6D6\",\r\n        },\r\n        \"& input\": {\r\n          color: \"#D6D6D6\",\r\n        },\r\n      },\r\n      \"& th\": {\r\n        backgroundColor: \"#27293D\",\r\n        borderBottom: \"1px solid #27293D\",\r\n        color: \"#D6D6D6\",\r\n      },\r\n      \"& td\": {\r\n        borderBottom: \"1px solid #27293D\",\r\n        color: \"#D6D6D6\",\r\n        \"& span\": {\r\n          color: \"#D6D6D6\",\r\n        },\r\n        \"& svg\": {\r\n          color: \"#D6D6D6\",\r\n        },\r\n      },\r\n    },\r\n    table: {\r\n      width: \"100%\",\r\n      textAlign: \"center\",\r\n      padding: \"15px\",\r\n    },\r\n    thead: {},\r\n    tbody: {},\r\n    tr: {\r\n      height: \"30px\",\r\n    },\r\n    th: {},\r\n    td: {},\r\n    innerTable: {\r\n      backgroundColor: \"#212236\",\r\n      \"& th\": {\r\n        backgroundColor: \"#212236 !important\",\r\n        borderBottom: \"1px solid #212236 !important\",\r\n      },\r\n      \"& td\": {\r\n        borderBottom: \"1px solid #212236 !important\",\r\n      },\r\n    },\r\n    tableHeader: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      height: \"26px\",\r\n    },\r\n    tableHeaderText: {},\r\n    loadingIcon: {\r\n      marginLeft: \"8px\",\r\n    },\r\n  })\r\n);\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\signup\\index.tsx",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\checklist\\index.tsx",["488","489","490"],"import { Button } from \"@material-ui/core\";\r\nimport MaterialTable from \"material-table\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { checklistStyles } from \"./styles\";\r\nimport { AWSChecklist } from \"../../../constant/checklist\";\r\nimport Swal from \"sweetalert2\";\r\nimport fileDownload from \"file-saver\";\r\n\r\ntype IReference = \"AWS\" | \"CIS\" | \"CSA\";\r\n\r\ninterface IChecklist {\r\n  classification: string;\r\n  index: string;\r\n  name: string;\r\n  risk: string;\r\n  description: string;\r\n  inspection: string;\r\n  action: string;\r\n  reference: IReference;\r\n  provider: string;\r\n}\r\n\r\nexport default function Checklist() {\r\n  const classes = checklistStyles();\r\n\r\n  const [category, setCategory] = useState<string>(\"EC2\");\r\n  const [checklist, setChecklist] =\r\n    useState<IChecklist[] | undefined>(undefined);\r\n  const [tableData, setTable] = useState<IChecklist[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (document.cookie === \"path=/\" || document.cookie === \"\") {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"로그인 에러\",\r\n        text: \"로그인후에 이용해주세요.\",\r\n        heightAuto: false,\r\n      }).then(() => {\r\n        window.location.href = \"/login\";\r\n        return;\r\n      });\r\n    }\r\n\r\n    setChecklist(AWSChecklist as IChecklist[]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!checklist) return;\r\n\r\n    let list: IChecklist[] = [];\r\n\r\n    checklist.map((o, idx) => {\r\n      if (o.index.indexOf(category) !== -1) list.push(o);\r\n    });\r\n\r\n    setTable(list);\r\n  }, [category, checklist]);\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className={classes.header}>\r\n        <div className={classes.headerText}>체크리스트</div>\r\n        <Button\r\n          variant={category === \"EC2\" ? \"contained\" : \"outlined\"}\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            setCategory(\"EC2\");\r\n          }}\r\n        >\r\n          EC2\r\n        </Button>\r\n        <Button\r\n          variant={category === \"EBS\" ? \"contained\" : \"outlined\"}\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            setCategory(\"EBS\");\r\n          }}\r\n        >\r\n          EBS\r\n        </Button>\r\n        <Button\r\n          variant={category === \"S3\" ? \"contained\" : \"outlined\"}\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            setCategory(\"S3\");\r\n          }}\r\n        >\r\n          S3\r\n        </Button>\r\n        <Button\r\n          variant={category === \"RDS\" ? \"contained\" : \"outlined\"}\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            setCategory(\"RDS\");\r\n          }}\r\n        >\r\n          RDS\r\n        </Button>\r\n        <Button\r\n          variant={category === \"VPC\" ? \"contained\" : \"outlined\"}\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            setCategory(\"VPC\");\r\n          }}\r\n        >\r\n          VPC\r\n        </Button>\r\n        <Button\r\n          variant={category === \"CloudFront\" ? \"contained\" : \"outlined\"}\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            setCategory(\"CloudFront\");\r\n          }}\r\n        >\r\n          CloudFront\r\n        </Button>\r\n        <Button\r\n          variant={category === \"CloudWatch\" ? \"contained\" : \"outlined\"}\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            setCategory(\"CloudWatch\");\r\n          }}\r\n        >\r\n          CloudWatch\r\n        </Button>\r\n        <Button\r\n          variant={category === \"CloudTrail\" ? \"contained\" : \"outlined\"}\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            setCategory(\"CloudTrail\");\r\n          }}\r\n        >\r\n          CloudTrail\r\n        </Button>\r\n        <Button\r\n          variant={category === \"Lambda\" ? \"contained\" : \"outlined\"}\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            setCategory(\"Lambda\");\r\n          }}\r\n        >\r\n          Lambda\r\n        </Button>\r\n        <Button\r\n          variant={category === \"KMS\" ? \"contained\" : \"outlined\"}\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            setCategory(\"KMS\");\r\n          }}\r\n        >\r\n          KMS\r\n        </Button>\r\n        <div className={classes.reportWrapper}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.reportButton}\r\n            onClick={() => {\r\n              document.getElementById(\"download\")?.click();\r\n            }}\r\n          >\r\n            Detail Report Download\r\n          </Button>\r\n          <a id=\"download\" href=\"/checklist/AWS.png\" download />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes.content}>\r\n        <div className={classes.contentHeader}></div>\r\n        <div className={classes.tableWrapper}>\r\n          <MaterialTable\r\n            title=\"\"\r\n            columns={[\r\n              {\r\n                title: \"항목번호\",\r\n                field: \"index\",\r\n                cellStyle: { width: \"9%\" },\r\n              },\r\n              { title: \"항목명\", field: \"name\" },\r\n              {\r\n                title: \"위험도\",\r\n                field: \"risk\",\r\n                cellStyle: {\r\n                  width: \"7%\",\r\n                  paddingLeft: \"30px\",\r\n                },\r\n              },\r\n              {\r\n                title: \"레퍼런스\",\r\n                field: \"reference\",\r\n                cellStyle: { width: \"9%\" },\r\n                render: (rowData) => (\r\n                  <div\r\n                    className={classes[rowData.provider as IReference]}\r\n                  ></div>\r\n                ),\r\n              },\r\n            ]}\r\n            data={tableData}\r\n            options={{\r\n              exportButton: {\r\n                csv: true,\r\n                pdf: false,\r\n              },\r\n              selection: false,\r\n              exportFileName: \"취약점 현황\",\r\n              exportAllData: true,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\vulnerability\\index.tsx",["491","492","493","494","495","496","497","498","499","500","501","502","503","504","505"],"import React, { useEffect, useState } from \"react\";\r\nimport { vlunStyles } from \"./styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { requestInit } from \"../../../constant/requestInit\";\r\nimport { AWSChecklist } from \"../../../constant/checklist\";\r\nimport Swal from \"sweetalert2\";\r\nimport Modal from \"./modal\";\r\n\r\ninterface IVuln {\r\n  id: string;\r\n  assessment_id: string;\r\n  service: string;\r\n  chkIndex: string;\r\n  name: string;\r\n  risk: string;\r\n  date: string;\r\n  status: string;\r\n  summary: any;\r\n  raw_data: any;\r\n}\r\n\r\ninterface IAccountInfo {\r\n  id: string;\r\n  systemId: string;\r\n  manager: string;\r\n  platform: string;\r\n  type: string;\r\n  name: string;\r\n  accessKey: string;\r\n  secretKey: string;\r\n}\r\n\r\ninterface IFilter {\r\n  IAM: boolean;\r\n  EC2: boolean;\r\n  S3: boolean;\r\n  RDS: boolean;\r\n  VPC: boolean;\r\n  CloudFront: boolean;\r\n  CloudTrail: boolean;\r\n  CloudWatch: boolean;\r\n  Lambda: boolean;\r\n  EBS: boolean;\r\n  KMS: boolean;\r\n  Cost: boolean;\r\n}\r\n\r\ntype IFilterType =\r\n  | \"IAM\"\r\n  | \"EC2\"\r\n  | \"CloudFront\"\r\n  | \"CloudTrail\"\r\n  | \"CloudWatch\"\r\n  | \"S3\"\r\n  | \"RDS\"\r\n  | \"Lambda\"\r\n  | \"EBS\"\r\n  | \"KMS\"\r\n  | \"Cost\";\r\n\r\nexport default function Vlun() {\r\n  const classes = vlunStyles();\r\n  const history = useHistory();\r\n\r\n  const [vulnList, setVuln] = useState<IVuln[] | undefined>(undefined);\r\n  const [accountList, setAccount] = useState<string[]>([]);\r\n  const [accountInfo, setAccountInfo] = useState<IAccountInfo[]>([]);\r\n  const [modal, setModal] = useState<boolean>(true);\r\n  const [rawData, setRawData] = useState<any>();\r\n  const [isFilter, setFilter] = useState<boolean>(false);\r\n  const [filteredList, setFilteredList] =\r\n    useState<IVuln[] | undefined>(undefined);\r\n  const [filterList, setFilterList] = useState<IFilter>({\r\n    IAM: false,\r\n    EC2: false,\r\n    S3: false,\r\n    RDS: false,\r\n    VPC: false,\r\n    CloudFront: false,\r\n    CloudTrail: false,\r\n    CloudWatch: false,\r\n    Lambda: false,\r\n    EBS: false,\r\n    KMS: false,\r\n    Cost: false,\r\n  });\r\n\r\n  const getAccountList = async () => {\r\n    let account_list: string[] = [];\r\n\r\n    let response = await fetch(\r\n      `http://localhost:4000/api/asset`,\r\n      requestInit(\"GET\", undefined, true)\r\n    )\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.result === true) {\r\n          if (res.msg === \"token is not valid\") {\r\n            document.cookie = \"token=; expires=Thu, 01 Jan 1999 00:00:10 GMT;\";\r\n            localStorage.removeItem(\"systemId\");\r\n\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              title: \"로그인 토큰이 만료되었습니다.\",\r\n              text: \"다시 로그인 해주세요.\",\r\n              heightAuto: false,\r\n            }).then(() => {\r\n              window.location.href = \"/login\";\r\n            });\r\n          } else if (res.msg === \"Query is not valid\") {\r\n            console.log(\"Query is not valid\");\r\n          } else {\r\n            setAccountInfo(res.accounts);\r\n            res.accounts.map((o: any, idx: number) => {\r\n              account_list.push(o.id);\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n    setAccount(account_list);\r\n  };\r\n\r\n  const getVulnList = async (account_list: string[]) => {\r\n    let vuln_List: IVuln[] = [];\r\n\r\n    await account_list.map(async (o: any, idx: number) => {\r\n      await fetch(\r\n        `http://localhost:4000/api/assessment?account_id=${o}`,\r\n        requestInit(\"GET\")\r\n      )\r\n        .then((res) => res.json())\r\n        .then(async (res) => {\r\n          if (res.result === true) {\r\n            await res.assessments.map(async (x: any) => {\r\n              await fetch(\r\n                `http://localhost:4000/api/history/last?assessment_id=${x.id}`,\r\n                requestInit(\"GET\")\r\n              )\r\n                .then((res2) => res2.json())\r\n                .then(async (res2) => {\r\n                  if (res2.result && res2.history) {\r\n                    await fetch(\r\n                      `http://116.43.4.229:10831/assessment-results?historyId=${res2.history.id}&result=N`\r\n                    )\r\n                      .then((res3) => res3.json())\r\n                      .then((res3) => {\r\n                        if (Array.isArray(res3)) {\r\n                          res3.map((y: any) => {\r\n                            let name = \"\";\r\n                            let risk = \"\";\r\n\r\n                            let chk = \"\";\r\n\r\n                            for (\r\n                              let i = 0;\r\n                              i < 3 - String(y.chkIndex).length;\r\n                              i++\r\n                            ) {\r\n                              chk += \"0\";\r\n                            }\r\n\r\n                            for (let check of AWSChecklist) {\r\n                              if (\r\n                                check.index ==\r\n                                `${y.service}_${chk}${y.chkIndex}`\r\n                              ) {\r\n                                name = check.name;\r\n                                risk = check.risk;\r\n                                break;\r\n                              }\r\n                            }\r\n\r\n                            let result = \"\";\r\n                            let qcheck = false;\r\n                            let dqcheck = false;\r\n\r\n                            y.rawData.split(\"\").map((o: any) => {\r\n                              if (o == \"'\") qcheck = !qcheck;\r\n                              if (o == '\"' && !qcheck) dqcheck = !dqcheck;\r\n\r\n                              if (dqcheck) {\r\n                                result += o;\r\n                              } else if (qcheck) {\r\n                                if (o == '\"') {\r\n                                  result += '\\\\\"';\r\n                                } else {\r\n                                  if (o == \"'\") {\r\n                                    result += '\"';\r\n                                  } else {\r\n                                    result += o;\r\n                                  }\r\n                                }\r\n                              } else {\r\n                                if (o == \"'\") {\r\n                                  result += '\"';\r\n                                } else {\r\n                                  result += o;\r\n                                }\r\n                              }\r\n                            });\r\n\r\n                            let temp = \"\";\r\n\r\n                            result.split(\"datetime.datetime(\").map((o, idx) => {\r\n                              if (idx % 2 == 1) {\r\n                                let str = o.split(\", tzinfo=tzutc())\");\r\n                                temp += '\"datetime.datetime(';\r\n                                temp += str[0];\r\n                                temp += ', tzinfo=tzutc())\"';\r\n                                temp += str[1];\r\n                              } else {\r\n                                temp += o;\r\n                              }\r\n                            });\r\n\r\n                            result = temp;\r\n\r\n                            vuln_List.push({\r\n                              id: y.id,\r\n                              assessment_id: x.id,\r\n                              service: y.service,\r\n                              chkIndex: y.chkIndex,\r\n                              name: name,\r\n                              risk: risk,\r\n                              date: res2.history.start_date,\r\n                              status: y.history.status,\r\n                              summary: JSON.parse(\r\n                                result\r\n                                  .replace(/True/g, \"true\")\r\n                                  .replace(/False/g, \"false\")\r\n                              ).summary,\r\n                              raw_data: result,\r\n                            });\r\n                          });\r\n                        }\r\n                      })\r\n                      .then(() => {\r\n                        setVuln(vuln_List);\r\n                        setFilteredList(vuln_List);\r\n                      });\r\n                  }\r\n                });\r\n            });\r\n          }\r\n        });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (document.cookie === \"path=/\" || document.cookie === \"\") {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"로그인 에러\",\r\n        text: \"로그인후에 이용해주세요.\",\r\n        heightAuto: false,\r\n      }).then(() => {\r\n        window.location.href = \"/login\";\r\n        return;\r\n      });\r\n    }\r\n\r\n    getAccountList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getVulnList(accountList);\r\n  }, [accountList]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !filterList.CloudFront &&\r\n      !filterList.CloudTrail &&\r\n      !filterList.CloudWatch &&\r\n      !filterList.Cost &&\r\n      !filterList.EBS &&\r\n      !filterList.EC2 &&\r\n      !filterList.IAM &&\r\n      !filterList.KMS &&\r\n      !filterList.Lambda &&\r\n      !filterList.RDS &&\r\n      !filterList.S3 &&\r\n      !filterList.VPC\r\n    ) {\r\n      setFilteredList(vulnList);\r\n    } else {\r\n      let temp: IVuln[] = [];\r\n      vulnList?.map((o) => {\r\n        if (filterList[o.service as IFilterType]) {\r\n          temp.push(o);\r\n        }\r\n      });\r\n      setFilteredList(temp);\r\n    }\r\n  }, [filterList]);\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className={classes.header}>\r\n        <div className={classes.headerText}>취약점관리</div>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            history.push(\"/service/manage/scan\");\r\n          }}\r\n        >\r\n          취약점관리\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            history.push(\"/service/manage/vlun\");\r\n          }}\r\n        >\r\n          취약점현황\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            history.push(\"/service/manage/inspection\");\r\n          }}\r\n        >\r\n          이행점검\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            history.push(\"/service/manage/entire\");\r\n          }}\r\n        >\r\n          전체점검현황\r\n        </Button>\r\n      </div>\r\n\r\n      <div className={classes.content}>\r\n        <div className={classes.contentHeader}></div>\r\n        <div className={classes.tableWrapper}>\r\n          <MaterialTable\r\n            title={\r\n              <div className={classes.title}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setFilter(true);\r\n                    setModal(false);\r\n                  }}\r\n                >\r\n                  필터\r\n                </Button>\r\n                <div className={classes.filterWrapper}>\r\n                  {filterList.IAM && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, IAM: false });\r\n                      }}\r\n                    >\r\n                      IAM\r\n                    </div>\r\n                  )}\r\n                  {filterList.EC2 && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, EC2: false });\r\n                      }}\r\n                    >\r\n                      EC2\r\n                    </div>\r\n                  )}\r\n                  {filterList.S3 && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, S3: false });\r\n                      }}\r\n                    >\r\n                      S3\r\n                    </div>\r\n                  )}\r\n                  {filterList.RDS && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, RDS: false });\r\n                      }}\r\n                    >\r\n                      RDS\r\n                    </div>\r\n                  )}\r\n                  {filterList.VPC && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, VPC: false });\r\n                      }}\r\n                    >\r\n                      VPC\r\n                    </div>\r\n                  )}\r\n                  {filterList.CloudFront && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, CloudFront: false });\r\n                      }}\r\n                    >\r\n                      CloudFront\r\n                    </div>\r\n                  )}\r\n                  {filterList.CloudTrail && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, CloudTrail: false });\r\n                      }}\r\n                    >\r\n                      CloudTrail\r\n                    </div>\r\n                  )}\r\n                  {filterList.CloudWatch && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, CloudWatch: false });\r\n                      }}\r\n                    >\r\n                      CloudWatch\r\n                    </div>\r\n                  )}\r\n                  {filterList.Lambda && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, Lambda: false });\r\n                      }}\r\n                    >\r\n                      Lambda\r\n                    </div>\r\n                  )}\r\n                  {filterList.EBS && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, EBS: false });\r\n                      }}\r\n                    >\r\n                      EBS\r\n                    </div>\r\n                  )}\r\n                  {filterList.KMS && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, KMS: false });\r\n                      }}\r\n                    >\r\n                      KMS\r\n                    </div>\r\n                  )}\r\n                  {filterList.Cost && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, Cost: false });\r\n                      }}\r\n                    >\r\n                      Cost\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            }\r\n            columns={[\r\n              {\r\n                title: \"번호\",\r\n                field: \"id\",\r\n                cellStyle: { width: \"6%\" },\r\n              },\r\n              {\r\n                title: \"진단번호\",\r\n                field: \"assessment_id\",\r\n                cellStyle: { width: \"7.2%\" },\r\n              },\r\n              {\r\n                title: \"리스트번호\",\r\n                field: \"chkIndex\",\r\n                cellStyle: { width: \"8%\" },\r\n                render: (rowData) => {\r\n                  let chk = \"\";\r\n\r\n                  for (\r\n                    let i = 0;\r\n                    i < 3 - String(rowData.chkIndex).length;\r\n                    i++\r\n                  ) {\r\n                    chk += \"0\";\r\n                  }\r\n                  return (\r\n                    <React.Fragment>{`${rowData.service}_${chk}${rowData.chkIndex}`}</React.Fragment>\r\n                  );\r\n                },\r\n              },\r\n              { title: \"항목명\", field: \"name\" },\r\n              { title: \"위험도\", field: \"risk\", cellStyle: { width: \"6.6%\" } },\r\n              {\r\n                title: \"진단날짜\",\r\n                field: \"date\",\r\n                cellStyle: { width: \"11.6%\" },\r\n              },\r\n              {\r\n                title: \"요약\",\r\n                field: \"summary\",\r\n                render: (rowData) => {\r\n                  return <div>{rowData.summary}</div>;\r\n                },\r\n              },\r\n              {\r\n                title: \"상세보기\",\r\n                field: \"\",\r\n                export: false,\r\n                cellStyle: { width: \"8%\" },\r\n                render: (rowData) => {\r\n                  return (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        setRawData(rowData.raw_data);\r\n                        setFilter(false);\r\n                        setModal(false);\r\n                      }}\r\n                    >\r\n                      상세보기\r\n                    </Button>\r\n                  );\r\n                },\r\n              },\r\n            ]}\r\n            data={filteredList as IVuln[]}\r\n            options={{\r\n              exportButton: {\r\n                csv: true,\r\n                pdf: false,\r\n              },\r\n              selection: false,\r\n              exportFileName: \"취약점 현황\",\r\n              exportAllData: true,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`${classes.overlay} ${modal && classes.visibility}`}\r\n        onClick={() => {\r\n          setModal(true);\r\n        }}\r\n      ></div>\r\n      <Modal\r\n        modal={modal}\r\n        setModal={setModal}\r\n        rawData={rawData}\r\n        isFilter={isFilter}\r\n        setFilterList={setFilterList}\r\n        filterList={filterList}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\scan\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\entire\\index.tsx",["506","507","508","509","510","511","512","513","514"],"import React, { useEffect, useState } from \"react\";\r\nimport { entireStyles } from \"./styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { requestInit } from \"../../../constant/requestInit\";\r\nimport Swal from \"sweetalert2\";\r\n\r\ninterface IEntire {\r\n  id: string;\r\n  service: string;\r\n  platform: string;\r\n  type: string;\r\n  operator: string;\r\n  vuln: {\r\n    high_total: string;\r\n    high_count: string;\r\n    middle_total: string;\r\n    middle_count: string;\r\n    low_total: string;\r\n    low_count: string;\r\n  };\r\n  assessmentManager: string;\r\n  lastDate: string;\r\n  count: number;\r\n  status: string;\r\n}\r\n\r\ninterface IAccountInfo {\r\n  id: string;\r\n  systemId: string;\r\n  manager: string;\r\n  platform: string;\r\n  type: string;\r\n  name: string;\r\n  accessKey: string;\r\n  secretKey: string;\r\n}\r\n\r\nexport default function Entire() {\r\n  const classes = entireStyles();\r\n  const history = useHistory();\r\n\r\n  const [cloudList, setCloud] = useState<IEntire[] | undefined>(undefined);\r\n  const [accountList, setAccount] = useState<string[]>([]);\r\n  const [accountInfo, setAccountInfo] = useState<IAccountInfo[]>([]);\r\n\r\n  const getAccountList = async () => {\r\n    let account_list: string[] = [];\r\n\r\n    let response = await fetch(\r\n      `http://localhost:4000/api/asset`,\r\n      requestInit(\"GET\", undefined, true)\r\n    )\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.result === true) {\r\n          if (res.msg === \"token is not valid\") {\r\n            document.cookie = \"token=; expires=Thu, 01 Jan 1999 00:00:10 GMT;\";\r\n            localStorage.removeItem(\"systemId\");\r\n\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              title: \"로그인 토큰이 만료되었습니다.\",\r\n              text: \"다시 로그인 해주세요.\",\r\n              heightAuto: false,\r\n            }).then(() => {\r\n              window.location.href = \"/login\";\r\n            });\r\n          } else if (res.msg === \"Query is not valid\") {\r\n            console.log(\"Query is not valid\");\r\n          } else {\r\n            setAccountInfo(res.accounts);\r\n            res.accounts.map((o: any, idx: number) => {\r\n              account_list.push(o.id);\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n    setAccount(account_list);\r\n  };\r\n\r\n  const setCount = async (assessmentList: IEntire[]) => {\r\n    let temp: IEntire[] = [];\r\n\r\n    await assessmentList.map(async (o, idx) => {\r\n      await fetch(\r\n        `http://localhost:4000/api/history/all?assessment_id=${o.id}`,\r\n        requestInit(\"GET\")\r\n      )\r\n        .then(async (res) => res.json())\r\n        .then(async (res) => {\r\n          if (res.result === true) {\r\n            o.count = res.count;\r\n          }\r\n        });\r\n\r\n      temp.push(o);\r\n      if (assessmentList.length - 1 == idx) {\r\n        setCloud(temp);\r\n      }\r\n    });\r\n  };\r\n\r\n  const setRisk = async (assessmentList: IEntire[]) => {\r\n    let temp: IEntire[] = [];\r\n\r\n    await assessmentList.map(async (o, idx) => {\r\n      await fetch(\r\n        `http://localhost:4000/api/history/last?assessment_id=${o.id}`,\r\n        requestInit(\"GET\")\r\n      )\r\n        .then(async (res2) => res2.json())\r\n        .then(async (res2) => {\r\n          if (res2.history) {\r\n            o.vuln.high_total = res2.history.high_total;\r\n            o.vuln.high_count = res2.history.high_count;\r\n            o.vuln.middle_total = res2.history.middle_total;\r\n            o.vuln.middle_count = res2.history.middle_count;\r\n            o.vuln.low_total = res2.history.low_total;\r\n            o.vuln.low_count = res2.history.low_count;\r\n            o.lastDate = res2.history.start_date;\r\n          } else {\r\n            o.vuln.high_total = \"0\";\r\n            o.vuln.high_count = \"0\";\r\n            o.vuln.middle_total = \"0\";\r\n            o.vuln.middle_count = \"0\";\r\n            o.vuln.low_total = \"0\";\r\n            o.vuln.low_count = \"0\";\r\n            o.lastDate = \"진단이력 없음\";\r\n          }\r\n        });\r\n\r\n      temp.push(o);\r\n      if (assessmentList.length - 1 == idx) {\r\n        setCloud(temp);\r\n      }\r\n    });\r\n  };\r\n\r\n  const getAssessmentList = async (account_list: string[]) => {\r\n    let assessmentList: IEntire[] = [];\r\n\r\n    await account_list.map(async (o: any, idx: number) => {\r\n      let response = await fetch(\r\n        `http://localhost:4000/api/assessment?account_id=${o}`,\r\n        requestInit(\"GET\")\r\n      )\r\n        .then(async (res) => res.json())\r\n        .then(async (res) => {\r\n          if (res.result === true) {\r\n            await res.assessments.map(async (x: any) => {\r\n              let asseement: IEntire = {\r\n                assessmentManager: x.assessmentManager,\r\n                id: x.id,\r\n                operator: \"\",\r\n                platform: \"\",\r\n                service: \"\",\r\n                lastDate: \"\",\r\n                status: x.status,\r\n                type: \"\",\r\n                vuln: {\r\n                  high_total: \"\",\r\n                  high_count: \"\",\r\n                  middle_total: \"\",\r\n                  middle_count: \"\",\r\n                  low_total: \"\",\r\n                  low_count: \"\",\r\n                },\r\n                count: -1,\r\n              };\r\n\r\n              accountInfo.map((y: IAccountInfo) => {\r\n                if (o == y.id) {\r\n                  asseement.platform = y.platform;\r\n                  asseement.type = y.type;\r\n                  asseement.operator = y.manager;\r\n                  asseement.service = y.name;\r\n                }\r\n              });\r\n\r\n              assessmentList.push(asseement);\r\n            });\r\n          }\r\n        });\r\n\r\n      if (account_list.length - 1 == idx) {\r\n        await setCount(assessmentList);\r\n        await setRisk(assessmentList);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (document.cookie === \"path=/\" || document.cookie === \"\") {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"로그인 에러\",\r\n        text: \"로그인후에 이용해주세요.\",\r\n        heightAuto: false,\r\n      }).then(() => {\r\n        window.location.href = \"/login\";\r\n        return;\r\n      });\r\n    }\r\n\r\n    getAccountList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAssessmentList(accountList);\r\n  }, [accountList]);\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className={classes.header}>\r\n        <div className={classes.headerText}>취약점관리</div>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            history.push(\"/service/manage/scan\");\r\n          }}\r\n        >\r\n          취약점관리\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            history.push(\"/service/manage/vlun\");\r\n          }}\r\n        >\r\n          취약점현황\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            history.push(\"/service/manage/inspection\");\r\n          }}\r\n        >\r\n          이행점검\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            history.push(\"/service/manage/entire\");\r\n          }}\r\n        >\r\n          전체점검현황\r\n        </Button>\r\n      </div>\r\n\r\n      <div className={classes.content}>\r\n        <div className={classes.contentHeader}></div>\r\n        <div className={classes.tableWrapper}>\r\n          <MaterialTable\r\n            title=\"\"\r\n            columns={[\r\n              { title: \"진단번호\", field: \"id\", cellStyle: { width: \"7.2%\" } },\r\n              {\r\n                title: \"서비스명\",\r\n                field: \"service\",\r\n                cellStyle: { width: \"7.2%\" },\r\n              },\r\n              {\r\n                title: \"구분\",\r\n                field: \"platform\",\r\n                cellStyle: { width: \"5.4%\" },\r\n              },\r\n              { title: \"용도\", field: \"type\", cellStyle: { width: \"5.4%\" } },\r\n              {\r\n                title: \"운영담당자\",\r\n                field: \"operator\",\r\n                cellStyle: { width: \"8%\" },\r\n              },\r\n              {\r\n                title: \"점검담당자\",\r\n                field: \"assessmentManager\",\r\n                cellStyle: { width: \"8%\" },\r\n              },\r\n              {\r\n                title: \"취약점\",\r\n                field: \"vuln\",\r\n                render: (rowData) => {\r\n                  return (\r\n                    <div className={classes.vulnWrapper}>\r\n                      <div\r\n                        className={classes.high}\r\n                      >{`${rowData.vuln.high_count} / ${rowData.vuln.high_total}`}</div>\r\n                      <div className={classes.middle}>\r\n                        {`${rowData.vuln.middle_count} / ${rowData.vuln.middle_total}`}\r\n                      </div>\r\n                      <div\r\n                        className={classes.low}\r\n                      >{`${rowData.vuln.low_count} / ${rowData.vuln.low_total}`}</div>\r\n                    </div>\r\n                  );\r\n                },\r\n              },\r\n              { title: \"최근이행일\", field: \"lastDate\" },\r\n              { title: \"차수\", field: \"count\", cellStyle: { width: \"5.4%\" } },\r\n              { title: \"상태\", field: \"status\" },\r\n            ]}\r\n            data={cloudList as IEntire[]}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\inspection\\index.tsx",["515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540"],"import React, { useEffect, useState } from \"react\";\r\nimport { inspectionStyles } from \"./styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { requestInit } from \"../../../constant/requestInit\";\r\nimport { AWSChecklist } from \"../../../constant/checklist\";\r\nimport Swal from \"sweetalert2\";\r\n\r\ninterface IEntire {\r\n  id: string;\r\n  service: string;\r\n  platform: string;\r\n  type: string;\r\n  operator: string;\r\n  vuln: {\r\n    high_total: string;\r\n    high_count: string;\r\n    middle_total: string;\r\n    middle_count: string;\r\n    low_total: string;\r\n    low_count: string;\r\n  };\r\n  assessmentManager: string;\r\n  lastDate: string;\r\n  count: number;\r\n  status: string;\r\n}\r\n\r\ninterface IAccountInfo {\r\n  id: string;\r\n  systemId: string;\r\n  manager: string;\r\n  platform: string;\r\n  type: string;\r\n  name: string;\r\n  accessKey: string;\r\n  secretKey: string;\r\n}\r\n\r\ninterface IVuln {\r\n  id: string;\r\n  assessment_id: string;\r\n  high_total: string;\r\n  high_count: string;\r\n  middle_total: string;\r\n  middle_count: string;\r\n  low_total: string;\r\n  low_count: string;\r\n  start_date: string;\r\n}\r\n\r\nexport default function Inspection() {\r\n  const classes = inspectionStyles();\r\n  const history = useHistory();\r\n\r\n  const [cloudList, setCloud] = useState<IEntire[] | undefined>(undefined);\r\n  const [accountList, setAccount] = useState<string[]>([]);\r\n  const [accountInfo, setAccountInfo] = useState<IAccountInfo[]>([]);\r\n\r\n  const getAccountList = async () => {\r\n    let account_list: string[] = [];\r\n\r\n    let response = await fetch(\r\n      `http://localhost:4000/api/asset`,\r\n      requestInit(\"GET\", undefined, true)\r\n    )\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.result === true) {\r\n          if (res.msg === \"token is not valid\") {\r\n            document.cookie = \"token=; expires=Thu, 01 Jan 1999 00:00:10 GMT;\";\r\n            localStorage.removeItem(\"systemId\");\r\n\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              title: \"로그인 토큰이 만료되었습니다.\",\r\n              text: \"다시 로그인 해주세요.\",\r\n              heightAuto: false,\r\n            }).then(() => {\r\n              window.location.href = \"/login\";\r\n            });\r\n          } else if (res.msg === \"Query is not valid\") {\r\n            console.log(\"Query is not valid\");\r\n          } else {\r\n            setAccountInfo(res.accounts);\r\n            res.accounts.map((o: any, idx: number) => {\r\n              account_list.push(o.id);\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n    setAccount(account_list);\r\n  };\r\n\r\n  const setCount = async (assessmentList: IEntire[]) => {\r\n    let temp: IEntire[] = [];\r\n\r\n    await assessmentList.map(async (o, idx) => {\r\n      await fetch(\r\n        `http://localhost:4000/api/history/all?assessment_id=${o.id}`,\r\n        requestInit(\"GET\")\r\n      )\r\n        .then(async (res) => res.json())\r\n        .then(async (res) => {\r\n          if (res.result === true) {\r\n            o.count = res.count;\r\n          }\r\n        });\r\n\r\n      temp.push(o);\r\n      if (assessmentList.length - 1 == idx) {\r\n        setCloud(temp);\r\n      }\r\n    });\r\n  };\r\n\r\n  const setRisk = async (assessmentList: IEntire[]) => {\r\n    let temp: IEntire[] = [];\r\n\r\n    await assessmentList.map(async (o, idx) => {\r\n      await fetch(\r\n        `http://localhost:4000/api/history/last?assessment_id=${o.id}`,\r\n        requestInit(\"GET\")\r\n      )\r\n        .then(async (res2) => res2.json())\r\n        .then(async (res2) => {\r\n          if (res2.history) {\r\n            o.vuln.high_total = res2.history.high_total;\r\n            o.vuln.high_count = res2.history.high_count;\r\n            o.vuln.middle_total = res2.history.middle_total;\r\n            o.vuln.middle_count = res2.history.middle_count;\r\n            o.vuln.low_total = res2.history.low_total;\r\n            o.vuln.low_count = res2.history.low_count;\r\n            o.lastDate = res2.history.start_date;\r\n          } else {\r\n            o.vuln.high_total = \"0\";\r\n            o.vuln.high_count = \"0\";\r\n            o.vuln.middle_total = \"0\";\r\n            o.vuln.middle_count = \"0\";\r\n            o.vuln.low_total = \"0\";\r\n            o.vuln.low_count = \"0\";\r\n            o.lastDate = \"진단이력 없음\";\r\n          }\r\n        });\r\n\r\n      temp.push(o);\r\n      if (assessmentList.length - 1 == idx) {\r\n        setCloud(temp);\r\n      }\r\n    });\r\n  };\r\n\r\n  const getAssessmentList = async (account_list: string[]) => {\r\n    let assessmentList: IEntire[] = [];\r\n\r\n    await account_list.map(async (o: any, idx: number) => {\r\n      let response = await fetch(\r\n        `http://localhost:4000/api/assessment?account_id=${o}`,\r\n        requestInit(\"GET\")\r\n      )\r\n        .then(async (res) => res.json())\r\n        .then(async (res) => {\r\n          if (res.result === true) {\r\n            await res.assessments.map(async (x: any) => {\r\n              if (x.status == \"이행대기\") {\r\n                let asseement: IEntire = {\r\n                  assessmentManager: x.assessmentManager,\r\n                  id: x.id,\r\n                  operator: \"\",\r\n                  platform: \"\",\r\n                  service: \"\",\r\n                  lastDate: \"\",\r\n                  status: x.status,\r\n                  type: \"\",\r\n                  vuln: {\r\n                    high_total: \"\",\r\n                    high_count: \"\",\r\n                    middle_total: \"\",\r\n                    middle_count: \"\",\r\n                    low_total: \"\",\r\n                    low_count: \"\",\r\n                  },\r\n                  count: -1,\r\n                };\r\n\r\n                accountInfo.map((y: IAccountInfo) => {\r\n                  if (o == y.id) {\r\n                    asseement.platform = y.platform;\r\n                    asseement.type = y.type;\r\n                    asseement.operator = y.manager;\r\n                    asseement.service = y.name;\r\n                  }\r\n                });\r\n\r\n                assessmentList.push(asseement);\r\n              }\r\n            });\r\n          }\r\n        });\r\n\r\n      if (account_list.length - 1 == idx) {\r\n        await setCount(assessmentList);\r\n        await setRisk(assessmentList);\r\n      }\r\n    });\r\n  };\r\n\r\n  const postHistory = async (\r\n    response: string,\r\n    historyId: string,\r\n    assessmentId: number\r\n  ) => {\r\n    if (response === \"Complete\") {\r\n      let high_total = 0,\r\n        middle_total = 0,\r\n        low_total = 0,\r\n        high_count = 0,\r\n        middle_count = 0,\r\n        low_count = 0;\r\n\r\n      const assessment_results = await fetch(\r\n        `http://116.43.4.229:10831/assessment-results?historyId=${historyId}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then(async (res) => {\r\n          if (Array.isArray(res)) {\r\n            res.map((o) => {\r\n              for (let d of AWSChecklist) {\r\n                let chk = \"\";\r\n\r\n                for (let i = 0; i < 3 - String(o.chkIndex).length; i++) {\r\n                  chk += \"0\";\r\n                }\r\n\r\n                if (d.index == `${o.service}_${chk}${o.chkIndex}`) {\r\n                  if (d.risk == \"상\") {\r\n                    high_total++;\r\n                    if (o.result == \"N\") {\r\n                      high_count++;\r\n                    }\r\n                  } else if (d.risk == \"중\") {\r\n                    middle_total++;\r\n                    if (o.result == \"N\") {\r\n                      middle_count++;\r\n                    }\r\n                  } else if (d.risk == \"하\") {\r\n                    low_total++;\r\n                    if (o.result == \"N\") {\r\n                      low_count++;\r\n                    }\r\n                  }\r\n\r\n                  break;\r\n                }\r\n              }\r\n            });\r\n\r\n            await fetch(\r\n              `http://localhost:4000/api/history`,\r\n              requestInit(\"POST\", {\r\n                id: historyId,\r\n                assessment_id: assessmentId,\r\n                high_total: high_total,\r\n                high_count: high_count,\r\n                middle_total: middle_total,\r\n                middle_count: middle_count,\r\n                low_total: low_total,\r\n                low_count: low_count,\r\n              })\r\n            );\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (document.cookie === \"path=/\" || document.cookie === \"\") {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"로그인 에러\",\r\n        text: \"로그인후에 이용해주세요.\",\r\n        heightAuto: false,\r\n      }).then(() => {\r\n        window.location.href = \"/login\";\r\n        return;\r\n      });\r\n    }\r\n\r\n    getAccountList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAssessmentList(accountList);\r\n  }, [accountList]);\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className={classes.header}>\r\n        <div className={classes.headerText}>취약점관리</div>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            history.push(\"/service/manage/scan\");\r\n          }}\r\n        >\r\n          취약점관리\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            history.push(\"/service/manage/vlun\");\r\n          }}\r\n        >\r\n          취약점현황\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            history.push(\"/service/manage/inspection\");\r\n          }}\r\n        >\r\n          이행점검\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            history.push(\"/service/manage/entire\");\r\n          }}\r\n        >\r\n          전체점검현황\r\n        </Button>\r\n      </div>\r\n\r\n      <div className={classes.content}>\r\n        <div className={classes.contentHeader}></div>\r\n        <div className={classes.tableWrapper}>\r\n          <MaterialTable\r\n            title=\"\"\r\n            columns={[\r\n              { title: \"진단번호\", field: \"id\", cellStyle: { width: \"6.5%\" } },\r\n              {\r\n                title: \"서비스명\",\r\n                field: \"service\",\r\n                cellStyle: { width: \"6.5%\" },\r\n              },\r\n              {\r\n                title: \"구분\",\r\n                field: \"platform\",\r\n                cellStyle: { width: \"4.8%\" },\r\n              },\r\n              { title: \"용도\", field: \"type\", cellStyle: { width: \"4.8%\" } },\r\n              {\r\n                title: \"운영담당자\",\r\n                field: \"operator\",\r\n                cellStyle: { width: \"8%\" },\r\n              },\r\n              {\r\n                title: \"점검담당자\",\r\n                field: \"assessmentManager\",\r\n                cellStyle: { width: \"8%\" },\r\n              },\r\n              {\r\n                title: \"취약점\",\r\n                field: \"vuln\",\r\n                render: (rowData) => {\r\n                  return (\r\n                    <div className={classes.vulnWrapper}>\r\n                      <div\r\n                        className={classes.high}\r\n                      >{`${rowData.vuln.high_count} / ${rowData.vuln.high_total}`}</div>\r\n                      <div className={classes.middle}>\r\n                        {`${rowData.vuln.middle_count} / ${rowData.vuln.middle_total}`}\r\n                      </div>\r\n                      <div\r\n                        className={classes.low}\r\n                      >{`${rowData.vuln.low_count} / ${rowData.vuln.low_total}`}</div>\r\n                    </div>\r\n                  );\r\n                },\r\n              },\r\n              { title: \"최근이행일\", field: \"lastDate\" },\r\n              { title: \"차수\", field: \"count\", cellStyle: { width: \"4.8%\" } },\r\n              {\r\n                title: \"이행점검\",\r\n                field: \"\",\r\n                render: (rowData) => {\r\n                  if (rowData.status == \"점검중\") {\r\n                    return (\r\n                      <div>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          disabled\r\n                          className={classes.disabled}\r\n                        >\r\n                          점검중\r\n                        </Button>\r\n                      </div>\r\n                    );\r\n                  }\r\n\r\n                  return (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={async () => {\r\n                        const rowInfo = await fetch(\r\n                          `http://localhost:4000/api/assessment?id=${rowData.id}`,\r\n                          requestInit(\"GET\")\r\n                        )\r\n                          .then((res) => res.json())\r\n                          .then((res) => {\r\n                            if (res.result === true) {\r\n                              return res.assessments[0];\r\n                            }\r\n                          });\r\n\r\n                        if (rowInfo.status === \"이행대기\") {\r\n                          const keyData = await fetch(\r\n                            `http://localhost:4000/api/asset?id=${rowInfo.accountId}`,\r\n                            requestInit(\"GET\")\r\n                          )\r\n                            .then((res) => res.json())\r\n                            .then((res) => {\r\n                              if (res.result === true) {\r\n                                return res.accounts[0];\r\n                              }\r\n                            });\r\n\r\n                          let date = new Date();\r\n                          let dateInfo = String(date).split(\" \");\r\n\r\n                          let historyId = `${\r\n                            rowInfo.accountId\r\n                          }:${date.getFullYear()}:${\r\n                            String(date.getMonth()).length == 1\r\n                              ? \"0\" + String(date.getMonth())\r\n                              : String(date.getMonth())\r\n                          }:${dateInfo[2]}:${dateInfo[4]}`;\r\n\r\n                          const body = {\r\n                            historyId: btoa(historyId),\r\n                            accessKey: keyData.accessKey,\r\n                            secretKey: keyData.secretKey,\r\n                            regionName: keyData.region,\r\n                            services: [\"EC2\", \"IAM\", \"RDS\", \"EBS\", \"S3\"],\r\n                          };\r\n\r\n                          await fetch(\r\n                            `http://localhost:4000/api/assessment/status`,\r\n                            requestInit(\"PUT\", {\r\n                              status: \"점검중\",\r\n                              id: rowData.id,\r\n                            })\r\n                          );\r\n\r\n                          let changeList: IEntire[] = [];\r\n\r\n                          await cloudList?.map((o, idx) => {\r\n                            if (o.id !== rowData.id) {\r\n                              changeList.push(o);\r\n                            }\r\n                          });\r\n\r\n                          await setCloud(undefined);\r\n                          await setCloud(changeList);\r\n\r\n                          try {\r\n                            const response = await fetch(\r\n                              `http://116.43.4.229:10831/assessment-results`,\r\n                              requestInit(\"POST\", body)\r\n                            )\r\n                              .then((res) => res.json())\r\n                              .then(async (res) => {\r\n                                if (res.message === \"Complete\") {\r\n                                  await fetch(\r\n                                    `http://localhost:4000/api/assessment/status`,\r\n                                    requestInit(\"PUT\", {\r\n                                      status: \"점검완료\",\r\n                                      id: rowData.id,\r\n                                    })\r\n                                  );\r\n\r\n                                  let changeList: IEntire[] = [];\r\n\r\n                                  await cloudList?.map((o, idx) => {\r\n                                    if (o.id !== rowData.id) {\r\n                                      changeList.push(o);\r\n                                    }\r\n                                  });\r\n\r\n                                  await setCloud(undefined);\r\n                                  await setCloud(changeList);\r\n\r\n                                  return res.message;\r\n                                } else {\r\n                                  await fetch(\r\n                                    `http://localhost:4000/api/assessment/status`,\r\n                                    requestInit(\"PUT\", {\r\n                                      status: \"오류발생\",\r\n                                      id: rowData.id,\r\n                                    })\r\n                                  );\r\n\r\n                                  let changeList: IEntire[] = [];\r\n\r\n                                  await cloudList?.map((o, idx) => {\r\n                                    if (o.id !== rowData.id) {\r\n                                      changeList.push(o);\r\n                                    }\r\n                                  });\r\n\r\n                                  await setCloud(undefined);\r\n                                  await setCloud(changeList);\r\n                                }\r\n                              });\r\n\r\n                            await postHistory(\r\n                              response,\r\n                              body.historyId,\r\n                              Number(rowData.id)\r\n                            );\r\n                          } catch (error) {\r\n                            await fetch(\r\n                              `http://localhost:4000/api/assessment/status`,\r\n                              requestInit(\"PUT\", {\r\n                                status: \"오류발생\",\r\n                                id: rowData.id,\r\n                              })\r\n                            );\r\n\r\n                            let changeList: IEntire[] = [];\r\n\r\n                            await cloudList?.map((o, idx) => {\r\n                              if (o.id !== rowData.id) {\r\n                                changeList.push(o);\r\n                              }\r\n                            });\r\n\r\n                            await setCloud(undefined);\r\n                            await setCloud(changeList);\r\n                          }\r\n                        }\r\n                      }}\r\n                    >\r\n                      이행점검\r\n                    </Button>\r\n                  );\r\n                },\r\n              },\r\n            ]}\r\n            data={cloudList as IEntire[]}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\layout\\topbar\\index.tsx",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\layout\\sidebar\\index.tsx",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\scan\\modal.tsx",["541"],"import React, { useState, useEffect } from \"react\";\r\nimport { modalStyles } from \"./styles\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { requestInit } from \"../../../constant/requestInit\";\r\nimport Swal from \"sweetalert2\";\r\n\r\ninterface IModalProps {\r\n  modal: boolean;\r\n  setModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\ntype IProvider = \"AWS\" | \"AZURE\" | \"GCP\";\r\n\r\ninterface ICloudList {\r\n  id: string;\r\n  systemId: string;\r\n  manager: string;\r\n  platform: IProvider;\r\n  type: string;\r\n  name: string;\r\n  accessKey: string;\r\n  secretKey: string;\r\n}\r\n\r\nexport default function Modal(props: IModalProps) {\r\n  const classes = modalStyles();\r\n  const [cloudList, setCloudList] =\r\n    useState<ICloudList[] | undefined>(undefined);\r\n  const [check, setCheck] = useState<any>({});\r\n  const [manager, setManager] = useState<string>(\"\");\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCheck({ ...check, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"http://localhost:4000/api/asset\",\r\n      requestInit(\"GET\", undefined, true)\r\n    )\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.result === true) {\r\n          if (res.msg === \"token is not valid\") {\r\n            document.cookie = \"token=; expires=Thu, 01 Jan 1999 00:00:10 GMT;\";\r\n            localStorage.removeItem(\"systemId\");\r\n\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              title: \"로그인 토큰이 만료되었습니다.\",\r\n              text: \"다시 로그인 해주세요.\",\r\n              heightAuto: false,\r\n            }).then(() => {\r\n              window.location.href = \"/login\";\r\n            });\r\n          } else if (res.msg === \"Query is not valid\") {\r\n            console.log(\"Query is not valid\");\r\n          } else {\r\n            setCloudList(res.accounts);\r\n          }\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let temp: any = {};\r\n    cloudList?.map((o, idx) => {\r\n      temp[o.id] = false;\r\n    });\r\n\r\n    setCheck(temp);\r\n  }, [cloudList]);\r\n\r\n  return (\r\n    <div className={`${classes.modal} ${props.modal && classes.visibility}`}>\r\n      <div className={classes.modalHead}>\r\n        <div className={classes.title}>진단 목록 추가</div>\r\n      </div>\r\n      <div className={classes.modalBody}>\r\n        <FormGroup>\r\n          {cloudList?.map((o, idx) => (\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={check[o.id] || false}\r\n                  onChange={handleChange}\r\n                  name={`${o.id}`}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label={o.name}\r\n              key={`Scan-Modal-Checkbox-${idx}`}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n        <div className={classes.inputWrapper}>\r\n          <TextField\r\n            required\r\n            id=\"filled-required\"\r\n            label=\"점검관리자\"\r\n            variant=\"filled\"\r\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n              setManager(event.target.value as string);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={classes.modalFooter}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={async () => {\r\n            if (manager === \"\") {\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"비어 있는 값이 존재합니다\",\r\n                text: \"점검관리자 명을 입력해주세요\",\r\n                heightAuto: false,\r\n              });\r\n\r\n              return;\r\n            }\r\n\r\n            for (let accountId in check) {\r\n              if (check[accountId]) {\r\n                await fetch(\r\n                  \"http://localhost:4000/api/assessment\",\r\n                  requestInit(\"POST\", {\r\n                    account_id: accountId,\r\n                    assessment_manager: manager,\r\n                  })\r\n                ).then((res) => res.json());\r\n              }\r\n            }\r\n\r\n            props.setModal(true);\r\n            window.location.reload();\r\n          }}\r\n          className={classes.button}\r\n        >\r\n          확인\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n          onClick={async () => {\r\n            props.setModal(true);\r\n          }}\r\n          className={classes.button}\r\n        >\r\n          취소\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\constant\\requestInit.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\scan\\index.tsx",["542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572"],"import React, { useEffect, useState } from \"react\";\r\nimport { scanStyles } from \"./styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { requestInit } from \"../../../constant/requestInit\";\r\nimport { AWSChecklist } from \"../../../constant/checklist\";\r\nimport Swal from \"sweetalert2\";\r\nimport Modal from \"./modal\";\r\n\r\ninterface IScan {\r\n  id: string;\r\n  service: string;\r\n  platform: string;\r\n  type: string;\r\n  operator: string;\r\n  assessmentManager: string;\r\n  startDate: string;\r\n  status: string;\r\n}\r\n\r\ninterface IAccountInfo {\r\n  id: string;\r\n  systemId: string;\r\n  manager: string;\r\n  platform: string;\r\n  type: string;\r\n  name: string;\r\n  accessKey: string;\r\n  secretKey: string;\r\n}\r\n\r\ntype IStatus = \"complete\" | \"processing\" | \"waiting\" | \"error\";\r\n\r\nexport default function Scan() {\r\n  const classes = scanStyles();\r\n  const history = useHistory();\r\n\r\n  const [cloudList, setCloud] = useState<IScan[] | undefined>(undefined);\r\n  const [accountList, setAccount] = useState<string[]>([]);\r\n  const [accountInfo, setAccountInfo] = useState<IAccountInfo[]>([]);\r\n  const [modal, setModal] = useState<boolean>(true);\r\n\r\n  const getAccountList = async () => {\r\n    let account_list: string[] = [];\r\n\r\n    let response = await fetch(\r\n      `http://localhost:4000/api/asset`,\r\n      requestInit(\"GET\", undefined, true)\r\n    )\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.result === true) {\r\n          if (res.msg === \"token is not valid\") {\r\n            document.cookie = \"token=; expires=Thu, 01 Jan 1999 00:00:10 GMT;\";\r\n            localStorage.removeItem(\"systemId\");\r\n\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              title: \"로그인 토큰이 만료되었습니다.\",\r\n              text: \"다시 로그인 해주세요.\",\r\n              heightAuto: false,\r\n            }).then(() => {\r\n              window.location.href = \"/login\";\r\n            });\r\n          } else if (res.msg === \"Query is not valid\") {\r\n            console.log(\"Query is not valid\");\r\n          } else {\r\n            setAccountInfo(res.accounts);\r\n            res.accounts.map((o: any, idx: number) => {\r\n              account_list.push(o.id);\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n    setAccount(account_list);\r\n  };\r\n\r\n  const getAssessmentList = async (account_list: string[]) => {\r\n    let assessmentList: IScan[] = [];\r\n\r\n    await account_list.map(async (o: any, idx: number) => {\r\n      let response = await fetch(\r\n        `http://localhost:4000/api/assessment?account_id=${o}`,\r\n        requestInit(\"GET\")\r\n      )\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.result === true) {\r\n            res.assessments.map((x: any) => {\r\n              if (\r\n                x.status === \"점검대기\" ||\r\n                x.status === \"점검중\" ||\r\n                x.status === \"점검완료\" ||\r\n                x.status === \"오류발생\"\r\n              ) {\r\n                let asseement: IScan = {\r\n                  assessmentManager: x.assessmentManager,\r\n                  id: x.id,\r\n                  operator: \"\",\r\n                  platform: \"\",\r\n                  service: \"\",\r\n                  startDate: x.startDate,\r\n                  status: x.status,\r\n                  type: \"\",\r\n                };\r\n\r\n                accountInfo.map((y: IAccountInfo) => {\r\n                  if (o == y.id) {\r\n                    asseement.platform = y.platform;\r\n                    asseement.type = y.type;\r\n                    asseement.operator = y.manager;\r\n                    asseement.service = y.name;\r\n                  }\r\n                });\r\n\r\n                assessmentList.push(asseement);\r\n              }\r\n            });\r\n          }\r\n          if (account_list.length - 1 == idx) {\r\n            setCloud(assessmentList);\r\n          }\r\n        });\r\n    });\r\n  };\r\n\r\n  const postHistory = async (\r\n    response: string,\r\n    historyId: string,\r\n    assessmentId: number\r\n  ) => {\r\n    if (response === \"Complete\") {\r\n      let high_total = 0,\r\n        middle_total = 0,\r\n        low_total = 0,\r\n        high_count = 0,\r\n        middle_count = 0,\r\n        low_count = 0;\r\n\r\n      const assessment_results = await fetch(\r\n        `http://116.43.4.229:10831/assessment-results?historyId=${historyId}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then(async (res) => {\r\n          if (Array.isArray(res)) {\r\n            res.map((o) => {\r\n              for (let d of AWSChecklist) {\r\n                let chk = \"\";\r\n\r\n                for (let i = 0; i < 3 - String(o.chkIndex).length; i++) {\r\n                  chk += \"0\";\r\n                }\r\n\r\n                if (d.index == `${o.service}_${chk}${o.chkIndex}`) {\r\n                  if (d.risk == \"상\") {\r\n                    high_total++;\r\n                    if (o.result == \"N\") {\r\n                      high_count++;\r\n                    }\r\n                  } else if (d.risk == \"중\") {\r\n                    middle_total++;\r\n                    if (o.result == \"N\") {\r\n                      middle_count++;\r\n                    }\r\n                  } else if (d.risk == \"하\") {\r\n                    low_total++;\r\n                    if (o.result == \"N\") {\r\n                      low_count++;\r\n                    }\r\n                  }\r\n\r\n                  break;\r\n                }\r\n              }\r\n            });\r\n\r\n            await fetch(\r\n              `http://localhost:4000/api/history`,\r\n              requestInit(\"POST\", {\r\n                id: historyId,\r\n                assessment_id: assessmentId,\r\n                high_total: high_total,\r\n                high_count: high_count,\r\n                middle_total: middle_total,\r\n                middle_count: middle_count,\r\n                low_total: low_total,\r\n                low_count: low_count,\r\n              })\r\n            );\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (document.cookie === \"path=/\" || document.cookie === \"\") {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"로그인 에러\",\r\n        text: \"로그인후에 이용해주세요.\",\r\n        heightAuto: false,\r\n      }).then(() => {\r\n        window.location.href = \"/login\";\r\n        return;\r\n      });\r\n    }\r\n\r\n    getAccountList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAssessmentList(accountList);\r\n  }, [accountList]);\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className={classes.header}>\r\n        <div className={classes.headerText}>취약점관리</div>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            history.push(\"/service/manage/scan\");\r\n          }}\r\n        >\r\n          취약점관리\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            history.push(\"/service/manage/vlun\");\r\n          }}\r\n        >\r\n          취약점현황\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            history.push(\"/service/manage/inspection\");\r\n          }}\r\n        >\r\n          이행점검\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          className={classes.headerButton}\r\n          onClick={() => {\r\n            history.push(\"/service/manage/entire\");\r\n          }}\r\n        >\r\n          전체점검현황\r\n        </Button>\r\n      </div>\r\n\r\n      <div className={classes.content}>\r\n        <div className={classes.contentHeader}></div>\r\n        <div className={classes.tableWrapper}>\r\n          <MaterialTable\r\n            title={\r\n              <div className={classes.title}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setModal(false);\r\n                  }}\r\n                >\r\n                  진단 추가\r\n                </Button>\r\n              </div>\r\n            }\r\n            columns={[\r\n              { title: \"진단번호\", field: \"id\" },\r\n              { title: \"서비스명\", field: \"service\" },\r\n              { title: \"구분\", field: \"platform\" },\r\n              { title: \"용도\", field: \"type\" },\r\n              { title: \"운영담당자\", field: \"operator\" },\r\n              { title: \"점검담당자\", field: \"assessmentManager\" },\r\n              { title: \"점검일정\", field: \"startDate\" },\r\n              {\r\n                title: \"상태\",\r\n                field: \"status\",\r\n                render: (rowData) => {\r\n                  let color: IStatus = \"error\";\r\n                  switch (rowData.status) {\r\n                    case \"점검완료\":\r\n                      color = \"complete\";\r\n                      break;\r\n                    case \"점검중\":\r\n                      color = \"processing\";\r\n                      break;\r\n                    case \"점검대기\":\r\n                      color = \"waiting\";\r\n                      break;\r\n                    default:\r\n                      break;\r\n                  }\r\n\r\n                  return (\r\n                    <div className={classes.status}>\r\n                      <div\r\n                        className={`${classes.circle} ${classes[color]}`}\r\n                      ></div>\r\n                      {rowData?.status}\r\n                    </div>\r\n                  );\r\n                },\r\n              },\r\n              {\r\n                title: \"Actions\",\r\n                field: \"action\",\r\n                render: (rowData) => {\r\n                  if (rowData?.status === \"점검완료\")\r\n                    return (\r\n                      <div className={classes.buttonLayout}>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            history.push(\r\n                              `/service/manage/scan/detail?assessment_id=${rowData.id}`\r\n                            );\r\n                          }}\r\n                        >\r\n                          결과보기\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={async () => {\r\n                            await fetch(\r\n                              `http://localhost:4000/api/history/last?assessment_id=${rowData.id}`\r\n                            )\r\n                              .then((res) => res.json())\r\n                              .then(async (res) => {\r\n                                if (res.result) {\r\n                                  await fetch(\r\n                                    `http://116.43.4.229:10831/assessment-results?historyId=${res.history.id}`\r\n                                  )\r\n                                    .then((res2) => res2.json())\r\n                                    .then(async (res2) => {\r\n                                      if (Array.isArray(res2)) {\r\n                                        let high_count = 0,\r\n                                          middle_count = 0,\r\n                                          low_count = 0;\r\n\r\n                                        let check = true;\r\n                                        for (let i = 0; i < res2.length; i++) {\r\n                                          if (res2[i].result === \"?\") {\r\n                                            check = false;\r\n                                            break;\r\n                                          }\r\n\r\n                                          let chk = \"\";\r\n                                          let value_ =\r\n                                            String(res2[i].chkIndex).length == 1\r\n                                              ? 2\r\n                                              : 1;\r\n\r\n                                          for (let i = 0; i < value_; i++) {\r\n                                            chk += \"0\";\r\n                                          }\r\n\r\n                                          for (let d of AWSChecklist) {\r\n                                            if (\r\n                                              d.index ==\r\n                                              `${res2[i].service}_${chk}${res2[i].chkIndex}`\r\n                                            ) {\r\n                                              if (\r\n                                                d.risk == \"상\" &&\r\n                                                res2[i].result == \"N\"\r\n                                              ) {\r\n                                                high_count++;\r\n                                              } else if (\r\n                                                d.risk == \"중\" &&\r\n                                                res2[i].result == \"N\"\r\n                                              ) {\r\n                                                middle_count++;\r\n                                              } else if (\r\n                                                d.risk == \"하\" &&\r\n                                                res2[i].result == \"N\"\r\n                                              ) {\r\n                                                low_count++;\r\n                                              }\r\n\r\n                                              break;\r\n                                            }\r\n                                          }\r\n                                        }\r\n                                        if (check) {\r\n                                          await fetch(\r\n                                            `http://localhost:4000/api/assessment/status`,\r\n                                            requestInit(\"PUT\", {\r\n                                              status: \"이행대기\",\r\n                                              id: rowData.id,\r\n                                            })\r\n                                          );\r\n\r\n                                          let changeList: IScan[] = [];\r\n\r\n                                          await cloudList?.map((o, idx) => {\r\n                                            if (o.id !== rowData.id) {\r\n                                              changeList.push(o);\r\n                                            }\r\n                                          });\r\n\r\n                                          await setCloud(undefined);\r\n                                          await setCloud(changeList);\r\n\r\n                                          await fetch(\r\n                                            \"http://localhost:4000/api/history\",\r\n                                            requestInit(\"PUT\", {\r\n                                              id: res.history.id,\r\n                                              high_count: high_count,\r\n                                              middle_count: middle_count,\r\n                                              low_count: low_count,\r\n                                            })\r\n                                          );\r\n                                        } else {\r\n                                          Swal.fire({\r\n                                            icon: \"error\",\r\n                                            title: \"점검이 완료되지 않았습니다\",\r\n                                            text: \"인터뷰가 진행되지 않은 항목이 존재합니다\",\r\n                                            heightAuto: false,\r\n                                          });\r\n                                        }\r\n                                      }\r\n                                    });\r\n                                }\r\n                              });\r\n                          }}\r\n                        >\r\n                          점검종료\r\n                        </Button>\r\n                      </div>\r\n                    );\r\n\r\n                  if (rowData?.status === \"점검중\")\r\n                    return (\r\n                      <div>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          disabled\r\n                          className={classes.disabled}\r\n                        >\r\n                          점검중\r\n                        </Button>\r\n                      </div>\r\n                    );\r\n\r\n                  if (rowData?.status === \"점검대기\")\r\n                    return (\r\n                      <div>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={async () => {\r\n                            const rowInfo = await fetch(\r\n                              `http://localhost:4000/api/assessment?id=${rowData.id}`,\r\n                              requestInit(\"GET\")\r\n                            )\r\n                              .then((res) => res.json())\r\n                              .then((res) => {\r\n                                if (res.result === true) {\r\n                                  return res.assessments[0];\r\n                                }\r\n                              });\r\n\r\n                            if (rowInfo.status === \"점검대기\") {\r\n                              const keyData = await fetch(\r\n                                `http://localhost:4000/api/asset?id=${rowInfo.accountId}`,\r\n                                requestInit(\"GET\")\r\n                              )\r\n                                .then((res) => res.json())\r\n                                .then((res) => {\r\n                                  if (res.result === true) {\r\n                                    return res.accounts[0];\r\n                                  }\r\n                                });\r\n\r\n                              let date = new Date();\r\n                              let dateInfo = String(date).split(\" \");\r\n\r\n                              let historyId = `${\r\n                                rowInfo.accountId\r\n                              }:${date.getFullYear()}:${\r\n                                String(date.getMonth()).length == 1\r\n                                  ? \"0\" + String(date.getMonth())\r\n                                  : String(date.getMonth())\r\n                              }:${dateInfo[2]}:${dateInfo[4]}`;\r\n\r\n                              const body = {\r\n                                historyId: btoa(historyId),\r\n                                accessKey: keyData.accessKey,\r\n                                secretKey: keyData.secretKey,\r\n                                regionName: keyData.region,\r\n                                services: [\r\n                                  \"EC2\",\r\n                                  \"IAM\",\r\n                                  \"RDS\",\r\n                                  \"EBS\",\r\n                                  \"S3\",\r\n                                  \"CloudFront\",\r\n                                  \"CloudWatch\",\r\n                                  \"CloudTrail\",\r\n                                  \"Lambda\",\r\n                                  \"Cost\",\r\n                                  \"KMS\",\r\n                                  \"VPC\",\r\n                                ],\r\n                              };\r\n\r\n                              await fetch(\r\n                                `http://localhost:4000/api/assessment/status`,\r\n                                requestInit(\"PUT\", {\r\n                                  status: \"점검중\",\r\n                                  id: rowData.id,\r\n                                })\r\n                              );\r\n\r\n                              let changeList = cloudList;\r\n\r\n                              await changeList?.map((o, idx) => {\r\n                                if (o.id === rowData.id) {\r\n                                  o.status = \"점검중\";\r\n                                }\r\n                              });\r\n\r\n                              await setCloud(undefined);\r\n                              await setCloud(changeList);\r\n\r\n                              try {\r\n                                const response = await fetch(\r\n                                  `http://116.43.4.229:10831/assessment-results`,\r\n                                  requestInit(\"POST\", body)\r\n                                )\r\n                                  .then((res) => {\r\n                                    return res.json();\r\n                                  })\r\n                                  .then(async (res) => {\r\n                                    if (res.message === \"Complete\") {\r\n                                      await fetch(\r\n                                        `http://localhost:4000/api/assessment/status`,\r\n                                        requestInit(\"PUT\", {\r\n                                          status: \"점검완료\",\r\n                                          id: rowData.id,\r\n                                        })\r\n                                      );\r\n\r\n                                      // 삭제해야됨 해당 리스트\r\n\r\n                                      let changeList = cloudList;\r\n\r\n                                      await changeList?.map((o, idx) => {\r\n                                        if (o.id === rowData.id) {\r\n                                          o.status = \"점검완료\";\r\n                                        }\r\n                                      });\r\n\r\n                                      await setCloud(undefined);\r\n                                      await setCloud(changeList);\r\n\r\n                                      return res.message;\r\n                                    } else {\r\n                                      await fetch(\r\n                                        `http://localhost:4000/api/assessment/status`,\r\n                                        requestInit(\"PUT\", {\r\n                                          status: \"오류발생\",\r\n                                          id: rowData.id,\r\n                                        })\r\n                                      );\r\n\r\n                                      let changeList = cloudList;\r\n\r\n                                      await changeList?.map((o, idx) => {\r\n                                        if (o.id === rowData.id) {\r\n                                          o.status = \"오류발생\";\r\n                                        }\r\n                                      });\r\n\r\n                                      await setCloud(undefined);\r\n                                      await setCloud(changeList);\r\n                                    }\r\n                                  });\r\n\r\n                                await postHistory(\r\n                                  response,\r\n                                  body.historyId,\r\n                                  Number(rowData.id)\r\n                                );\r\n                              } catch (error) {\r\n                                await fetch(\r\n                                  `http://localhost:4000/api/assessment/status`,\r\n                                  requestInit(\"PUT\", {\r\n                                    status: \"오류발생\",\r\n                                    id: rowData.id,\r\n                                  })\r\n                                );\r\n\r\n                                let changeList = cloudList;\r\n\r\n                                await changeList?.map((o, idx) => {\r\n                                  if (o.id === rowData.id) {\r\n                                    o.status = \"오류발생\";\r\n                                  }\r\n                                });\r\n\r\n                                await setCloud(undefined);\r\n                                await setCloud(changeList);\r\n                              }\r\n                            }\r\n                          }}\r\n                        >\r\n                          점검시작\r\n                        </Button>\r\n                      </div>\r\n                    );\r\n\r\n                  if (rowData?.status === \"오류발생\")\r\n                    return (\r\n                      <div>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            Swal.fire({\r\n                              icon: \"warning\",\r\n                              title: \"삭제하시겠습니까?\",\r\n                              text: \"\",\r\n                              heightAuto: false,\r\n                              showCancelButton: true,\r\n                            }).then((result) => {\r\n                              if (result.isConfirmed) {\r\n                                fetch(\r\n                                  \"http://localhost:4000/api/assessment\",\r\n                                  requestInit(\"DELETE\", { id: rowData.id })\r\n                                )\r\n                                  .then((res) => res.json())\r\n                                  .then((res) => {\r\n                                    if (res.result) {\r\n                                      window.location.reload();\r\n                                    }\r\n                                  });\r\n                              }\r\n                            });\r\n                          }}\r\n                        >\r\n                          진단삭제\r\n                        </Button>\r\n                      </div>\r\n                    );\r\n                },\r\n              },\r\n            ]}\r\n            data={cloudList as IScan[]}\r\n            options={{\r\n              actionsColumnIndex: -1,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={`${classes.overlay} ${modal && classes.visibility}`}\r\n        onClick={() => {\r\n          setModal(true);\r\n        }}\r\n      ></div>\r\n      <Modal modal={modal} setModal={setModal} />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\login\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\landing\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\setting\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\dashboard\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\vulnerability\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\checklist\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\layout\\topbar\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\entire\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\inspection\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\layout\\sidebar\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\hooks\\useChangeToggle.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\hooks\\useToggle.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\asset\\modal.tsx",["573","574","575"],"import React, { useState, useEffect } from \"react\";\r\nimport { modalStyles } from \"./styles\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { AWSRegionList } from \"../../../constant/region\";\r\nimport { requestInit } from \"../../../constant/requestInit\";\r\nimport Swal from \"sweetalert2\";\r\n\r\ninterface IModalProps {\r\n  modal: boolean;\r\n  setting: boolean;\r\n  setModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setSetting: React.Dispatch<React.SetStateAction<boolean>>;\r\n  accountId: string;\r\n  setAccountId: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\ninterface ICloudModal {\r\n  name: string;\r\n  access_key: string;\r\n  secret_key: string;\r\n  manager: string;\r\n  type: string;\r\n  region: string;\r\n  platform: string;\r\n}\r\n\r\ntype ICloudProps =\r\n  | \"name\"\r\n  | \"access_key\"\r\n  | \"secret_key\"\r\n  | \"manager\"\r\n  | \"type\"\r\n  | \"region\"\r\n  | \"platform\";\r\n\r\nexport default function Modal(props: IModalProps) {\r\n  const classes = modalStyles();\r\n  const [info, setInfo] = useState<ICloudModal>({\r\n    name: \"\",\r\n    access_key: \"\",\r\n    secret_key: \"\",\r\n    manager: \"\",\r\n    type: \"\",\r\n    region: \"us-east-1\",\r\n    platform: \"AWS\",\r\n  });\r\n\r\n  const setSettingInfo = async () => {\r\n    await fetch(`http://localhost:4000/api/asset?id=${props.accountId}`)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        if (res.accounts && res.accounts.length > 0) {\r\n          setInfo({\r\n            name: res.accounts[0].name,\r\n            access_key: res.accounts[0].accessKey,\r\n            secret_key: res.accounts[0].secretKey,\r\n            manager: res.accounts[0].manager,\r\n            type: res.accounts[0].type,\r\n            region: res.accounts[0].region,\r\n            platform: res.accounts[0].platform,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.setting) {\r\n      setSettingInfo();\r\n    } else {\r\n      setInfo({\r\n        name: \"\",\r\n        access_key: \"\",\r\n        secret_key: \"\",\r\n        manager: \"\",\r\n        type: \"\",\r\n        region: \"us-east-1\",\r\n        platform: \"AWS\",\r\n      });\r\n    }\r\n  }, [props.modal]);\r\n\r\n  return (\r\n    <div className={`${classes.modal} ${props.modal && classes.visibility}`}>\r\n      <div className={classes.modalHead}>\r\n        <div className={classes.title}>\r\n          {props.setting ? \"클라우드 변경\" : \"클라우드 추가\"}\r\n        </div>\r\n      </div>\r\n      <div className={classes.modalBody}>\r\n        <div className={classes.inputWrapper}>\r\n          <TextField\r\n            required\r\n            id=\"filled-required\"\r\n            label=\"name\"\r\n            variant=\"filled\"\r\n            value={info.name}\r\n            className={classes.input}\r\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n              setInfo({\r\n                ...info,\r\n                name: event.target.value as string,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={classes.inputWrapper}>\r\n          <TextField\r\n            required\r\n            id=\"filled-required\"\r\n            label=\"accessKey\"\r\n            variant=\"filled\"\r\n            value={info.access_key}\r\n            className={classes.input}\r\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n              setInfo({\r\n                ...info,\r\n                access_key: event.target.value as string,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={classes.inputWrapper}>\r\n          <TextField\r\n            required\r\n            id=\"filled-required\"\r\n            label=\"secretKey\"\r\n            variant=\"filled\"\r\n            value={info.secret_key}\r\n            className={classes.input}\r\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n              setInfo({\r\n                ...info,\r\n                secret_key: event.target.value as string,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={classes.inputWrapper}>\r\n          <TextField\r\n            required\r\n            id=\"filled-required\"\r\n            label=\"manager\"\r\n            variant=\"filled\"\r\n            value={info.manager}\r\n            className={classes.input}\r\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n              setInfo({\r\n                ...info,\r\n                manager: event.target.value as string,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={classes.inputWrapper}>\r\n          <TextField\r\n            required\r\n            id=\"filled-required\"\r\n            label=\"type\"\r\n            variant=\"filled\"\r\n            value={info.type}\r\n            className={classes.input}\r\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n              setInfo({\r\n                ...info,\r\n                type: event.target.value as string,\r\n              });\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={classes.inputWrapper}>\r\n          <FormControl className={classes.formControl}>\r\n            <Select\r\n              value={info.region}\r\n              onChange={(evnet: React.ChangeEvent<{ value: unknown }>) => {\r\n                setInfo({\r\n                  ...info,\r\n                  region: evnet.target.value as string,\r\n                });\r\n              }}\r\n              displayEmpty\r\n              className={classes.formControl}\r\n              inputProps={{ \"aria-label\": \"Without label\" }}\r\n            >\r\n              {AWSRegionList.map((o, idx) => {\r\n                return (\r\n                  <MenuItem key={`menu-item-${idx}`} value={o[1]}>\r\n                    {o[0]}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </div>\r\n      <div className={classes.modalFooter}>\r\n        {props.setting && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={async () => {\r\n              await fetch(\r\n                `http://localhost:4000/api/asset`,\r\n                requestInit(\"DELETE\", { id: props.accountId })\r\n              );\r\n\r\n              props.setAccountId(\"\");\r\n              props.setModal(true);\r\n\r\n              window.location.reload();\r\n            }}\r\n            className={classes.button}\r\n          >\r\n            삭제\r\n          </Button>\r\n        )}\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={async () => {\r\n            let isEmpty = false;\r\n            for (let key in info) {\r\n              if (info[key as ICloudProps] === \"\") isEmpty = true;\r\n            }\r\n\r\n            if (isEmpty) {\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"비어 있는 값이 존재합니다\",\r\n                heightAuto: false,\r\n              });\r\n\r\n              return;\r\n            }\r\n\r\n            if (props.setting) {\r\n              const body = {\r\n                id: props.accountId,\r\n                name: info.name,\r\n                access_key: info.access_key,\r\n                secret_key: info.secret_key,\r\n                manager: info.manager,\r\n                type: info.type,\r\n                region: info.region,\r\n                platform: \"AWS\",\r\n              };\r\n              const response: any = await fetch(\r\n                \"http://localhost:4000/api/asset\",\r\n                requestInit(\"PUT\", body, true)\r\n              )\r\n                .then((res) => res.json())\r\n                .then((res) => {\r\n                  if (res.result === true) {\r\n                    if (res.msg === \"token is not valid\") {\r\n                      document.cookie =\r\n                        \"token=; expires=Thu, 01 Jan 1999 00:00:10 GMT;\";\r\n                      localStorage.removeItem(\"systemId\");\r\n                      Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"로그인 토큰이 만료되었습니다.\",\r\n                        text: \"다시 로그인 해주세요.\",\r\n                        heightAuto: false,\r\n                      }).then(() => {\r\n                        window.location.href = \"/login\";\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n            } else {\r\n              const body = info;\r\n\r\n              const response: any = await fetch(\r\n                \"http://localhost:4000/api/asset\",\r\n                requestInit(\"POST\", body, true)\r\n              )\r\n                .then((res) => res.json())\r\n                .then((res) => {\r\n                  if (res.result === true) {\r\n                    if (res.msg === \"token is not valid\") {\r\n                      document.cookie =\r\n                        \"token=; expires=Thu, 01 Jan 1999 00:00:10 GMT;\";\r\n                      localStorage.removeItem(\"systemId\");\r\n                      Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"로그인 토큰이 만료되었습니다.\",\r\n                        text: \"다시 로그인 해주세요.\",\r\n                        heightAuto: false,\r\n                      }).then(() => {\r\n                        window.location.href = \"/login\";\r\n                      });\r\n                    }\r\n                  }\r\n                });\r\n            }\r\n            props.setModal(true);\r\n            props.setSetting(false);\r\n\r\n            window.location.reload();\r\n          }}\r\n          className={classes.button}\r\n        >\r\n          {props.setting ? \"변경\" : \"확인\"}\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n          onClick={() => {\r\n            props.setAccountId(\"\");\r\n            props.setModal(true);\r\n            props.setSetting(false);\r\n          }}\r\n          className={classes.button}\r\n        >\r\n          취소\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\asset\\card.tsx",["576"],"import React, { useState } from \"react\";\r\nimport { cardStyles } from \"./styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Settings } from \"@material-ui/icons\";\r\n\r\ntype IProvider = \"AWS\" | \"AZURE\" | \"GCP\";\r\n\r\ninterface ICardProps {\r\n  name: string;\r\n  provider: IProvider;\r\n  account_id: string;\r\n  setModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setSetting: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setAccountId: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nexport default function Card(props: ICardProps): JSX.Element {\r\n  const classes = cardStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={classes.settingLogo}\r\n        onClick={() => {\r\n          props.setAccountId(props.account_id);\r\n          props.setSetting(true);\r\n          props.setModal(false);\r\n        }}\r\n      >\r\n        <Settings />\r\n      </div>\r\n      <div\r\n        className={classes.mainContainer}\r\n        onClick={() => {\r\n          history.push(`/service/asset/detail?account_id=${props.account_id}`);\r\n        }}\r\n      >\r\n        <div\r\n          className={classes.provider}\r\n          style={{\r\n            backgroundImage: `url('/images/${props.provider}.png')`,\r\n            backgroundSize: \"contain\",\r\n            backgroundPosition: \"center\",\r\n            backgroundRepeat: \"no-repeat\",\r\n          }}\r\n        ></div>\r\n        <div className={classes.name}>{props.name}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\layout\\sidebar\\row.tsx",["577","578","579","580"],"import React, { useState } from \"react\";\r\nimport { rowStyles } from \"./styles\";\r\nimport {\r\n  DashboardOutlined,\r\n  PlaylistAddCheck,\r\n  Security,\r\n  CloudQueue,\r\n  SettingsOutlined,\r\n} from \"@material-ui/icons\";\r\nimport useToggle from \"../../../hooks/useToggle\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface IRowProps {\r\n  text: string;\r\n  url: string;\r\n  menus: string[];\r\n}\r\n\r\nexport default function Row(props: IRowProps): JSX.Element {\r\n  const classes = rowStyles();\r\n  const history = useHistory();\r\n  const { isToggle } = useToggle();\r\n  const [showDetail, setShow] = useState<boolean>(false);\r\n\r\n  const handleShowDetail = () => {\r\n    setShow(!showDetail);\r\n  };\r\n\r\n  const handleGoPage = (url: string) => {\r\n    history.push(url);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.menuWrapper}>\r\n      <div\r\n        className={`${classes.rowWrapper} ${isToggle && classes.toggle} ${\r\n          window.location.href.indexOf(props.url) != -1 && classes.active\r\n        }`}\r\n        onClick={() => {\r\n          if (isToggle || props.menus.length === 0) {\r\n            handleGoPage(props.url);\r\n            return;\r\n          }\r\n\r\n          handleShowDetail();\r\n        }}\r\n      >\r\n        <div className={classes.rowIcon}>\r\n          {props.text === \"대시보드\" && <DashboardOutlined />}\r\n          {props.text === \"자산관리\" && <CloudQueue />}\r\n          {props.text === \"취약점관리\" && <Security />}\r\n          {props.text === \"체크리스트\" && <PlaylistAddCheck />}\r\n          {props.text === \"설정\" && <SettingsOutlined />}\r\n        </div>\r\n        <div className={classes.rowText}>{props.text}</div>\r\n      </div>\r\n      <div\r\n        className={`${classes.subMenuWrapper} ${\r\n          (isToggle || !showDetail) && classes.hide\r\n        }`}\r\n        style={{ height: `${props.menus.length * 36}px` }}\r\n      >\r\n        {props.menus.map((o, idx) => {\r\n          let text = \"\";\r\n          if (o == \"취약점검사\") text = \"scan\";\r\n          else if (o == \"취약점현황\") text = \"vlun\";\r\n          else if (o == \"이행점검\") text = \"inspection\";\r\n          else text = \"entire\";\r\n\r\n          return (\r\n            <div\r\n              className={`${classes.subMenu} ${isToggle && classes.toggleSub} ${\r\n                window.location.href.indexOf(text) !== -1 && classes.subActive\r\n              }`}\r\n              onClick={() => {\r\n                history.push(`${props.url}/${text.toLowerCase()}`);\r\n              }}\r\n              key={`row-${idx}`}\r\n            >\r\n              {o}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\constant\\region.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\constant\\checklist.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\vulnerability\\modal.tsx",["581"],"import React, { useState, useEffect } from \"react\";\r\nimport { modalStyles } from \"./styles\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormGroup,\r\n} from \"@material-ui/core\";\r\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\r\n\r\ninterface IModalProps {\r\n  modal: boolean;\r\n  setModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n  rawData: any;\r\n  isFilter: boolean;\r\n  filterList: IFilter;\r\n  setFilterList: React.Dispatch<React.SetStateAction<IFilter>>;\r\n}\r\n\r\ninterface IFilter {\r\n  IAM: boolean;\r\n  EC2: boolean;\r\n  CloudFront: boolean;\r\n  CloudTrail: boolean;\r\n  CloudWatch: boolean;\r\n  S3: boolean;\r\n  RDS: boolean;\r\n  Lambda: boolean;\r\n  EBS: boolean;\r\n  KMS: boolean;\r\n  Cost: boolean;\r\n  VPC: boolean;\r\n}\r\n\r\nexport default function Modal(props: IModalProps) {\r\n  const classes = modalStyles();\r\n  const [tempList, setList] = useState<IFilter>({\r\n    IAM: false,\r\n    EC2: false,\r\n    S3: false,\r\n    RDS: false,\r\n    VPC: false,\r\n    CloudFront: false,\r\n    CloudTrail: false,\r\n    CloudWatch: false,\r\n    Lambda: false,\r\n    EBS: false,\r\n    KMS: false,\r\n    Cost: false,\r\n  });\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setList({\r\n      ...tempList,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setList(props.filterList);\r\n  }, [props.modal]);\r\n\r\n  if (props.isFilter) {\r\n    return (\r\n      <div className={`${classes.modal} ${props.modal && classes.visibility}`}>\r\n        <div className={classes.modalHead}>\r\n          <div className={classes.title}>필터</div>\r\n        </div>\r\n        <div className={classes.modalBody}>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.EC2}\r\n                  onChange={handleChange}\r\n                  name=\"EC2\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"EC2\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.IAM}\r\n                  onChange={handleChange}\r\n                  name=\"IAM\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"IAM\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.S3}\r\n                  onChange={handleChange}\r\n                  name=\"S3\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"S3\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.RDS}\r\n                  onChange={handleChange}\r\n                  name=\"RDS\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"RDS\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.VPC}\r\n                  onChange={handleChange}\r\n                  name=\"VPC\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"VPC\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.CloudFront}\r\n                  onChange={handleChange}\r\n                  name=\"CloudFront\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"CloudFront\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.CloudTrail}\r\n                  onChange={handleChange}\r\n                  name=\"CloudTrail\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"CloudTrail\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.CloudWatch}\r\n                  onChange={handleChange}\r\n                  name=\"CloudWatch\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"CloudWatch\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.Lambda}\r\n                  onChange={handleChange}\r\n                  name=\"Lambda\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Lambda\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.EBS}\r\n                  onChange={handleChange}\r\n                  name=\"EBS\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"EBS\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.KMS}\r\n                  onChange={handleChange}\r\n                  name=\"KMS\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"KMS\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.Cost}\r\n                  onChange={handleChange}\r\n                  name=\"Cost\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Cost\"\r\n            />\r\n          </FormGroup>\r\n        </div>\r\n        <div className={classes.modalFooter}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={async () => {\r\n              props.setFilterList(tempList);\r\n              props.setModal(true);\r\n            }}\r\n            className={classes.button}\r\n          >\r\n            확인\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            onClick={async () => {\r\n              props.setModal(true);\r\n            }}\r\n            className={classes.button}\r\n          >\r\n            취소\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`${classes.modal} ${classes.wideWidth} ${\r\n        props.modal && classes.visibility\r\n      }`}\r\n    >\r\n      <div className={classes.modalHead}>\r\n        <div className={classes.title}>RAW-DATA</div>\r\n      </div>\r\n      <div className={classes.modalBody}>\r\n        {props.rawData && (\r\n          <div className={classes.dataWrapper}>\r\n            <div className={classes.cli}>\r\n              <div className={classes.dataTitle}>CLI</div>\r\n              <div className={classes.dataContent}>\r\n                {JSON.parse(props.rawData).cli.map((o: any, idx: any) => (\r\n                  <div className={classes.cliDetail} key={`modal-cli-${idx}`}>\r\n                    {o}\r\n                    <FileCopyOutlinedIcon\r\n                      onClick={() => {\r\n                        const tempElem = document.createElement(\"textarea\");\r\n                        tempElem.value = o;\r\n                        document.body.appendChild(tempElem);\r\n\r\n                        tempElem.select();\r\n                        document.execCommand(\"copy\");\r\n                        document.body.removeChild(tempElem);\r\n                      }}\r\n                    />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className={classes.summary}>\r\n              <div className={classes.dataTitle}>Summary</div>\r\n              <div className={classes.dataContent}>\r\n                {JSON.parse(props.rawData).summary.map((o: any, idx: any) => (\r\n                  <div\r\n                    className={classes.summaryDetail}\r\n                    key={`modal-summary-${idx}`}\r\n                  >\r\n                    {o}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className={classes.rawData}>\r\n              <div className={classes.dataTitle}>RawData</div>\r\n              <div className={classes.json}>\r\n                {JSON.stringify(JSON.parse(props.rawData).raw_data, null, 4)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={classes.modalFooter}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n          onClick={async () => {\r\n            props.setModal(true);\r\n          }}\r\n          className={classes.button}\r\n        >\r\n          닫기\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\scan\\detailModal.tsx",["582"],"import React, { useState, useEffect } from \"react\";\r\nimport { modalStyles } from \"./styles\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { requestInit } from \"../../../constant/requestInit\";\r\nimport Swal from \"sweetalert2\";\r\n\r\ninterface IModalInfo {\r\n  result: string;\r\n  id: string;\r\n  comment: string;\r\n  isFetch: boolean;\r\n}\r\n\r\ninterface IModalProps {\r\n  modal: boolean;\r\n  setModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n  info: IModalInfo;\r\n  setInfo: React.Dispatch<React.SetStateAction<IModalInfo>>;\r\n}\r\n\r\nexport default function Modal(props: IModalProps) {\r\n  const classes = modalStyles();\r\n  const [comment, setComment] = useState<string>(\"\");\r\n  const [result, setResult] = useState<string>(\"Y\");\r\n\r\n  useEffect(() => {\r\n    setResult(props.info.result);\r\n    setComment(props.info.comment);\r\n  }, [props.info]);\r\n\r\n  return (\r\n    <div\r\n      className={`${classes.smallModal} ${props.modal && classes.visibility}`}\r\n    >\r\n      <div className={classes.modalHead}>\r\n        <div className={classes.title}>진단 목록 추가</div>\r\n      </div>\r\n      <div className={classes.modalBody}>\r\n        <FormControl className={classes.formControl}>\r\n          <Select\r\n            value={result}\r\n            onChange={(evnet: React.ChangeEvent<{ value: unknown }>) => {\r\n              setResult(evnet.target.value as string);\r\n            }}\r\n            displayEmpty\r\n            className={classes.formControl}\r\n            inputProps={{ \"aria-label\": \"Without label\" }}\r\n          >\r\n            <MenuItem value=\"Y\">Y</MenuItem>\r\n            <MenuItem value=\"N\">N</MenuItem>\r\n            <MenuItem value=\"?\">?</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <div className={classes.inputWrapper}>\r\n          <TextField\r\n            required\r\n            id=\"filled-required\"\r\n            label=\"comment\"\r\n            variant=\"filled\"\r\n            value={comment}\r\n            onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\r\n              setComment(event.target.value as string);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={classes.smallFooter}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={async () => {\r\n            /*\r\n            \r\n            if (comment == \"\") {\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"comment 값이 비어있습니다.\",\r\n                text: \"comment를 입력해주세요\",\r\n                heightAuto: false,\r\n              });\r\n              return;\r\n            } else if (comment == props.info.comment) {\r\n              Swal.fire({\r\n                icon: \"error\",\r\n                title: \"comment 값이 변경되지 않았습니다\",\r\n                text: \"comment를 변경해주세요\",\r\n                heightAuto: false,\r\n              });\r\n              return;\r\n            }\r\n\r\n            await fetch(\r\n              `http://116.43.4.229:10831/assessment-results/${props.info.id}`,\r\n              requestInit(\"PUT\", {\r\n                result: result,\r\n                interview: true,\r\n                interviewContent: comment,\r\n              })\r\n            );\r\n\r\n              props.setInfo({\r\n              id: props.info.id,\r\n              result: result,\r\n              comment: comment,\r\n              isFetch: true,\r\n            });\r\n\r\n            */\r\n\r\n            await fetch(\r\n              `http://116.43.4.229:10831/assessment-results/${props.info.id}`,\r\n              requestInit(\"PUT\", {\r\n                result: \"Y\",\r\n                interview: true,\r\n                interviewContent: \"comment\",\r\n              })\r\n            );\r\n\r\n            props.setInfo({\r\n              id: props.info.id,\r\n              result: \"Y\",\r\n              comment: comment,\r\n              isFetch: true,\r\n            });\r\n\r\n            props.setModal(true);\r\n          }}\r\n          className={classes.button}\r\n        >\r\n          확인\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n          onClick={async () => {\r\n            props.setModal(true);\r\n          }}\r\n          className={classes.button}\r\n        >\r\n          취소\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\dashboard\\table.tsx",["583","584"],"import React, { useEffect } from \"react\";\r\nimport { dashboardStyles, tableStyles } from \"./styles\";\r\n\r\ninterface ITableProps {\r\n  data: IHistory[];\r\n  setVuln: React.Dispatch<React.SetStateAction<IVuln | undefined>>;\r\n  vuln: IVuln;\r\n  setHistoryId: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\ninterface IVuln {\r\n  high_total: string;\r\n  high_count: string;\r\n  middle_total: string;\r\n  middle_count: string;\r\n  low_total: string;\r\n  low_count: string;\r\n}\r\n\r\ninterface IHistory {\r\n  id: string;\r\n  historyId: string;\r\n  service: string;\r\n  platform: string;\r\n  lastDate: string;\r\n  vuln: IVuln;\r\n}\r\n\r\ninterface IVuln {\r\n  high_total: string;\r\n  high_count: string;\r\n  middle_total: string;\r\n  middle_count: string;\r\n  low_total: string;\r\n  low_count: string;\r\n}\r\n\r\nexport default function Table(props: ITableProps): JSX.Element {\r\n  const classes = tableStyles();\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className={classes.header}>\r\n        <div className={classes.title}>점검 이력</div>\r\n      </div>\r\n      <div className={classes.contentWrapper}>\r\n        <table className={classes.table}>\r\n          <thead>\r\n            <tr className={classes.tr}>\r\n              <th className={\"\"}>서비스명</th>\r\n              <th className={\"\"}>구분</th>\r\n              <th className={\"\"}>최근 이행일</th>\r\n              <th className={\"\"}>취약점</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className={classes.tbody}>\r\n            {props.data?.map((o, idx) => (\r\n              <tr\r\n                className={classes.row}\r\n                key={`dashboar-table-${idx}`}\r\n                onClick={() => {\r\n                  props.setVuln({\r\n                    high_count: \"0\",\r\n                    high_total: \"0\",\r\n                    low_count: \"0\",\r\n                    low_total: \"0\",\r\n                    middle_count: \"0\",\r\n                    middle_total: \"0\",\r\n                  });\r\n\r\n                  props.setVuln(o.vuln);\r\n                  props.setHistoryId(o.historyId);\r\n                }}\r\n              >\r\n                <td>{o.service}</td>\r\n                <td>{o.platform}</td>\r\n                <td>{o.lastDate}</td>\r\n                <td>\r\n                  <div className={classes.vulnWrapper}>\r\n                    <div className={classes.high}>{o.vuln.high_count}</div>\r\n                    <div className={classes.middle}>{o.vuln.middle_count}</div>\r\n                    <div className={classes.low}>{o.vuln.low_count}</div>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\dashboard\\rank.tsx",["585","586"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { RankStyles } from \"./styles\";\r\nimport * as d3 from \"d3\";\r\n\r\ninterface IRankProps {\r\n  data: IRank[];\r\n}\r\n\r\ninterface IRank {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\nconst dummy: IRank[] = [\r\n  { name: \"IAM\", value: 5 },\r\n  { name: \"EC2\", value: 1 },\r\n  { name: \"S3\", value: 2 },\r\n  { name: \"RDS\", value: 5 },\r\n  { name: \"VPC\", value: 5 },\r\n  { name: \"CloudFront\", value: 3 },\r\n  { name: \"CloudTrail\", value: 10 },\r\n  { name: \"CloudWatch\", value: 9 },\r\n  { name: \"Lambda\", value: 11 },\r\n  { name: \"KMS\", value: 12 },\r\n  { name: \"EBS\", value: 5 },\r\n  { name: \"Cost\", value: 5 },\r\n];\r\n\r\nconst margin = { top: 60, right: 20, bottom: 30, left: 25 },\r\n  width = 1550 - margin.left - margin.right,\r\n  height = 350 - margin.top - margin.bottom;\r\n\r\nexport default function Rank(props: IRankProps): JSX.Element {\r\n  const classes = RankStyles();\r\n  const rankGraphContainer = useRef(null);\r\n  const [rankData, setRank] = useState<IRank[] | undefined>(undefined);\r\n\r\n  function compare(a: IRank, b: IRank) {\r\n    if (a.value < b.value) {\r\n      return 1;\r\n    }\r\n    if (a.value > b.value) {\r\n      return -1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  useEffect(() => {\r\n    let sortedData: IRank[] = props.data.sort(compare);\r\n\r\n    setRank(sortedData);\r\n  }, [props.data]);\r\n\r\n  useEffect(() => {\r\n    if (rankData && rankGraphContainer.current) {\r\n      d3.select(rankGraphContainer.current)?.selectAll(\"g\").remove();\r\n\r\n      const x = d3.scaleBand().range([0, width]).padding(0.1);\r\n      const y = d3.scaleLinear().range([height, 0]);\r\n\r\n      const svg = d3\r\n        .select(rankGraphContainer.current)\r\n        .attr(\"width\", width + margin.left + margin.right)\r\n        .attr(\"height\", height + margin.top + margin.bottom)\r\n        .append(\"g\")\r\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n      x.domain(rankData.map((d) => d.name));\r\n\r\n      y.domain([0, d3.max(rankData, (d): any => d.value)]);\r\n\r\n      svg\r\n        .selectAll(\".bar\")\r\n        .data(rankData)\r\n        .enter()\r\n        .append(\"rect\")\r\n        .attr(\"class\", \"bar\")\r\n        .attr(\"fill\", \"#c24a4e\")\r\n        .attr(\"x\", (d): any => (x(d.name) as number) + 40)\r\n        .attr(\"width\", x.bandwidth() - 80)\r\n        .attr(\"y\", (d) => height)\r\n        .attr(\"height\", 0);\r\n\r\n      svg\r\n        .append(\"g\")\r\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n        .call(d3.axisBottom(x))\r\n        .attr(\"stroke\", \"#667597\")\r\n        .attr(\"font-weight\", 100);\r\n\r\n      svg\r\n        .append(\"g\")\r\n        .call(d3.axisLeft(y))\r\n        .attr(\"stroke\", \"#667597\")\r\n        .attr(\"font-weight\", 100);\r\n\r\n      svg.selectAll(\"path\").attr(\"stroke\", \"#3B4766\").attr(\"font-weight\", 100);\r\n      svg.selectAll(\"line\").attr(\"stroke\", \"#3B4766\").attr(\"font-weight\", 100);\r\n\r\n      svg\r\n        .selectAll(\".bar\")\r\n        .data(rankData)\r\n        .transition()\r\n        .duration(800)\r\n        .attr(\"y\", (d) => y(d.value))\r\n        .attr(\"height\", (d) => height - y(d.value));\r\n    }\r\n  }, [rankData, rankGraphContainer.current]);\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className={classes.header}>\r\n        <div className={classes.title}>서비스 별 랭킹</div>\r\n      </div>\r\n      <div className={classes.contentWrapper}>\r\n        <svg ref={rankGraphContainer} width={width} height={height}></svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\dashboard\\donut.tsx",["587","588","589","590","591","592","593","594"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { donutStyle } from \"./styles\";\r\nimport { Checkbox, FormControlLabel, FormGroup } from \"@material-ui/core\";\r\n\r\ninterface IDonutProps {\r\n  data: IDonut[];\r\n  historyId: string;\r\n  serviceByData: IRadarList;\r\n}\r\n\r\nexport interface IDonut {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\ninterface IRadar {\r\n  area: string;\r\n  value: number;\r\n}\r\n\r\ninterface IRadarList {\r\n  IAM: IRadar[][];\r\n  EC2: IRadar[][];\r\n  CloudFront: IRadar[][];\r\n  CloudTrail: IRadar[][];\r\n  CloudWatch: IRadar[][];\r\n  S3: IRadar[][];\r\n  RDS: IRadar[][];\r\n  Lambda: IRadar[][];\r\n  EBS: IRadar[][];\r\n  KMS: IRadar[][];\r\n  Cost: IRadar[][];\r\n  VPC: IRadar[][];\r\n}\r\n\r\ninterface IFilter {\r\n  IAM: boolean;\r\n  EC2: boolean;\r\n  CloudFront: boolean;\r\n  CloudTrail: boolean;\r\n  CloudWatch: boolean;\r\n  S3: boolean;\r\n  RDS: boolean;\r\n  Lambda: boolean;\r\n  EBS: boolean;\r\n  KMS: boolean;\r\n  Cost: boolean;\r\n  VPC: boolean;\r\n}\r\n\r\ninterface IServiceByData {\r\n  IAM: IDonut[];\r\n  EC2: IDonut[];\r\n  CloudFront: IDonut[];\r\n  CloudTrail: IDonut[];\r\n  CloudWatch: IDonut[];\r\n  S3: IDonut[];\r\n  RDS: IDonut[];\r\n  Lambda: IDonut[];\r\n  EBS: IDonut[];\r\n  KMS: IDonut[];\r\n  Cost: IDonut[];\r\n  VPC: IDonut[];\r\n}\r\n\r\ntype IRadarType =\r\n  | \"IAM\"\r\n  | \"EC2\"\r\n  | \"CloudFront\"\r\n  | \"CloudTrail\"\r\n  | \"CloudWatch\"\r\n  | \"S3\"\r\n  | \"RDS\"\r\n  | \"Lambda\"\r\n  | \"EBS\"\r\n  | \"KMS\"\r\n  | \"Cost\";\r\n\r\nconst width = 300,\r\n  height = 280,\r\n  radius = Math.min(width, height) / 2;\r\n\r\nconst color = d3.scaleOrdinal([\"#1F77B4\", \"#c24a4e\", \"#ba8e27\", \"#BCBD22\"]);\r\n\r\nconst arc = d3\r\n  .arc()\r\n  .outerRadius(radius - 10)\r\n  .innerRadius(radius - 70);\r\n\r\nconst pie = d3\r\n  .pie<IDonut>()\r\n  .sort(null)\r\n  .startAngle(1.1 * Math.PI)\r\n  .endAngle(3.1 * Math.PI)\r\n  .value(function (d) {\r\n    return d.value;\r\n  });\r\n\r\nexport default function Donut(props: IDonutProps): JSX.Element {\r\n  const donutContainer = useRef(null);\r\n  const classes = donutStyle();\r\n\r\n  const [donutData, setDonut] = useState<IDonut[]>([]);\r\n  const [tempList, setList] = useState<IFilter>({\r\n    IAM: false,\r\n    EC2: false,\r\n    S3: false,\r\n    RDS: false,\r\n    VPC: false,\r\n    CloudFront: false,\r\n    CloudTrail: false,\r\n    CloudWatch: false,\r\n    Lambda: false,\r\n    EBS: false,\r\n    KMS: false,\r\n    Cost: false,\r\n  });\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setList({\r\n      ...tempList,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let temp: IDonut[] = [\r\n      { name: \"pass\", value: 0 },\r\n      { name: \"high\", value: 0 },\r\n      { name: \"middle\", value: 0 },\r\n      { name: \"low\", value: 0 },\r\n    ];\r\n\r\n    if (\r\n      !tempList.CloudFront &&\r\n      !tempList.CloudTrail &&\r\n      !tempList.CloudWatch &&\r\n      !tempList.Cost &&\r\n      !tempList.EBS &&\r\n      !tempList.EC2 &&\r\n      !tempList.IAM &&\r\n      !tempList.KMS &&\r\n      !tempList.Lambda &&\r\n      !tempList.RDS &&\r\n      !tempList.S3 &&\r\n      !tempList.VPC\r\n    ) {\r\n      temp = props.data;\r\n    } else {\r\n      for (let key in props.serviceByData) {\r\n        if (tempList[key as IRadarType]) {\r\n          props.serviceByData[key as IRadarType][0].map((o) => {\r\n            temp[0].value += o.value;\r\n          });\r\n\r\n          props.serviceByData[key as IRadarType][1].map((o) => {\r\n            temp[1].value += o.value;\r\n          });\r\n\r\n          props.serviceByData[key as IRadarType][2].map((o) => {\r\n            temp[2].value += o.value;\r\n          });\r\n\r\n          props.serviceByData[key as IRadarType][3].map((o) => {\r\n            temp[3].value += o.value;\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    setDonut(temp);\r\n  }, [tempList]);\r\n\r\n  useEffect(() => {\r\n    setDonut(props.data);\r\n    setList({\r\n      IAM: false,\r\n      EC2: false,\r\n      S3: false,\r\n      RDS: false,\r\n      VPC: false,\r\n      CloudFront: false,\r\n      CloudTrail: false,\r\n      CloudWatch: false,\r\n      Lambda: false,\r\n      EBS: false,\r\n      KMS: false,\r\n      Cost: false,\r\n    });\r\n  }, [props.data]);\r\n\r\n  useEffect(() => {\r\n    if (donutData && donutContainer.current) {\r\n      d3.select(\"body\").selectAll(\".tooltip\").remove();\r\n      d3.select(donutContainer.current)?.selectAll(\"g\").remove();\r\n\r\n      const legend = (g: any) => {\r\n        const legendG = g\r\n          .attr(\"class\", \"legend\")\r\n          .attr(\"transform\", `translate(${width}, 0)`)\r\n          .attr(\"text-anchor\", \"end\")\r\n          .attr(\"font-family\", \"sans-serif\")\r\n          .attr(\"font-size\", 10)\r\n          .selectAll(\"g\")\r\n          .data(donutData)\r\n          .join(\"g\")\r\n          .attr(\"transform\", (d: any, i: any) => `translate(0, ${i * 14})`);\r\n\r\n        legendG\r\n          .append(\"rect\")\r\n          .attr(\"x\", -303)\r\n          .attr(\"y\", -30)\r\n          .attr(\"width\", 12)\r\n          .attr(\"height\", 12)\r\n          .attr(\"fill\", (d: any, i: any) => color(i));\r\n\r\n        legendG\r\n          .append(\"text\")\r\n          .attr(\"x\", -308)\r\n          .attr(\"y\", -25)\r\n          .attr(\"dy\", \"0.35em\")\r\n          .text((d: any, i: any) => d.name)\r\n          .attr(\"stroke\", \"#667597\")\r\n          .attr(\"font-weight\", 100);\r\n      };\r\n\r\n      const div = d3\r\n        .select(\"body\")\r\n        .append(\"div\")\r\n        .attr(\"class\", \"tooltip\")\r\n        .style(\"opacity\", 0)\r\n        .style(\"position\", \"absolute\")\r\n        .style(\"width\", \"48px\")\r\n        .style(\"height\", \"23px\")\r\n        .style(\"padding\", \"2px\")\r\n        .style(\"border-radius\", \"8px\")\r\n        .style(\"text-align\", \"center\")\r\n        .style(\"line-height\", \"19px\")\r\n        .style(\"font-size\", \"16px\")\r\n        .style(\"font-weight\", 700)\r\n        .style(\"background\", \"#ebebeb\");\r\n\r\n      const svg = d3\r\n        .select(donutContainer.current)\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .append(\"g\")\r\n        .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\r\n\r\n      const g = svg\r\n        .selectAll(\".arc\")\r\n        .data(pie(donutData))\r\n        .enter()\r\n        .append(\"g\")\r\n        .attr(\"class\", \"arc\")\r\n        .on(\"mouseover\", () => {\r\n          div.transition().duration(200).style(\"opacity\", 0.9);\r\n        })\r\n        .on(\"mouseout\", () => {\r\n          div.transition().duration(400).style(\"opacity\", 0);\r\n        })\r\n        .on(\"mousemove\", (d: any, i: any) => {\r\n          const elements = document.getElementsByClassName(\"arc\");\r\n          let index = -1;\r\n\r\n          for (let idx = 0; idx < elements.length; idx++) {\r\n            if (d.target.parentNode == elements[idx]) {\r\n              index = idx;\r\n              break;\r\n            }\r\n          }\r\n\r\n          if (index !== -1) {\r\n            div\r\n              .html(i.data.value)\r\n              .style(\"color\", color(i.data.name))\r\n              .style(\"left\", d.pageX + 12 + \"px\")\r\n              .style(\"top\", d.pageY - 28 + \"px\");\r\n          }\r\n        });\r\n\r\n      svg.append(\"g\").call(legend);\r\n\r\n      g.append(\"path\")\r\n        .style(\"fill\", function (d) {\r\n          return color(d.data.name);\r\n        })\r\n        .transition()\r\n        .delay(function (d, i) {\r\n          return i * 500;\r\n        })\r\n        .duration(500)\r\n        .attrTween(\"d\", function (d: any): any {\r\n          var i = d3.interpolate(d.startAngle + 0.1, d.endAngle);\r\n          return function (t: any) {\r\n            d.endAngle = i(t);\r\n            return arc(d);\r\n          };\r\n        });\r\n    }\r\n  }, [props.historyId, donutData, donutContainer.current]);\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className={classes.header}>\r\n        <div className={classes.title}>보안성점수</div>\r\n      </div>\r\n      <div className={classes.contentWrapper}>\r\n        <svg ref={donutContainer} width={width} height={height} />\r\n        <div className={classes.checkboxWrapper}>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.EC2}\r\n                  onChange={handleChange}\r\n                  name=\"EC2\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"EC2\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.IAM}\r\n                  onChange={handleChange}\r\n                  name=\"IAM\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"IAM\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.S3}\r\n                  onChange={handleChange}\r\n                  name=\"S3\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"S3\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.RDS}\r\n                  onChange={handleChange}\r\n                  name=\"RDS\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"RDS\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.VPC}\r\n                  onChange={handleChange}\r\n                  name=\"VPC\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"VPC\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.CloudFront}\r\n                  onChange={handleChange}\r\n                  name=\"CloudFront\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"CloudFront\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.CloudTrail}\r\n                  onChange={handleChange}\r\n                  name=\"CloudTrail\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"CloudTrail\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.CloudWatch}\r\n                  onChange={handleChange}\r\n                  name=\"CloudWatch\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"CloudWatch\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.Lambda}\r\n                  onChange={handleChange}\r\n                  name=\"Lambda\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Lambda\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.EBS}\r\n                  onChange={handleChange}\r\n                  name=\"EBS\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"EBS\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.KMS}\r\n                  onChange={handleChange}\r\n                  name=\"KMS\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"KMS\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={tempList.Cost}\r\n                  onChange={handleChange}\r\n                  name=\"Cost\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Cost\"\r\n            />\r\n          </FormGroup>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\dashboard\\groupbar.tsx",["595","596","597","598","599"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { groupedBarStyles } from \"./styles\";\r\nimport * as d3 from \"d3\";\r\n\r\ninterface IGroupProps {\r\n  setAssessment: React.Dispatch<React.SetStateAction<string>>;\r\n  data: IHistory[];\r\n  assessment: string;\r\n}\r\n\r\ninterface IHistory {\r\n  id: string;\r\n  service: string;\r\n  platform: string;\r\n  lastDate: string;\r\n  vuln: {\r\n    high_total: string;\r\n    high_count: string;\r\n    middle_total: string;\r\n    middle_count: string;\r\n    low_total: string;\r\n    low_count: string;\r\n  };\r\n}\r\n\r\ninterface IGroup {\r\n  id: string;\r\n  state: string;\r\n  high: number;\r\n  middle: number;\r\n  low: number;\r\n}\r\n\r\ntype IGroupKey = \"high\" | \"middle\" | \"low\";\r\n\r\nconst keys = [\"high\", \"middle\", \"low\"];\r\n\r\nconst margin = { top: 30, right: 30, bottom: 10, left: 20 };\r\nconst height = 420 - margin.top - margin.bottom,\r\n  width = 910;\r\n\r\nconst groupKey = \"state\";\r\n\r\nconst color = d3.scaleOrdinal([\"#c24a4e\", \"#ba8e27\", \"#BCBD22\"]);\r\n\r\nconst legend = (g: any) => {\r\n  const legendG = g\r\n    .attr(\"class\", \"legend\")\r\n    .attr(\"transform\", `translate(${width}, 0)`)\r\n    .attr(\"text-anchor\", \"end\")\r\n    .attr(\"font-family\", \"sans-serif\")\r\n    .attr(\"font-size\", 10)\r\n    .selectAll(\"g\")\r\n    .data(color.domain())\r\n    .join(\"g\")\r\n    .attr(\"transform\", (d: any, i: any) => `translate(0, ${i * 20})`);\r\n\r\n  legendG\r\n    .append(\"rect\")\r\n    .attr(\"x\", -18)\r\n    .attr(\"width\", 18)\r\n    .attr(\"height\", 18)\r\n    .attr(\"fill\", (d: any) => color(d));\r\n\r\n  legendG\r\n    .append(\"text\")\r\n    .attr(\"x\", -28)\r\n    .attr(\"y\", 9.5)\r\n    .attr(\"dy\", \"0.35em\")\r\n    .text((d: any) => d)\r\n    .attr(\"stroke\", \"#667597\")\r\n    .attr(\"font-weight\", 100);\r\n};\r\n\r\nexport default function GroupedBar(props: IGroupProps): JSX.Element {\r\n  const classes = groupedBarStyles();\r\n  const groupedBarContainer = useRef(null);\r\n  const [filteredData, setFilteredData] =\r\n    useState<IHistory[] | undefined>(undefined);\r\n  const [graphData, setGraph] = useState<IGroup[]>([]);\r\n\r\n  useEffect(() => {\r\n    let temp: IHistory[] = [];\r\n    props.data?.map((o) => {\r\n      let check = true;\r\n      for (let value of temp) {\r\n        if (value.id === o.id) {\r\n          check = false;\r\n          break;\r\n        }\r\n      }\r\n      if (check) {\r\n        temp.push(o);\r\n      }\r\n    });\r\n    if (props.assessment == \"\" && temp.length > 0)\r\n      props.setAssessment(temp[0].id);\r\n\r\n    setFilteredData(temp);\r\n  }, [props.data]);\r\n\r\n  useEffect(() => {\r\n    let temp: IGroup[] = [];\r\n\r\n    filteredData?.map((o) => {\r\n      temp.push({\r\n        id: o.id,\r\n        state: o.service,\r\n        high: Number(o.vuln.high_count),\r\n        middle: Number(o.vuln.middle_count),\r\n        low: Number(o.vuln.low_count),\r\n      });\r\n    });\r\n\r\n    if (filteredData) {\r\n      for (let i = 0; i < 7 - filteredData.length; i++) {\r\n        let name = \"\";\r\n        for (let j = 0; j < i; j++) name += \"ㅤ\";\r\n\r\n        temp.push({\r\n          id: \"\",\r\n          state: name,\r\n          high: 0,\r\n          middle: 0,\r\n          low: 0,\r\n        });\r\n      }\r\n    }\r\n\r\n    setGraph(temp);\r\n  }, [filteredData]);\r\n\r\n  useEffect(() => {\r\n    if (graphData && groupedBarContainer.current) {\r\n      d3.select(groupedBarContainer.current)?.selectAll(\"g\").remove();\r\n\r\n      const x0 = d3\r\n        .scaleBand()\r\n        .domain(graphData.map((d) => d[groupKey]))\r\n        .rangeRound([margin.left, width - margin.right])\r\n        .paddingInner(0.1);\r\n\r\n      const x1 = d3\r\n        .scaleBand()\r\n        .domain(keys)\r\n        .rangeRound([0, x0.bandwidth()])\r\n        .padding(0.05);\r\n\r\n      const y = d3\r\n        .scaleLinear()\r\n        .domain([0, 200])\r\n        .nice()\r\n        .rangeRound([height - margin.bottom, margin.top]);\r\n\r\n      const xAxis = (g: any) =>\r\n        g\r\n          .attr(\"transform\", `translate(0,${height - margin.bottom})`)\r\n          .call(d3.axisBottom(x0).tickSizeOuter(0))\r\n          .call((g: any) => g.select(\".domain\").remove())\r\n          .attr(\"stroke\", \"#667597\")\r\n          .attr(\"font-weight\", 100);\r\n\r\n      const yAxis = (g: any) =>\r\n        g\r\n          .attr(\"transform\", `translate(${margin.left},0)`)\r\n          .call(d3.axisLeft(y).ticks(null, \"s\"))\r\n          .call((g: any) => g.select(\".domain\").remove())\r\n          .call((g: any) =>\r\n            g\r\n              .select(\".tick:last-of-type text\")\r\n              .clone()\r\n              .attr(\"x\", 3)\r\n              .attr(\"text-anchor\", \"start\")\r\n              .attr(\"font-weight\", \"bold\")\r\n          )\r\n          .attr(\"stroke\", \"#667597\")\r\n          .attr(\"font-weight\", 100);\r\n\r\n      const svg = d3.select(groupedBarContainer.current);\r\n\r\n      svg\r\n        .append(\"g\")\r\n        .selectAll(\"g\")\r\n        .data(graphData)\r\n        .join(\"g\")\r\n        .on(\"click\", (d, i: any) => {\r\n          props.setAssessment(i.id);\r\n        })\r\n        .attr(\"transform\", (d) => `translate(${x0(d[groupKey])}, 0)`)\r\n        .selectAll(\"rect\")\r\n        .data((d) => keys.map((key) => ({ key, value: d[key as IGroupKey] })))\r\n        .join(\"rect\")\r\n        .attr(\"x\", (d: any): any => x1(d.key))\r\n        .attr(\"y\", y(0) as number)\r\n        .attr(\"width\", x1.bandwidth())\r\n        .attr(\"height\", 0)\r\n        .attr(\"fill\", (d): any => color(d.key));\r\n\r\n      svg\r\n        .selectAll(\"rect\")\r\n        .transition()\r\n        .ease(d3.easeCubicInOut)\r\n        .duration(300)\r\n        .attr(\"y\", (d: any): any => y(d.value))\r\n        .attr(\"height\", (d: any) => (y(0) as number) - (y(d.value) as number))\r\n        .delay((d, i) => Math.floor(i / keys.length) * 100);\r\n\r\n      svg.append(\"g\").call(xAxis);\r\n      svg.append(\"g\").call(yAxis);\r\n      svg.append(\"g\").call(legend);\r\n\r\n      svg.selectAll(\"line\").attr(\"stroke\", \"#3B4766\").attr(\"font-weight\", 100);\r\n    }\r\n  }, [graphData, groupedBarContainer.current]);\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className={classes.header}>\r\n        <div className={classes.title}>계정별 시스템 현황</div>\r\n      </div>\r\n      <div className={classes.contentWrapper}>\r\n        <svg ref={groupedBarContainer} width={width} height={height + 10} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\dashboard\\radar.tsx",["600","601","602","603","604","605","606","607","608","609","610"],"import * as d3 from \"d3\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { radarStyles } from \"./styles\";\r\n\r\ninterface IRadarProps {\r\n  data: IRadar[][];\r\n  service: string;\r\n  historyId: string;\r\n}\r\n\r\ninterface IRadar {\r\n  area: string;\r\n  value: number;\r\n}\r\n\r\nconst initialData: IRadar[][] = [\r\n  [\r\n    { area: \"category1\", value: 50 },\r\n    { area: \"category2\", value: 50 },\r\n    { area: \"category3\", value: 50 },\r\n    { area: \"category4\", value: 50 },\r\n    { area: \"category5\", value: 50 },\r\n    { area: \"category6\", value: 50 },\r\n  ],\r\n];\r\n\r\nexport default function Radar(props: IRadarProps): JSX.Element {\r\n  const classes = radarStyles();\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <div className={classes.contentWrapper}>\r\n        <RadarGraph {...props} />\r\n        <div className={classes.service}>{props.service}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst RadarGraph = (props: IRadarProps): JSX.Element => {\r\n  const radarContainer = useRef(null);\r\n\r\n  let cfg = {\r\n    radius: 2,\r\n    w: 200,\r\n    h: 200,\r\n    factor: 1,\r\n    factorLegend: 0.85,\r\n    levels: 3,\r\n    maxValue: 100,\r\n    radians: 2 * Math.PI,\r\n    opacityArea: 0.5,\r\n    ToRight: 5,\r\n    TranslateX: 80,\r\n    TranslateY: 25,\r\n    ExtraWidthX: 300,\r\n    ExtraWidthY: 100,\r\n    color: d3.scaleOrdinal([\"#1F77B4\", \"#c24a4e\", \"#ba8e27\", \"#BCBD22\"]),\r\n  };\r\n\r\n  useEffect(() => {\r\n    let radarData: IRadar[][] =\r\n      props.data[0][0].value === -1 ? initialData : props.data;\r\n\r\n    if (props.data[0][0].value !== -1) {\r\n      let maxValue = -1;\r\n      props.data[0].map((o) => {\r\n        if (o.value > maxValue) maxValue = o.value;\r\n      });\r\n\r\n      props.data[1].map((o) => {\r\n        if (o.value > maxValue) maxValue = o.value;\r\n      });\r\n\r\n      props.data[2].map((o) => {\r\n        if (o.value > maxValue) maxValue = o.value;\r\n      });\r\n\r\n      props.data[3].map((o) => {\r\n        if (o.value > maxValue) maxValue = o.value;\r\n      });\r\n\r\n      cfg.maxValue = maxValue + 10;\r\n    }\r\n\r\n    if (radarContainer.current) {\r\n      try {\r\n        const allAxis = radarData[0].map(function (i, j) {\r\n          return i.area.toLocaleUpperCase();\r\n        });\r\n\r\n        const total = allAxis.length;\r\n\r\n        const radius = cfg.factor * Math.min(cfg.w / 2, cfg.h / 2);\r\n\r\n        d3.select(radarContainer.current)?.selectAll(\"svg\")?.remove();\r\n\r\n        const g = d3\r\n          .select(radarContainer.current)\r\n          .append(\"svg\")\r\n          .attr(\"width\", cfg.w + cfg.ExtraWidthX)\r\n          .attr(\"height\", 300)\r\n          .append(\"g\")\r\n          .attr(\r\n            \"transform\",\r\n            \"translate(\" + cfg.TranslateX + \",\" + cfg.TranslateY + \")\"\r\n          );\r\n\r\n        for (let j = 0; j < cfg.levels; j++) {\r\n          const levelFactor = cfg.factor * radius * ((j + 1) / cfg.levels);\r\n\r\n          g.selectAll(\".levels\")\r\n            .data(allAxis)\r\n            .enter()\r\n            .append(\"svg:line\")\r\n            .attr(\"x1\", function (d, i) {\r\n              return (\r\n                levelFactor *\r\n                (1 - cfg.factor * Math.sin((i * cfg.radians) / total))\r\n              );\r\n            })\r\n            .attr(\"y1\", function (d, i) {\r\n              return (\r\n                levelFactor *\r\n                (1 - cfg.factor * Math.cos((i * cfg.radians) / total))\r\n              );\r\n            })\r\n            .attr(\"x2\", function (d, i) {\r\n              return (\r\n                levelFactor *\r\n                (1 - cfg.factor * Math.sin(((i + 1) * cfg.radians) / total))\r\n              );\r\n            })\r\n            .attr(\"y2\", function (d, i) {\r\n              return (\r\n                levelFactor *\r\n                (1 - cfg.factor * Math.cos(((i + 1) * cfg.radians) / total))\r\n              );\r\n            })\r\n            .attr(\"class\", \"line\")\r\n            .style(\"stroke\", \"#8796b0\")\r\n            .style(\"stroke-width\", \"1px\")\r\n            .attr(\r\n              \"transform\",\r\n              `translate(${cfg.w / 2 - levelFactor}, ${\r\n                cfg.h / 2 - levelFactor\r\n              })`\r\n            );\r\n        }\r\n\r\n        for (let j = 0; j < cfg.levels; j++) {\r\n          const levelFactor = cfg.factor * radius * ((j + 1) / cfg.levels);\r\n          g.selectAll(\".levels\")\r\n            .data([1])\r\n            .enter()\r\n            .append(\"svg:text\")\r\n            .attr(\"x\", function (d) {\r\n              return levelFactor * (1 - cfg.factor * Math.sin(0));\r\n            })\r\n            .attr(\"y\", function (d) {\r\n              return levelFactor * (1 - cfg.factor * Math.cos(0));\r\n            })\r\n            .attr(\"class\", \"legend\")\r\n            .style(\"font-family\", \"sans-serif\")\r\n            .style(\"font-size\", \"10px\")\r\n            .attr(\r\n              \"transform\",\r\n              \"translate(\" +\r\n                (cfg.w / 2 - levelFactor + cfg.ToRight) +\r\n                \", \" +\r\n                (cfg.h / 2 - levelFactor) +\r\n                \")\"\r\n            );\r\n        }\r\n\r\n        let series = 0;\r\n\r\n        const axis = g\r\n          .selectAll(\".axis\")\r\n          .data(allAxis)\r\n          .enter()\r\n          .append(\"g\")\r\n          .attr(\"class\", \"axis\");\r\n\r\n        axis\r\n          .append(\"line\")\r\n          .attr(\"x1\", cfg.w / 2)\r\n          .attr(\"y1\", cfg.h / 2)\r\n          .attr(\"x2\", function (d, i) {\r\n            return (\r\n              (cfg.w / 2) *\r\n              (1 - cfg.factor * Math.sin((i * cfg.radians) / total))\r\n            );\r\n          })\r\n          .attr(\"y2\", function (d, i) {\r\n            return (\r\n              (cfg.h / 2) *\r\n              (1 - cfg.factor * Math.cos((i * cfg.radians) / total))\r\n            );\r\n          })\r\n          .attr(\"class\", \"line\")\r\n          .style(\"stroke\", \"#8796b0\")\r\n          .style(\"stroke-width\", \"1px\");\r\n\r\n        axis\r\n          .append(\"text\")\r\n          .attr(\"class\", \"legend\")\r\n          .text(function (d) {\r\n            return d;\r\n          })\r\n          .style(\"font-family\", \"sans-serif\")\r\n          .style(\"font-size\", \"12px\")\r\n          .style(\"fill\", \"#8796b0\")\r\n          .attr(\"font-weight\", 100)\r\n          .attr(\"text-anchor\", \"middle\")\r\n          .attr(\"dy\", \"1.5em\")\r\n          .attr(\"transform\", function (d, i) {\r\n            return \"translate(0, -10)\";\r\n          })\r\n          .attr(\"x\", function (d, i) {\r\n            return (\r\n              (cfg.w / 2) *\r\n                (1 - cfg.factorLegend * Math.sin((i * cfg.radians) / total)) -\r\n              60 * Math.sin((i * cfg.radians) / total)\r\n            );\r\n          })\r\n          .attr(\"y\", function (d, i) {\r\n            return (\r\n              (cfg.h / 2) * (1 - Math.cos((i * cfg.radians) / total)) -\r\n              20 * Math.cos((i * cfg.radians) / total)\r\n            );\r\n          });\r\n\r\n        let dataValues: any[] = [];\r\n\r\n        radarData.forEach(function (y, x) {\r\n          dataValues = [];\r\n          g.selectAll(\".nodes\").data(y, function (j: any, i): any {\r\n            dataValues.push([\r\n              (cfg.w / 2) *\r\n                (1 -\r\n                  (parseFloat(Math.max(j.value, 0).toString()) / cfg.maxValue) *\r\n                    cfg.factor *\r\n                    Math.sin((i * cfg.radians) / total)),\r\n              (cfg.h / 2) *\r\n                (1 -\r\n                  (parseFloat(Math.max(j.value, 0).toString()) / cfg.maxValue) *\r\n                    cfg.factor *\r\n                    Math.cos((i * cfg.radians) / total)),\r\n            ]);\r\n          });\r\n\r\n          dataValues.push(dataValues[0]);\r\n          g.selectAll(\".area\")\r\n            .data([dataValues])\r\n            .enter()\r\n            .append(\"polygon\")\r\n            .attr(\"class\", \"poly\" + \" radar-chart-serie\" + series)\r\n            .style(\"stroke-width\", \"2px\")\r\n            .style(\"stroke\", cfg.color(series.toString()))\r\n            .attr(\"points\", function (d) {\r\n              return d3\r\n                .range(d.length)\r\n                .map(function () {\r\n                  return cfg.w / 2 + \",\" + cfg.h / 2;\r\n                })\r\n                .join(\" \");\r\n            })\r\n            .style(\"fill\", function (j, i) {\r\n              return \"none\";\r\n            })\r\n            .style(\"fill-opacity\", cfg.opacityArea)\r\n            .on(\"mouseover\", function (d) {\r\n              const z = \"polygon.\" + d3.select(this).attr(\"class\");\r\n              g.selectAll(\"polygon\")\r\n                .transition(\"200\")\r\n                .style(\"fill-opacity\", 0.1);\r\n              g.selectAll(z).transition(\"200\").style(\"fill-opacity\", 0.7);\r\n            })\r\n            .on(\"mouseout\", function () {\r\n              g.selectAll(\"polygon\")\r\n                .transition(\"200\")\r\n                .style(\"fill-opacity\", cfg.opacityArea);\r\n            });\r\n          series++;\r\n        });\r\n\r\n        series = 0;\r\n\r\n        radarData.forEach(function (y, x) {\r\n          g.selectAll(\".nodes\")\r\n            .data(y)\r\n            .enter()\r\n            .append(\"svg:circle\")\r\n            .attr(\"class\", \"point\" + \" radar-chart-serie\" + series)\r\n            .attr(\"r\", cfg.radius)\r\n            .attr(\"alt\", function (j) {\r\n              return Math.max(j.value, 0);\r\n            })\r\n            .attr(\"cx\", cfg.w / 2)\r\n            .attr(\"cy\", cfg.h / 2)\r\n            .attr(\"data-id\", function (j) {\r\n              return j.area;\r\n            })\r\n            .style(\"fill\", cfg.color(series.toString()))\r\n            .style(\"stroke-width\", \"2px\")\r\n            .style(\"stroke\", cfg.color(series.toString()));\r\n\r\n          series++;\r\n        });\r\n\r\n        const legendRectSize = 8;\r\n        const legendSpacing = 4;\r\n\r\n        const bLegend = g\r\n          .selectAll(\"bLegend\")\r\n          .data(cfg.color.domain())\r\n          .enter()\r\n          .append(\"g\")\r\n          .attr(\"class\", \"bLegend\")\r\n          .attr(\"transform\", function (d, i) {\r\n            const height = 320;\r\n            let horz = 75;\r\n            return \"translate(\" + horz + \",\" + height + \")\";\r\n          });\r\n\r\n        dataValues = [];\r\n\r\n        g.selectAll(\".point\")\r\n          .transition()\r\n          .duration(800)\r\n          .attr(\"cx\", function (j: any, i) {\r\n            dataValues.push([\r\n              (cfg.w / 2) *\r\n                (1 -\r\n                  (parseFloat(Math.max(j.value, 0).toString()) / cfg.maxValue) *\r\n                    cfg.factor *\r\n                    Math.sin((i * cfg.radians) / total)),\r\n              (cfg.h / 2) *\r\n                (1 -\r\n                  (parseFloat(Math.max(j.value, 0).toString()) / cfg.maxValue) *\r\n                    cfg.factor *\r\n                    Math.cos((i * cfg.radians) / total)),\r\n            ]);\r\n            return (\r\n              (cfg.w / 2) *\r\n              (1 -\r\n                (Math.max(j.value, 0) / cfg.maxValue) *\r\n                  cfg.factor *\r\n                  Math.sin((i * cfg.radians) / total))\r\n            );\r\n          })\r\n          .attr(\"cy\", function (j: any, i) {\r\n            return (\r\n              (cfg.h / 2) *\r\n              (1 -\r\n                (Math.max(j.value, 0) / cfg.maxValue) *\r\n                  cfg.factor *\r\n                  Math.cos((i * cfg.radians) / total))\r\n            );\r\n          });\r\n\r\n        g.selectAll(\".poly\")\r\n          .transition()\r\n          .duration(800)\r\n          .attr(\"points\", function (d: any) {\r\n            let str = \"\";\r\n            for (let pti = 0; pti < d.length; pti++) {\r\n              str = str + d[pti][0] + \",\" + d[pti][1] + \" \";\r\n            }\r\n            return str;\r\n          });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }, [props.data, radarContainer.current]);\r\n\r\n  return <svg ref={radarContainer} width={cfg.w + 160} height={260} />;\r\n};\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\src\\components\\service\\dashboard\\vuln.tsx",["611","612","613","614"],"import React, { useEffect, useState } from \"react\";\r\nimport { vlunStyles } from \"../vulnerability/styles\";\r\nimport MaterialTable from \"material-table\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AWSChecklist } from \"../../../constant/checklist\";\r\nimport Swal from \"sweetalert2\";\r\nimport Modal from \"../vulnerability/modal\";\r\n\r\ninterface IVulnProps {\r\n  vulnList: IVulnList[];\r\n}\r\n\r\ninterface IVulnList {\r\n  id: string;\r\n  service: string;\r\n  chkIndex: string;\r\n  name: string;\r\n  risk: string;\r\n  status: string;\r\n  summary: any;\r\n  raw_data: any;\r\n}\r\n\r\ninterface IFilter {\r\n  IAM: boolean;\r\n  EC2: boolean;\r\n  CloudFront: boolean;\r\n  CloudTrail: boolean;\r\n  CloudWatch: boolean;\r\n  S3: boolean;\r\n  RDS: boolean;\r\n  Lambda: boolean;\r\n  EBS: boolean;\r\n  KMS: boolean;\r\n  Cost: boolean;\r\n  VPC: boolean;\r\n}\r\n\r\ntype IFilterType =\r\n  | \"IAM\"\r\n  | \"EC2\"\r\n  | \"CloudFront\"\r\n  | \"CloudTrail\"\r\n  | \"CloudWatch\"\r\n  | \"S3\"\r\n  | \"RDS\"\r\n  | \"Lambda\"\r\n  | \"EBS\"\r\n  | \"KMS\"\r\n  | \"Cost\"\r\n  | \"VPC\";\r\n\r\nexport default function Vlun(props: IVulnProps) {\r\n  const classes = vlunStyles();\r\n  const history = useHistory();\r\n\r\n  const [vulnList, setVuln] = useState<IVulnList[] | undefined>(undefined);\r\n  const [modal, setModal] = useState<boolean>(true);\r\n  const [rawData, setRawData] = useState<any>();\r\n  const [isFilter, setFilter] = useState<boolean>(false);\r\n  const [filteredList, setFilteredList] =\r\n    useState<IVulnList[] | undefined>(undefined);\r\n  const [filterList, setFilterList] = useState<IFilter>({\r\n    IAM: false,\r\n    EC2: false,\r\n    S3: false,\r\n    RDS: false,\r\n    VPC: false,\r\n    CloudFront: false,\r\n    CloudTrail: false,\r\n    CloudWatch: false,\r\n    Lambda: false,\r\n    EBS: false,\r\n    KMS: false,\r\n    Cost: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (document.cookie === \"path=/\" || document.cookie === \"\") {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"로그인 에러\",\r\n        text: \"로그인후에 이용해주세요.\",\r\n        heightAuto: false,\r\n      }).then(() => {\r\n        window.location.href = \"/login\";\r\n        return;\r\n      });\r\n    }\r\n\r\n    if (props.vulnList && props.vulnList.length > 0) {\r\n      setVuln(props.vulnList);\r\n      setFilteredList(props.vulnList);\r\n    }\r\n  }, [props.vulnList]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !filterList.CloudFront &&\r\n      !filterList.CloudTrail &&\r\n      !filterList.CloudWatch &&\r\n      !filterList.Cost &&\r\n      !filterList.EBS &&\r\n      !filterList.EC2 &&\r\n      !filterList.IAM &&\r\n      !filterList.KMS &&\r\n      !filterList.Lambda &&\r\n      !filterList.RDS &&\r\n      !filterList.S3 &&\r\n      !filterList.VPC\r\n    ) {\r\n      setFilteredList(vulnList);\r\n    } else {\r\n      let temp: IVulnList[] = [];\r\n      vulnList?.map((o) => {\r\n        if (filterList[o.service as IFilterType]) {\r\n          temp.push(o);\r\n        }\r\n      });\r\n      setFilteredList(temp);\r\n    }\r\n  }, [filterList]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.content}>\r\n        <div className={classes.tableWrapper}>\r\n          <MaterialTable\r\n            title={\r\n              <div className={classes.title}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    setFilter(true);\r\n                    setModal(false);\r\n                  }}\r\n                >\r\n                  필터\r\n                </Button>\r\n                <div className={classes.filterWrapper}>\r\n                  {filterList.IAM && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, IAM: false });\r\n                      }}\r\n                    >\r\n                      IAM\r\n                    </div>\r\n                  )}\r\n                  {filterList.EC2 && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, EC2: false });\r\n                      }}\r\n                    >\r\n                      EC2\r\n                    </div>\r\n                  )}\r\n                  {filterList.S3 && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, S3: false });\r\n                      }}\r\n                    >\r\n                      S3\r\n                    </div>\r\n                  )}\r\n                  {filterList.RDS && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, RDS: false });\r\n                      }}\r\n                    >\r\n                      RDS\r\n                    </div>\r\n                  )}\r\n                  {filterList.VPC && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, VPC: false });\r\n                      }}\r\n                    >\r\n                      VPC\r\n                    </div>\r\n                  )}\r\n                  {filterList.CloudFront && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, CloudFront: false });\r\n                      }}\r\n                    >\r\n                      CloudFront\r\n                    </div>\r\n                  )}\r\n                  {filterList.CloudTrail && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, CloudTrail: false });\r\n                      }}\r\n                    >\r\n                      CloudTrail\r\n                    </div>\r\n                  )}\r\n                  {filterList.CloudWatch && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, CloudWatch: false });\r\n                      }}\r\n                    >\r\n                      CloudWatch\r\n                    </div>\r\n                  )}\r\n                  {filterList.Lambda && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, Lambda: false });\r\n                      }}\r\n                    >\r\n                      Lambda\r\n                    </div>\r\n                  )}\r\n                  {filterList.EBS && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, EBS: false });\r\n                      }}\r\n                    >\r\n                      EBS\r\n                    </div>\r\n                  )}\r\n                  {filterList.KMS && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, KMS: false });\r\n                      }}\r\n                    >\r\n                      KMS\r\n                    </div>\r\n                  )}\r\n                  {filterList.Cost && (\r\n                    <div\r\n                      className={classes.filter}\r\n                      onClick={() => {\r\n                        setFilterList({ ...filterList, Cost: false });\r\n                      }}\r\n                    >\r\n                      Cost\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            }\r\n            columns={[\r\n              {\r\n                title: \"번호\",\r\n                field: \"id\",\r\n                cellStyle: { width: \"6%\" },\r\n              },\r\n              {\r\n                title: \"리스트번호\",\r\n                field: \"chkIndex\",\r\n                cellStyle: { width: \"8.8%\" },\r\n                render: (rowData) => {\r\n                  let chk = \"\";\r\n\r\n                  for (\r\n                    let i = 0;\r\n                    i < 3 - String(rowData.chkIndex).length;\r\n                    i++\r\n                  ) {\r\n                    chk += \"0\";\r\n                  }\r\n                  return (\r\n                    <React.Fragment>{`${rowData.service}_${chk}${rowData.chkIndex}`}</React.Fragment>\r\n                  );\r\n                },\r\n              },\r\n              { title: \"항목명\", field: \"name\" },\r\n              { title: \"위험도\", field: \"risk\", cellStyle: { width: \"7%\" } },\r\n              { title: \"상태\", field: \"status\", cellStyle: { width: \"6%\" } },\r\n              {\r\n                title: \"요약\",\r\n                field: \"summary\",\r\n                render: (rowData) => {\r\n                  return <div>{rowData.summary}</div>;\r\n                },\r\n              },\r\n              {\r\n                title: \"상세보기\",\r\n                field: \"\",\r\n                cellStyle: { width: \"8%\" },\r\n                render: (rowData) => {\r\n                  return (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        setRawData(rowData.raw_data);\r\n                        setFilter(false);\r\n                        setModal(false);\r\n                      }}\r\n                    >\r\n                      상세보기\r\n                    </Button>\r\n                  );\r\n                },\r\n              },\r\n            ]}\r\n            data={filteredList as IVulnList[]}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`${classes.overlay} ${modal && classes.visibility}`}\r\n        onClick={() => {\r\n          setModal(true);\r\n        }}\r\n      ></div>\r\n      <Modal\r\n        modal={modal}\r\n        setModal={setModal}\r\n        rawData={rawData}\r\n        isFilter={isFilter}\r\n        setFilterList={setFilterList}\r\n        filterList={filterList}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\index.tsx",[],["615","616"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\reportWebVitals.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\App.tsx",["617","618","619","620","621","622","623"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\store\\index.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\scan\\detail.tsx",["624","625","626","627","628","629","630","631","632","633","634","635","636","637","638"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\asset\\detail.tsx",["639","640","641","642","643"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\store\\toggleMenu.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\asset\\index.tsx",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\scan\\index.tsx",["644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\login\\index.tsx",["675","676"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\signup\\index.tsx",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\landing\\index.tsx",["677","678"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\setting\\index.tsx",["679","680"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\dashboard\\index.tsx",["681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\checklist\\index.tsx",["707","708","709"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\vulnerability\\index.tsx",["710","711","712","713","714","715","716","717","718","719","720","721","722","723","724"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\inspection\\index.tsx",["725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\entire\\index.tsx",["751","752","753","754","755","756","757","758","759"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\layout\\sidebar\\index.tsx",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\layout\\topbar\\index.tsx",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\scan\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\asset\\styles.ts",["760"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\constant\\requestInit.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\constant\\checklist.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\scan\\detailModal.tsx",["761","762"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\login\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\landing\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\setting\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\dashboard\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\entire\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\layout\\topbar\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\layout\\sidebar\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\inspection\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\checklist\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\vulnerability\\styles.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\hooks\\useToggle.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\hooks\\useChangeToggle.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\asset\\card.tsx",["763"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\asset\\modal.tsx",["764","765","766"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\scan\\modal.tsx",["767"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\dashboard\\donut.tsx",["768","769","770","771","772","773","774","775"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\dashboard\\rank.tsx",["776","777"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\dashboard\\radar.tsx",["778","779","780","781","782","783","784","785","786","787","788"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\dashboard\\table.tsx",["789","790"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\dashboard\\vuln.tsx",["791","792","793"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\dashboard\\groupbar.tsx",["794","795","796","797","798"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\layout\\sidebar\\row.tsx",["799","800","801","802"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\vulnerability\\modal.tsx",["803"],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\constant\\region.ts",[],"C:\\Users\\김진구\\Desktop\\새홀리기\\cspm_web\\test\\src\\components\\service\\dashboard\\modal.tsx",["804"],{"ruleId":"805","replacedBy":"806"},{"ruleId":"807","replacedBy":"808"},{"ruleId":"809","severity":1,"message":"810","line":1,"column":17,"nodeType":"811","messageId":"812","endLine":1,"endColumn":26},{"ruleId":"809","severity":1,"message":"813","line":5,"column":3,"nodeType":"811","messageId":"812","endLine":5,"endColumn":13},{"ruleId":"809","severity":1,"message":"814","line":6,"column":3,"nodeType":"811","messageId":"812","endLine":6,"endColumn":14},{"ruleId":"809","severity":1,"message":"815","line":8,"column":8,"nodeType":"811","messageId":"812","endLine":8,"endColumn":12},{"ruleId":"816","severity":1,"message":"817","line":33,"column":46,"nodeType":"818","messageId":"819","endLine":33,"endColumn":48},{"ruleId":"816","severity":1,"message":"817","line":34,"column":46,"nodeType":"818","messageId":"819","endLine":34,"endColumn":48},{"ruleId":"816","severity":1,"message":"820","line":47,"column":53,"nodeType":"818","messageId":"819","endLine":47,"endColumn":55},{"ruleId":"816","severity":1,"message":"820","line":104,"column":49,"nodeType":"818","messageId":"819","endLine":104,"endColumn":51},{"ruleId":"816","severity":1,"message":"817","line":127,"column":39,"nodeType":"818","messageId":"819","endLine":127,"endColumn":41},{"ruleId":"816","severity":1,"message":"817","line":146,"column":32,"nodeType":"818","messageId":"819","endLine":146,"endColumn":34},{"ruleId":"821","severity":1,"message":"822","line":168,"column":6,"nodeType":"823","endLine":168,"endColumn":8,"suggestions":"824"},{"ruleId":"821","severity":1,"message":"825","line":172,"column":6,"nodeType":"823","endLine":172,"endColumn":19,"suggestions":"826"},{"ruleId":"809","severity":1,"message":"827","line":24,"column":11,"nodeType":"811","messageId":"812","endLine":24,"endColumn":23},{"ruleId":"828","severity":1,"message":"829","line":73,"column":35,"nodeType":"830","messageId":"831","endLine":73,"endColumn":37},{"ruleId":"816","severity":1,"message":"817","line":84,"column":37,"nodeType":"818","messageId":"819","endLine":84,"endColumn":39},{"ruleId":"828","severity":1,"message":"829","line":95,"column":52,"nodeType":"830","messageId":"831","endLine":95,"endColumn":54},{"ruleId":"816","severity":1,"message":"817","line":96,"column":27,"nodeType":"818","messageId":"819","endLine":96,"endColumn":29},{"ruleId":"816","severity":1,"message":"817","line":97,"column":27,"nodeType":"818","messageId":"819","endLine":97,"endColumn":29},{"ruleId":"816","severity":1,"message":"817","line":102,"column":29,"nodeType":"818","messageId":"819","endLine":102,"endColumn":31},{"ruleId":"816","severity":1,"message":"817","line":105,"column":31,"nodeType":"818","messageId":"819","endLine":105,"endColumn":33},{"ruleId":"816","severity":1,"message":"817","line":112,"column":29,"nodeType":"818","messageId":"819","endLine":112,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":122,"column":67,"nodeType":"830","messageId":"831","endLine":122,"endColumn":69},{"ruleId":"816","severity":1,"message":"817","line":123,"column":33,"nodeType":"818","messageId":"819","endLine":123,"endColumn":35},{"ruleId":"821","severity":1,"message":"832","line":174,"column":6,"nodeType":"823","endLine":174,"endColumn":8,"suggestions":"833"},{"ruleId":"828","severity":1,"message":"829","line":180,"column":25,"nodeType":"830","messageId":"831","endLine":180,"endColumn":27},{"ruleId":"816","severity":1,"message":"817","line":181,"column":18,"nodeType":"818","messageId":"819","endLine":181,"endColumn":20},{"ruleId":"821","severity":1,"message":"834","line":190,"column":6,"nodeType":"823","endLine":190,"endColumn":12,"suggestions":"835"},{"ruleId":"809","severity":1,"message":"836","line":8,"column":9,"nodeType":"811","messageId":"812","endLine":8,"endColumn":16},{"ruleId":"837","severity":1,"message":"838","line":43,"column":15,"nodeType":"839","endLine":43,"endColumn":57},{"ruleId":"837","severity":1,"message":"838","line":41,"column":15,"nodeType":"839","endLine":41,"endColumn":55},{"ruleId":"837","severity":1,"message":"838","line":45,"column":15,"nodeType":"839","endLine":45,"endColumn":53},{"ruleId":"809","severity":1,"message":"840","line":3,"column":8,"nodeType":"811","messageId":"812","endLine":3,"endColumn":21},{"ruleId":"809","severity":1,"message":"836","line":29,"column":9,"nodeType":"811","messageId":"812","endLine":29,"endColumn":16},{"ruleId":"809","severity":1,"message":"841","line":134,"column":9,"nodeType":"811","messageId":"812","endLine":134,"endColumn":17},{"ruleId":"828","severity":1,"message":"829","line":157,"column":52,"nodeType":"830","messageId":"831","endLine":157,"endColumn":54},{"ruleId":"828","severity":1,"message":"829","line":178,"column":41,"nodeType":"830","messageId":"831","endLine":178,"endColumn":43},{"ruleId":"816","severity":1,"message":"817","line":214,"column":37,"nodeType":"818","messageId":"819","endLine":214,"endColumn":39},{"ruleId":"828","severity":1,"message":"829","line":248,"column":49,"nodeType":"830","messageId":"831","endLine":248,"endColumn":51},{"ruleId":"816","severity":1,"message":"817","line":249,"column":23,"nodeType":"818","messageId":"819","endLine":249,"endColumn":25},{"ruleId":"816","severity":1,"message":"817","line":260,"column":34,"nodeType":"818","messageId":"819","endLine":260,"endColumn":36},{"ruleId":"816","severity":1,"message":"817","line":286,"column":31,"nodeType":"818","messageId":"819","endLine":286,"endColumn":33},{"ruleId":"828","severity":1,"message":"829","line":297,"column":52,"nodeType":"830","messageId":"831","endLine":297,"endColumn":54},{"ruleId":"816","severity":1,"message":"817","line":298,"column":21,"nodeType":"818","messageId":"819","endLine":298,"endColumn":23},{"ruleId":"816","severity":1,"message":"817","line":299,"column":21,"nodeType":"818","messageId":"819","endLine":299,"endColumn":23},{"ruleId":"816","severity":1,"message":"817","line":304,"column":23,"nodeType":"818","messageId":"819","endLine":304,"endColumn":25},{"ruleId":"816","severity":1,"message":"817","line":307,"column":25,"nodeType":"818","messageId":"819","endLine":307,"endColumn":27},{"ruleId":"816","severity":1,"message":"817","line":314,"column":23,"nodeType":"818","messageId":"819","endLine":314,"endColumn":25},{"ruleId":"828","severity":1,"message":"829","line":324,"column":67,"nodeType":"830","messageId":"831","endLine":324,"endColumn":69},{"ruleId":"816","severity":1,"message":"817","line":325,"column":27,"nodeType":"818","messageId":"819","endLine":325,"endColumn":29},{"ruleId":"816","severity":1,"message":"817","line":351,"column":33,"nodeType":"818","messageId":"819","endLine":351,"endColumn":35},{"ruleId":"821","severity":1,"message":"842","line":380,"column":6,"nodeType":"823","endLine":380,"endColumn":19,"suggestions":"843"},{"ruleId":"828","severity":1,"message":"829","line":385,"column":22,"nodeType":"830","messageId":"831","endLine":385,"endColumn":24},{"ruleId":"821","severity":1,"message":"844","line":393,"column":6,"nodeType":"823","endLine":393,"endColumn":18,"suggestions":"845"},{"ruleId":"821","severity":1,"message":"832","line":397,"column":6,"nodeType":"823","endLine":397,"endColumn":17,"suggestions":"846"},{"ruleId":"816","severity":1,"message":"817","line":413,"column":19,"nodeType":"818","messageId":"819","endLine":413,"endColumn":21},{"ruleId":"816","severity":1,"message":"817","line":415,"column":19,"nodeType":"818","messageId":"819","endLine":415,"endColumn":21},{"ruleId":"816","severity":1,"message":"817","line":420,"column":19,"nodeType":"818","messageId":"819","endLine":420,"endColumn":21},{"ruleId":"828","severity":1,"message":"829","line":747,"column":29,"nodeType":"830","messageId":"831","endLine":747,"endColumn":31},{"ruleId":"816","severity":1,"message":"817","line":755,"column":27,"nodeType":"818","messageId":"819","endLine":755,"endColumn":29},{"ruleId":"809","severity":1,"message":"847","line":2,"column":10,"nodeType":"811","messageId":"812","endLine":2,"endColumn":19},{"ruleId":"809","severity":1,"message":"848","line":7,"column":8,"nodeType":"811","messageId":"812","endLine":7,"endColumn":20},{"ruleId":"828","severity":1,"message":"829","line":52,"column":28,"nodeType":"830","messageId":"831","endLine":52,"endColumn":30},{"ruleId":"849","severity":1,"message":"850","line":174,"column":11,"nodeType":"839","endLine":174,"endColumn":65},{"ruleId":"809","severity":1,"message":"851","line":69,"column":10,"nodeType":"811","messageId":"812","endLine":69,"endColumn":21},{"ruleId":"809","severity":1,"message":"841","line":93,"column":9,"nodeType":"811","messageId":"812","endLine":93,"endColumn":17},{"ruleId":"828","severity":1,"message":"829","line":116,"column":52,"nodeType":"830","messageId":"831","endLine":116,"endColumn":54},{"ruleId":"828","severity":1,"message":"829","line":151,"column":45,"nodeType":"830","messageId":"831","endLine":151,"endColumn":47},{"ruleId":"816","severity":1,"message":"817","line":167,"column":45,"nodeType":"818","messageId":"819","endLine":167,"endColumn":47},{"ruleId":"828","severity":1,"message":"829","line":180,"column":62,"nodeType":"830","messageId":"831","endLine":180,"endColumn":64},{"ruleId":"816","severity":1,"message":"817","line":181,"column":37,"nodeType":"818","messageId":"819","endLine":181,"endColumn":39},{"ruleId":"816","severity":1,"message":"817","line":182,"column":37,"nodeType":"818","messageId":"819","endLine":182,"endColumn":39},{"ruleId":"816","severity":1,"message":"817","line":187,"column":39,"nodeType":"818","messageId":"819","endLine":187,"endColumn":41},{"ruleId":"816","severity":1,"message":"817","line":190,"column":41,"nodeType":"818","messageId":"819","endLine":190,"endColumn":43},{"ruleId":"816","severity":1,"message":"817","line":197,"column":39,"nodeType":"818","messageId":"819","endLine":197,"endColumn":41},{"ruleId":"828","severity":1,"message":"829","line":207,"column":77,"nodeType":"830","messageId":"831","endLine":207,"endColumn":79},{"ruleId":"816","severity":1,"message":"817","line":208,"column":43,"nodeType":"818","messageId":"819","endLine":208,"endColumn":45},{"ruleId":"828","severity":1,"message":"829","line":290,"column":25,"nodeType":"830","messageId":"831","endLine":290,"endColumn":27},{"ruleId":"821","severity":1,"message":"852","line":297,"column":6,"nodeType":"823","endLine":297,"endColumn":18,"suggestions":"853"},{"ruleId":"809","severity":1,"message":"841","line":51,"column":9,"nodeType":"811","messageId":"812","endLine":51,"endColumn":17},{"ruleId":"828","severity":1,"message":"829","line":74,"column":52,"nodeType":"830","messageId":"831","endLine":74,"endColumn":54},{"ruleId":"816","severity":1,"message":"817","line":100,"column":37,"nodeType":"818","messageId":"819","endLine":100,"endColumn":39},{"ruleId":"816","severity":1,"message":"817","line":136,"column":37,"nodeType":"818","messageId":"819","endLine":136,"endColumn":39},{"ruleId":"809","severity":1,"message":"841","line":146,"column":11,"nodeType":"811","messageId":"812","endLine":146,"endColumn":19},{"ruleId":"828","severity":1,"message":"829","line":174,"column":49,"nodeType":"830","messageId":"831","endLine":174,"endColumn":51},{"ruleId":"816","severity":1,"message":"817","line":175,"column":23,"nodeType":"818","messageId":"819","endLine":175,"endColumn":25},{"ruleId":"816","severity":1,"message":"817","line":188,"column":35,"nodeType":"818","messageId":"819","endLine":188,"endColumn":37},{"ruleId":"821","severity":1,"message":"854","line":213,"column":6,"nodeType":"823","endLine":213,"endColumn":19,"suggestions":"855"},{"ruleId":"809","severity":1,"message":"856","line":41,"column":11,"nodeType":"811","messageId":"812","endLine":41,"endColumn":16},{"ruleId":"809","severity":1,"message":"841","line":64,"column":9,"nodeType":"811","messageId":"812","endLine":64,"endColumn":17},{"ruleId":"828","severity":1,"message":"829","line":87,"column":52,"nodeType":"830","messageId":"831","endLine":87,"endColumn":54},{"ruleId":"816","severity":1,"message":"817","line":113,"column":37,"nodeType":"818","messageId":"819","endLine":113,"endColumn":39},{"ruleId":"816","severity":1,"message":"817","line":149,"column":37,"nodeType":"818","messageId":"819","endLine":149,"endColumn":39},{"ruleId":"809","severity":1,"message":"841","line":159,"column":11,"nodeType":"811","messageId":"812","endLine":159,"endColumn":19},{"ruleId":"816","severity":1,"message":"817","line":167,"column":28,"nodeType":"818","messageId":"819","endLine":167,"endColumn":30},{"ruleId":"828","severity":1,"message":"829","line":188,"column":51,"nodeType":"830","messageId":"831","endLine":188,"endColumn":53},{"ruleId":"816","severity":1,"message":"817","line":189,"column":25,"nodeType":"818","messageId":"819","endLine":189,"endColumn":27},{"ruleId":"816","severity":1,"message":"817","line":203,"column":35,"nodeType":"818","messageId":"819","endLine":203,"endColumn":37},{"ruleId":"809","severity":1,"message":"857","line":223,"column":13,"nodeType":"811","messageId":"812","endLine":223,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":229,"column":25,"nodeType":"830","messageId":"831","endLine":229,"endColumn":27},{"ruleId":"816","severity":1,"message":"817","line":237,"column":29,"nodeType":"818","messageId":"819","endLine":237,"endColumn":31},{"ruleId":"816","severity":1,"message":"817","line":238,"column":30,"nodeType":"818","messageId":"819","endLine":238,"endColumn":32},{"ruleId":"816","severity":1,"message":"817","line":240,"column":34,"nodeType":"818","messageId":"819","endLine":240,"endColumn":36},{"ruleId":"816","severity":1,"message":"817","line":243,"column":37,"nodeType":"818","messageId":"819","endLine":243,"endColumn":39},{"ruleId":"816","severity":1,"message":"817","line":245,"column":34,"nodeType":"818","messageId":"819","endLine":245,"endColumn":36},{"ruleId":"816","severity":1,"message":"817","line":248,"column":37,"nodeType":"818","messageId":"819","endLine":248,"endColumn":39},{"ruleId":"816","severity":1,"message":"817","line":250,"column":34,"nodeType":"818","messageId":"819","endLine":250,"endColumn":36},{"ruleId":"821","severity":1,"message":"854","line":296,"column":6,"nodeType":"823","endLine":296,"endColumn":19,"suggestions":"858"},{"ruleId":"816","severity":1,"message":"817","line":397,"column":38,"nodeType":"818","messageId":"819","endLine":397,"endColumn":40},{"ruleId":"816","severity":1,"message":"817","line":445,"column":60,"nodeType":"818","messageId":"819","endLine":445,"endColumn":62},{"ruleId":"828","severity":1,"message":"829","line":468,"column":57,"nodeType":"830","messageId":"831","endLine":468,"endColumn":59},{"ruleId":"828","severity":1,"message":"829","line":495,"column":65,"nodeType":"830","messageId":"831","endLine":495,"endColumn":67},{"ruleId":"828","severity":1,"message":"829","line":516,"column":65,"nodeType":"830","messageId":"831","endLine":516,"endColumn":67},{"ruleId":"828","severity":1,"message":"829","line":543,"column":59,"nodeType":"830","messageId":"831","endLine":543,"endColumn":61},{"ruleId":"828","severity":1,"message":"829","line":73,"column":29,"nodeType":"830","messageId":"831","endLine":73,"endColumn":31},{"ruleId":"809","severity":1,"message":"841","line":47,"column":9,"nodeType":"811","messageId":"812","endLine":47,"endColumn":17},{"ruleId":"828","severity":1,"message":"829","line":70,"column":52,"nodeType":"830","messageId":"831","endLine":70,"endColumn":54},{"ruleId":"809","severity":1,"message":"841","line":84,"column":11,"nodeType":"811","messageId":"812","endLine":84,"endColumn":19},{"ruleId":"828","severity":1,"message":"829","line":91,"column":42,"nodeType":"830","messageId":"831","endLine":91,"endColumn":44},{"ruleId":"828","severity":1,"message":"829","line":109,"column":51,"nodeType":"830","messageId":"831","endLine":109,"endColumn":53},{"ruleId":"816","severity":1,"message":"817","line":110,"column":25,"nodeType":"818","messageId":"819","endLine":110,"endColumn":27},{"ruleId":"816","severity":1,"message":"817","line":122,"column":39,"nodeType":"818","messageId":"819","endLine":122,"endColumn":41},{"ruleId":"809","severity":1,"message":"857","line":142,"column":13,"nodeType":"811","messageId":"812","endLine":142,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":148,"column":25,"nodeType":"830","messageId":"831","endLine":148,"endColumn":27},{"ruleId":"816","severity":1,"message":"817","line":156,"column":29,"nodeType":"818","messageId":"819","endLine":156,"endColumn":31},{"ruleId":"816","severity":1,"message":"817","line":157,"column":30,"nodeType":"818","messageId":"819","endLine":157,"endColumn":32},{"ruleId":"816","severity":1,"message":"817","line":159,"column":34,"nodeType":"818","messageId":"819","endLine":159,"endColumn":36},{"ruleId":"816","severity":1,"message":"817","line":162,"column":37,"nodeType":"818","messageId":"819","endLine":162,"endColumn":39},{"ruleId":"816","severity":1,"message":"817","line":164,"column":34,"nodeType":"818","messageId":"819","endLine":164,"endColumn":36},{"ruleId":"816","severity":1,"message":"817","line":167,"column":37,"nodeType":"818","messageId":"819","endLine":167,"endColumn":39},{"ruleId":"816","severity":1,"message":"817","line":169,"column":34,"nodeType":"818","messageId":"819","endLine":169,"endColumn":36},{"ruleId":"821","severity":1,"message":"854","line":215,"column":6,"nodeType":"823","endLine":215,"endColumn":19,"suggestions":"859"},{"ruleId":"816","severity":1,"message":"817","line":364,"column":77,"nodeType":"818","messageId":"819","endLine":364,"endColumn":79},{"ruleId":"816","severity":1,"message":"817","line":374,"column":55,"nodeType":"818","messageId":"819","endLine":374,"endColumn":57},{"ruleId":"816","severity":1,"message":"817","line":378,"column":56,"nodeType":"818","messageId":"819","endLine":378,"endColumn":58},{"ruleId":"816","severity":1,"message":"817","line":379,"column":64,"nodeType":"818","messageId":"819","endLine":379,"endColumn":66},{"ruleId":"816","severity":1,"message":"817","line":383,"column":56,"nodeType":"818","messageId":"819","endLine":383,"endColumn":58},{"ruleId":"816","severity":1,"message":"817","line":384,"column":64,"nodeType":"818","messageId":"819","endLine":384,"endColumn":66},{"ruleId":"816","severity":1,"message":"817","line":388,"column":56,"nodeType":"818","messageId":"819","endLine":388,"endColumn":58},{"ruleId":"816","severity":1,"message":"817","line":389,"column":64,"nodeType":"818","messageId":"819","endLine":389,"endColumn":66},{"ruleId":"828","severity":1,"message":"829","line":409,"column":73,"nodeType":"830","messageId":"831","endLine":409,"endColumn":75},{"ruleId":"816","severity":1,"message":"817","line":495,"column":64,"nodeType":"818","messageId":"819","endLine":495,"endColumn":66},{"ruleId":"828","severity":1,"message":"829","line":531,"column":62,"nodeType":"830","messageId":"831","endLine":531,"endColumn":64},{"ruleId":"828","severity":1,"message":"829","line":562,"column":70,"nodeType":"830","messageId":"831","endLine":562,"endColumn":72},{"ruleId":"828","severity":1,"message":"829","line":583,"column":70,"nodeType":"830","messageId":"831","endLine":583,"endColumn":72},{"ruleId":"828","severity":1,"message":"829","line":610,"column":64,"nodeType":"830","messageId":"831","endLine":610,"endColumn":66},{"ruleId":"821","severity":1,"message":"860","line":86,"column":6,"nodeType":"823","endLine":86,"endColumn":19,"suggestions":"861"},{"ruleId":"809","severity":1,"message":"841","line":252,"column":21,"nodeType":"811","messageId":"812","endLine":252,"endColumn":34},{"ruleId":"809","severity":1,"message":"841","line":277,"column":21,"nodeType":"811","messageId":"812","endLine":277,"endColumn":34},{"ruleId":"809","severity":1,"message":"862","line":1,"column":17,"nodeType":"811","messageId":"812","endLine":1,"endColumn":25},{"ruleId":"816","severity":1,"message":"820","line":37,"column":51,"nodeType":"818","messageId":"819","endLine":37,"endColumn":53},{"ruleId":"816","severity":1,"message":"817","line":65,"column":17,"nodeType":"818","messageId":"819","endLine":65,"endColumn":19},{"ruleId":"816","severity":1,"message":"817","line":66,"column":22,"nodeType":"818","messageId":"819","endLine":66,"endColumn":24},{"ruleId":"816","severity":1,"message":"817","line":67,"column":22,"nodeType":"818","messageId":"819","endLine":67,"endColumn":24},{"ruleId":"821","severity":1,"message":"863","line":61,"column":6,"nodeType":"823","endLine":61,"endColumn":19,"suggestions":"864"},{"ruleId":"809","severity":1,"message":"815","line":11,"column":8,"nodeType":"811","messageId":"812","endLine":11,"endColumn":12},{"ruleId":"809","severity":1,"message":"810","line":1,"column":17,"nodeType":"811","messageId":"812","endLine":1,"endColumn":26},{"ruleId":"809","severity":1,"message":"865","line":2,"column":10,"nodeType":"811","messageId":"812","endLine":2,"endColumn":25},{"ruleId":"809","severity":1,"message":"866","line":14,"column":7,"nodeType":"811","messageId":"812","endLine":14,"endColumn":21},{"ruleId":"821","severity":1,"message":"867","line":108,"column":6,"nodeType":"823","endLine":108,"endColumn":44,"suggestions":"868"},{"ruleId":"809","severity":1,"message":"869","line":52,"column":11,"nodeType":"811","messageId":"812","endLine":52,"endColumn":25},{"ruleId":"828","severity":1,"message":"829","line":153,"column":61,"nodeType":"830","messageId":"831","endLine":153,"endColumn":63},{"ruleId":"828","severity":1,"message":"829","line":157,"column":61,"nodeType":"830","messageId":"831","endLine":157,"endColumn":63},{"ruleId":"828","severity":1,"message":"829","line":161,"column":61,"nodeType":"830","messageId":"831","endLine":161,"endColumn":63},{"ruleId":"828","severity":1,"message":"829","line":165,"column":61,"nodeType":"830","messageId":"831","endLine":165,"endColumn":63},{"ruleId":"821","severity":1,"message":"870","line":173,"column":6,"nodeType":"823","endLine":173,"endColumn":16,"suggestions":"871"},{"ruleId":"816","severity":1,"message":"817","line":268,"column":37,"nodeType":"818","messageId":"819","endLine":268,"endColumn":39},{"ruleId":"821","severity":1,"message":"872","line":302,"column":6,"nodeType":"823","endLine":302,"endColumn":58,"suggestions":"873"},{"ruleId":"828","severity":1,"message":"829","line":84,"column":25,"nodeType":"830","messageId":"831","endLine":84,"endColumn":27},{"ruleId":"816","severity":1,"message":"817","line":96,"column":26,"nodeType":"818","messageId":"819","endLine":96,"endColumn":28},{"ruleId":"821","severity":1,"message":"874","line":100,"column":6,"nodeType":"823","endLine":100,"endColumn":18,"suggestions":"875"},{"ruleId":"828","severity":1,"message":"829","line":105,"column":27,"nodeType":"830","messageId":"831","endLine":105,"endColumn":29},{"ruleId":"821","severity":1,"message":"876","line":214,"column":6,"nodeType":"823","endLine":214,"endColumn":46,"suggestions":"877"},{"ruleId":"809","severity":1,"message":"862","line":2,"column":36,"nodeType":"811","messageId":"812","endLine":2,"endColumn":44},{"ruleId":"828","severity":1,"message":"829","line":66,"column":29,"nodeType":"830","messageId":"831","endLine":66,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":70,"column":29,"nodeType":"830","messageId":"831","endLine":70,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":74,"column":29,"nodeType":"830","messageId":"831","endLine":74,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":78,"column":29,"nodeType":"830","messageId":"831","endLine":78,"endColumn":31},{"ruleId":"878","severity":1,"message":"879","line":257,"column":35,"nodeType":"818","messageId":"880","endLine":257,"endColumn":36},{"ruleId":"878","severity":1,"message":"879","line":294,"column":36,"nodeType":"818","messageId":"880","endLine":294,"endColumn":37},{"ruleId":"809","severity":1,"message":"881","line":311,"column":15,"nodeType":"811","messageId":"812","endLine":311,"endColumn":29},{"ruleId":"809","severity":1,"message":"882","line":312,"column":15,"nodeType":"811","messageId":"812","endLine":312,"endColumn":28},{"ruleId":"809","severity":1,"message":"883","line":314,"column":15,"nodeType":"811","messageId":"812","endLine":314,"endColumn":22},{"ruleId":"821","severity":1,"message":"884","line":376,"column":6,"nodeType":"823","endLine":376,"endColumn":42,"suggestions":"885"},{"ruleId":"809","severity":1,"message":"886","line":6,"column":10,"nodeType":"811","messageId":"812","endLine":6,"endColumn":22},{"ruleId":"809","severity":1,"message":"836","line":56,"column":9,"nodeType":"811","messageId":"812","endLine":56,"endColumn":16},{"ruleId":"828","severity":1,"message":"829","line":116,"column":25,"nodeType":"830","messageId":"831","endLine":116,"endColumn":27},{"ruleId":"821","severity":1,"message":"852","line":123,"column":6,"nodeType":"823","endLine":123,"endColumn":18,"suggestions":"887"},{"ruleId":"805","replacedBy":"888"},{"ruleId":"807","replacedBy":"889"},{"ruleId":"809","severity":1,"message":"810","line":1,"column":17,"nodeType":"811","messageId":"812","endLine":1,"endColumn":26},{"ruleId":"809","severity":1,"message":"813","line":5,"column":3,"nodeType":"811","messageId":"812","endLine":5,"endColumn":13},{"ruleId":"809","severity":1,"message":"814","line":6,"column":3,"nodeType":"811","messageId":"812","endLine":6,"endColumn":14},{"ruleId":"809","severity":1,"message":"815","line":8,"column":8,"nodeType":"811","messageId":"812","endLine":8,"endColumn":12},{"ruleId":"816","severity":1,"message":"817","line":33,"column":46,"nodeType":"818","messageId":"819","endLine":33,"endColumn":48},{"ruleId":"816","severity":1,"message":"817","line":34,"column":46,"nodeType":"818","messageId":"819","endLine":34,"endColumn":48},{"ruleId":"816","severity":1,"message":"820","line":47,"column":53,"nodeType":"818","messageId":"819","endLine":47,"endColumn":55},{"ruleId":"809","severity":1,"message":"827","line":24,"column":11,"nodeType":"811","messageId":"812","endLine":24,"endColumn":23},{"ruleId":"828","severity":1,"message":"829","line":73,"column":35,"nodeType":"830","messageId":"831","endLine":73,"endColumn":37},{"ruleId":"816","severity":1,"message":"817","line":84,"column":37,"nodeType":"818","messageId":"819","endLine":84,"endColumn":39},{"ruleId":"828","severity":1,"message":"829","line":95,"column":52,"nodeType":"830","messageId":"831","endLine":95,"endColumn":54},{"ruleId":"816","severity":1,"message":"817","line":96,"column":27,"nodeType":"818","messageId":"819","endLine":96,"endColumn":29},{"ruleId":"816","severity":1,"message":"817","line":97,"column":27,"nodeType":"818","messageId":"819","endLine":97,"endColumn":29},{"ruleId":"816","severity":1,"message":"817","line":102,"column":29,"nodeType":"818","messageId":"819","endLine":102,"endColumn":31},{"ruleId":"816","severity":1,"message":"817","line":105,"column":31,"nodeType":"818","messageId":"819","endLine":105,"endColumn":33},{"ruleId":"816","severity":1,"message":"817","line":112,"column":29,"nodeType":"818","messageId":"819","endLine":112,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":122,"column":67,"nodeType":"830","messageId":"831","endLine":122,"endColumn":69},{"ruleId":"816","severity":1,"message":"817","line":123,"column":33,"nodeType":"818","messageId":"819","endLine":123,"endColumn":35},{"ruleId":"821","severity":1,"message":"832","line":174,"column":6,"nodeType":"823","endLine":174,"endColumn":8,"suggestions":"890"},{"ruleId":"828","severity":1,"message":"829","line":180,"column":25,"nodeType":"830","messageId":"831","endLine":180,"endColumn":27},{"ruleId":"816","severity":1,"message":"817","line":181,"column":18,"nodeType":"818","messageId":"819","endLine":181,"endColumn":20},{"ruleId":"821","severity":1,"message":"834","line":190,"column":6,"nodeType":"823","endLine":190,"endColumn":12,"suggestions":"891"},{"ruleId":"816","severity":1,"message":"820","line":104,"column":49,"nodeType":"818","messageId":"819","endLine":104,"endColumn":51},{"ruleId":"816","severity":1,"message":"817","line":127,"column":39,"nodeType":"818","messageId":"819","endLine":127,"endColumn":41},{"ruleId":"816","severity":1,"message":"817","line":146,"column":32,"nodeType":"818","messageId":"819","endLine":146,"endColumn":34},{"ruleId":"821","severity":1,"message":"822","line":168,"column":6,"nodeType":"823","endLine":168,"endColumn":8,"suggestions":"892"},{"ruleId":"821","severity":1,"message":"825","line":172,"column":6,"nodeType":"823","endLine":172,"endColumn":19,"suggestions":"893"},{"ruleId":"809","severity":1,"message":"841","line":47,"column":9,"nodeType":"811","messageId":"812","endLine":47,"endColumn":17},{"ruleId":"828","severity":1,"message":"829","line":70,"column":52,"nodeType":"830","messageId":"831","endLine":70,"endColumn":54},{"ruleId":"809","severity":1,"message":"841","line":84,"column":11,"nodeType":"811","messageId":"812","endLine":84,"endColumn":19},{"ruleId":"828","severity":1,"message":"829","line":91,"column":42,"nodeType":"830","messageId":"831","endLine":91,"endColumn":44},{"ruleId":"828","severity":1,"message":"829","line":109,"column":51,"nodeType":"830","messageId":"831","endLine":109,"endColumn":53},{"ruleId":"816","severity":1,"message":"817","line":110,"column":25,"nodeType":"818","messageId":"819","endLine":110,"endColumn":27},{"ruleId":"816","severity":1,"message":"817","line":122,"column":39,"nodeType":"818","messageId":"819","endLine":122,"endColumn":41},{"ruleId":"809","severity":1,"message":"857","line":142,"column":13,"nodeType":"811","messageId":"812","endLine":142,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":148,"column":25,"nodeType":"830","messageId":"831","endLine":148,"endColumn":27},{"ruleId":"816","severity":1,"message":"817","line":156,"column":29,"nodeType":"818","messageId":"819","endLine":156,"endColumn":31},{"ruleId":"816","severity":1,"message":"817","line":157,"column":30,"nodeType":"818","messageId":"819","endLine":157,"endColumn":32},{"ruleId":"816","severity":1,"message":"817","line":159,"column":34,"nodeType":"818","messageId":"819","endLine":159,"endColumn":36},{"ruleId":"816","severity":1,"message":"817","line":162,"column":37,"nodeType":"818","messageId":"819","endLine":162,"endColumn":39},{"ruleId":"816","severity":1,"message":"817","line":164,"column":34,"nodeType":"818","messageId":"819","endLine":164,"endColumn":36},{"ruleId":"816","severity":1,"message":"817","line":167,"column":37,"nodeType":"818","messageId":"819","endLine":167,"endColumn":39},{"ruleId":"816","severity":1,"message":"817","line":169,"column":34,"nodeType":"818","messageId":"819","endLine":169,"endColumn":36},{"ruleId":"821","severity":1,"message":"854","line":215,"column":6,"nodeType":"823","endLine":215,"endColumn":19,"suggestions":"894"},{"ruleId":"816","severity":1,"message":"817","line":364,"column":77,"nodeType":"818","messageId":"819","endLine":364,"endColumn":79},{"ruleId":"816","severity":1,"message":"817","line":374,"column":55,"nodeType":"818","messageId":"819","endLine":374,"endColumn":57},{"ruleId":"816","severity":1,"message":"817","line":378,"column":56,"nodeType":"818","messageId":"819","endLine":378,"endColumn":58},{"ruleId":"816","severity":1,"message":"817","line":379,"column":64,"nodeType":"818","messageId":"819","endLine":379,"endColumn":66},{"ruleId":"816","severity":1,"message":"817","line":383,"column":56,"nodeType":"818","messageId":"819","endLine":383,"endColumn":58},{"ruleId":"816","severity":1,"message":"817","line":384,"column":64,"nodeType":"818","messageId":"819","endLine":384,"endColumn":66},{"ruleId":"816","severity":1,"message":"817","line":388,"column":56,"nodeType":"818","messageId":"819","endLine":388,"endColumn":58},{"ruleId":"816","severity":1,"message":"817","line":389,"column":64,"nodeType":"818","messageId":"819","endLine":389,"endColumn":66},{"ruleId":"828","severity":1,"message":"829","line":409,"column":73,"nodeType":"830","messageId":"831","endLine":409,"endColumn":75},{"ruleId":"816","severity":1,"message":"817","line":495,"column":64,"nodeType":"818","messageId":"819","endLine":495,"endColumn":66},{"ruleId":"828","severity":1,"message":"829","line":531,"column":62,"nodeType":"830","messageId":"831","endLine":531,"endColumn":64},{"ruleId":"828","severity":1,"message":"829","line":560,"column":70,"nodeType":"830","messageId":"831","endLine":560,"endColumn":72},{"ruleId":"828","severity":1,"message":"829","line":581,"column":70,"nodeType":"830","messageId":"831","endLine":581,"endColumn":72},{"ruleId":"828","severity":1,"message":"829","line":608,"column":64,"nodeType":"830","messageId":"831","endLine":608,"endColumn":66},{"ruleId":"837","severity":1,"message":"838","line":41,"column":15,"nodeType":"839","endLine":41,"endColumn":55},{"ruleId":"837","severity":1,"message":"838","line":45,"column":15,"nodeType":"839","endLine":45,"endColumn":53},{"ruleId":"809","severity":1,"message":"836","line":8,"column":9,"nodeType":"811","messageId":"812","endLine":8,"endColumn":16},{"ruleId":"837","severity":1,"message":"838","line":43,"column":15,"nodeType":"839","endLine":43,"endColumn":57},{"ruleId":"809","severity":1,"message":"840","line":3,"column":8,"nodeType":"811","messageId":"812","endLine":3,"endColumn":21},{"ruleId":"809","severity":1,"message":"836","line":29,"column":9,"nodeType":"811","messageId":"812","endLine":29,"endColumn":16},{"ruleId":"809","severity":1,"message":"841","line":134,"column":9,"nodeType":"811","messageId":"812","endLine":134,"endColumn":17},{"ruleId":"828","severity":1,"message":"829","line":157,"column":52,"nodeType":"830","messageId":"831","endLine":157,"endColumn":54},{"ruleId":"828","severity":1,"message":"829","line":178,"column":41,"nodeType":"830","messageId":"831","endLine":178,"endColumn":43},{"ruleId":"816","severity":1,"message":"817","line":214,"column":37,"nodeType":"818","messageId":"819","endLine":214,"endColumn":39},{"ruleId":"828","severity":1,"message":"829","line":248,"column":49,"nodeType":"830","messageId":"831","endLine":248,"endColumn":51},{"ruleId":"816","severity":1,"message":"817","line":249,"column":23,"nodeType":"818","messageId":"819","endLine":249,"endColumn":25},{"ruleId":"816","severity":1,"message":"817","line":260,"column":34,"nodeType":"818","messageId":"819","endLine":260,"endColumn":36},{"ruleId":"816","severity":1,"message":"817","line":286,"column":31,"nodeType":"818","messageId":"819","endLine":286,"endColumn":33},{"ruleId":"828","severity":1,"message":"829","line":297,"column":52,"nodeType":"830","messageId":"831","endLine":297,"endColumn":54},{"ruleId":"816","severity":1,"message":"817","line":298,"column":21,"nodeType":"818","messageId":"819","endLine":298,"endColumn":23},{"ruleId":"816","severity":1,"message":"817","line":299,"column":21,"nodeType":"818","messageId":"819","endLine":299,"endColumn":23},{"ruleId":"816","severity":1,"message":"817","line":304,"column":23,"nodeType":"818","messageId":"819","endLine":304,"endColumn":25},{"ruleId":"816","severity":1,"message":"817","line":307,"column":25,"nodeType":"818","messageId":"819","endLine":307,"endColumn":27},{"ruleId":"816","severity":1,"message":"817","line":314,"column":23,"nodeType":"818","messageId":"819","endLine":314,"endColumn":25},{"ruleId":"828","severity":1,"message":"829","line":324,"column":67,"nodeType":"830","messageId":"831","endLine":324,"endColumn":69},{"ruleId":"816","severity":1,"message":"817","line":325,"column":27,"nodeType":"818","messageId":"819","endLine":325,"endColumn":29},{"ruleId":"816","severity":1,"message":"817","line":351,"column":33,"nodeType":"818","messageId":"819","endLine":351,"endColumn":35},{"ruleId":"821","severity":1,"message":"842","line":380,"column":6,"nodeType":"823","endLine":380,"endColumn":19,"suggestions":"895"},{"ruleId":"828","severity":1,"message":"829","line":385,"column":22,"nodeType":"830","messageId":"831","endLine":385,"endColumn":24},{"ruleId":"821","severity":1,"message":"844","line":393,"column":6,"nodeType":"823","endLine":393,"endColumn":18,"suggestions":"896"},{"ruleId":"821","severity":1,"message":"832","line":397,"column":6,"nodeType":"823","endLine":397,"endColumn":17,"suggestions":"897"},{"ruleId":"816","severity":1,"message":"817","line":413,"column":19,"nodeType":"818","messageId":"819","endLine":413,"endColumn":21},{"ruleId":"816","severity":1,"message":"817","line":415,"column":19,"nodeType":"818","messageId":"819","endLine":415,"endColumn":21},{"ruleId":"816","severity":1,"message":"817","line":420,"column":19,"nodeType":"818","messageId":"819","endLine":420,"endColumn":21},{"ruleId":"828","severity":1,"message":"829","line":747,"column":29,"nodeType":"830","messageId":"831","endLine":747,"endColumn":31},{"ruleId":"816","severity":1,"message":"817","line":755,"column":27,"nodeType":"818","messageId":"819","endLine":755,"endColumn":29},{"ruleId":"809","severity":1,"message":"848","line":7,"column":8,"nodeType":"811","messageId":"812","endLine":7,"endColumn":20},{"ruleId":"828","severity":1,"message":"829","line":52,"column":28,"nodeType":"830","messageId":"831","endLine":52,"endColumn":30},{"ruleId":"849","severity":1,"message":"850","line":174,"column":11,"nodeType":"839","endLine":174,"endColumn":65},{"ruleId":"809","severity":1,"message":"851","line":69,"column":10,"nodeType":"811","messageId":"812","endLine":69,"endColumn":21},{"ruleId":"809","severity":1,"message":"841","line":93,"column":9,"nodeType":"811","messageId":"812","endLine":93,"endColumn":17},{"ruleId":"828","severity":1,"message":"829","line":116,"column":52,"nodeType":"830","messageId":"831","endLine":116,"endColumn":54},{"ruleId":"828","severity":1,"message":"829","line":151,"column":45,"nodeType":"830","messageId":"831","endLine":151,"endColumn":47},{"ruleId":"816","severity":1,"message":"817","line":167,"column":45,"nodeType":"818","messageId":"819","endLine":167,"endColumn":47},{"ruleId":"828","severity":1,"message":"829","line":180,"column":62,"nodeType":"830","messageId":"831","endLine":180,"endColumn":64},{"ruleId":"816","severity":1,"message":"817","line":181,"column":37,"nodeType":"818","messageId":"819","endLine":181,"endColumn":39},{"ruleId":"816","severity":1,"message":"817","line":182,"column":37,"nodeType":"818","messageId":"819","endLine":182,"endColumn":39},{"ruleId":"816","severity":1,"message":"817","line":187,"column":39,"nodeType":"818","messageId":"819","endLine":187,"endColumn":41},{"ruleId":"816","severity":1,"message":"817","line":190,"column":41,"nodeType":"818","messageId":"819","endLine":190,"endColumn":43},{"ruleId":"816","severity":1,"message":"817","line":197,"column":39,"nodeType":"818","messageId":"819","endLine":197,"endColumn":41},{"ruleId":"828","severity":1,"message":"829","line":207,"column":77,"nodeType":"830","messageId":"831","endLine":207,"endColumn":79},{"ruleId":"816","severity":1,"message":"817","line":208,"column":43,"nodeType":"818","messageId":"819","endLine":208,"endColumn":45},{"ruleId":"828","severity":1,"message":"829","line":290,"column":25,"nodeType":"830","messageId":"831","endLine":290,"endColumn":27},{"ruleId":"821","severity":1,"message":"852","line":297,"column":6,"nodeType":"823","endLine":297,"endColumn":18,"suggestions":"898"},{"ruleId":"809","severity":1,"message":"856","line":41,"column":11,"nodeType":"811","messageId":"812","endLine":41,"endColumn":16},{"ruleId":"809","severity":1,"message":"841","line":64,"column":9,"nodeType":"811","messageId":"812","endLine":64,"endColumn":17},{"ruleId":"828","severity":1,"message":"829","line":87,"column":52,"nodeType":"830","messageId":"831","endLine":87,"endColumn":54},{"ruleId":"816","severity":1,"message":"817","line":113,"column":37,"nodeType":"818","messageId":"819","endLine":113,"endColumn":39},{"ruleId":"816","severity":1,"message":"817","line":149,"column":37,"nodeType":"818","messageId":"819","endLine":149,"endColumn":39},{"ruleId":"809","severity":1,"message":"841","line":159,"column":11,"nodeType":"811","messageId":"812","endLine":159,"endColumn":19},{"ruleId":"816","severity":1,"message":"817","line":167,"column":28,"nodeType":"818","messageId":"819","endLine":167,"endColumn":30},{"ruleId":"828","severity":1,"message":"829","line":188,"column":51,"nodeType":"830","messageId":"831","endLine":188,"endColumn":53},{"ruleId":"816","severity":1,"message":"817","line":189,"column":25,"nodeType":"818","messageId":"819","endLine":189,"endColumn":27},{"ruleId":"816","severity":1,"message":"817","line":203,"column":35,"nodeType":"818","messageId":"819","endLine":203,"endColumn":37},{"ruleId":"809","severity":1,"message":"857","line":223,"column":13,"nodeType":"811","messageId":"812","endLine":223,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":229,"column":25,"nodeType":"830","messageId":"831","endLine":229,"endColumn":27},{"ruleId":"816","severity":1,"message":"817","line":237,"column":29,"nodeType":"818","messageId":"819","endLine":237,"endColumn":31},{"ruleId":"816","severity":1,"message":"817","line":238,"column":30,"nodeType":"818","messageId":"819","endLine":238,"endColumn":32},{"ruleId":"816","severity":1,"message":"817","line":240,"column":34,"nodeType":"818","messageId":"819","endLine":240,"endColumn":36},{"ruleId":"816","severity":1,"message":"817","line":243,"column":37,"nodeType":"818","messageId":"819","endLine":243,"endColumn":39},{"ruleId":"816","severity":1,"message":"817","line":245,"column":34,"nodeType":"818","messageId":"819","endLine":245,"endColumn":36},{"ruleId":"816","severity":1,"message":"817","line":248,"column":37,"nodeType":"818","messageId":"819","endLine":248,"endColumn":39},{"ruleId":"816","severity":1,"message":"817","line":250,"column":34,"nodeType":"818","messageId":"819","endLine":250,"endColumn":36},{"ruleId":"821","severity":1,"message":"854","line":296,"column":6,"nodeType":"823","endLine":296,"endColumn":19,"suggestions":"899"},{"ruleId":"816","severity":1,"message":"817","line":397,"column":38,"nodeType":"818","messageId":"819","endLine":397,"endColumn":40},{"ruleId":"816","severity":1,"message":"817","line":445,"column":60,"nodeType":"818","messageId":"819","endLine":445,"endColumn":62},{"ruleId":"828","severity":1,"message":"829","line":468,"column":57,"nodeType":"830","messageId":"831","endLine":468,"endColumn":59},{"ruleId":"828","severity":1,"message":"829","line":495,"column":65,"nodeType":"830","messageId":"831","endLine":495,"endColumn":67},{"ruleId":"828","severity":1,"message":"829","line":516,"column":65,"nodeType":"830","messageId":"831","endLine":516,"endColumn":67},{"ruleId":"828","severity":1,"message":"829","line":543,"column":59,"nodeType":"830","messageId":"831","endLine":543,"endColumn":61},{"ruleId":"809","severity":1,"message":"841","line":51,"column":9,"nodeType":"811","messageId":"812","endLine":51,"endColumn":17},{"ruleId":"828","severity":1,"message":"829","line":74,"column":52,"nodeType":"830","messageId":"831","endLine":74,"endColumn":54},{"ruleId":"816","severity":1,"message":"817","line":100,"column":37,"nodeType":"818","messageId":"819","endLine":100,"endColumn":39},{"ruleId":"816","severity":1,"message":"817","line":136,"column":37,"nodeType":"818","messageId":"819","endLine":136,"endColumn":39},{"ruleId":"809","severity":1,"message":"841","line":146,"column":11,"nodeType":"811","messageId":"812","endLine":146,"endColumn":19},{"ruleId":"828","severity":1,"message":"829","line":174,"column":49,"nodeType":"830","messageId":"831","endLine":174,"endColumn":51},{"ruleId":"816","severity":1,"message":"817","line":175,"column":23,"nodeType":"818","messageId":"819","endLine":175,"endColumn":25},{"ruleId":"816","severity":1,"message":"817","line":188,"column":35,"nodeType":"818","messageId":"819","endLine":188,"endColumn":37},{"ruleId":"821","severity":1,"message":"854","line":213,"column":6,"nodeType":"823","endLine":213,"endColumn":19,"suggestions":"900"},{"ruleId":"809","severity":1,"message":"847","line":2,"column":10,"nodeType":"811","messageId":"812","endLine":2,"endColumn":19},{"ruleId":"816","severity":1,"message":"817","line":78,"column":25,"nodeType":"818","messageId":"819","endLine":78,"endColumn":27},{"ruleId":"816","severity":1,"message":"817","line":86,"column":32,"nodeType":"818","messageId":"819","endLine":86,"endColumn":34},{"ruleId":"809","severity":1,"message":"862","line":1,"column":17,"nodeType":"811","messageId":"812","endLine":1,"endColumn":25},{"ruleId":"821","severity":1,"message":"860","line":86,"column":6,"nodeType":"823","endLine":86,"endColumn":19,"suggestions":"901"},{"ruleId":"809","severity":1,"message":"841","line":252,"column":21,"nodeType":"811","messageId":"812","endLine":252,"endColumn":34},{"ruleId":"809","severity":1,"message":"841","line":277,"column":21,"nodeType":"811","messageId":"812","endLine":277,"endColumn":34},{"ruleId":"828","severity":1,"message":"829","line":73,"column":29,"nodeType":"830","messageId":"831","endLine":73,"endColumn":31},{"ruleId":"809","severity":1,"message":"869","line":52,"column":11,"nodeType":"811","messageId":"812","endLine":52,"endColumn":25},{"ruleId":"828","severity":1,"message":"829","line":153,"column":61,"nodeType":"830","messageId":"831","endLine":153,"endColumn":63},{"ruleId":"828","severity":1,"message":"829","line":157,"column":61,"nodeType":"830","messageId":"831","endLine":157,"endColumn":63},{"ruleId":"828","severity":1,"message":"829","line":161,"column":61,"nodeType":"830","messageId":"831","endLine":161,"endColumn":63},{"ruleId":"828","severity":1,"message":"829","line":165,"column":61,"nodeType":"830","messageId":"831","endLine":165,"endColumn":63},{"ruleId":"821","severity":1,"message":"870","line":173,"column":6,"nodeType":"823","endLine":173,"endColumn":16,"suggestions":"902"},{"ruleId":"816","severity":1,"message":"817","line":268,"column":37,"nodeType":"818","messageId":"819","endLine":268,"endColumn":39},{"ruleId":"821","severity":1,"message":"872","line":302,"column":6,"nodeType":"823","endLine":302,"endColumn":58,"suggestions":"903"},{"ruleId":"809","severity":1,"message":"866","line":14,"column":7,"nodeType":"811","messageId":"812","endLine":14,"endColumn":21},{"ruleId":"821","severity":1,"message":"867","line":108,"column":6,"nodeType":"823","endLine":108,"endColumn":44,"suggestions":"904"},{"ruleId":"809","severity":1,"message":"862","line":2,"column":36,"nodeType":"811","messageId":"812","endLine":2,"endColumn":44},{"ruleId":"828","severity":1,"message":"829","line":66,"column":29,"nodeType":"830","messageId":"831","endLine":66,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":70,"column":29,"nodeType":"830","messageId":"831","endLine":70,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":74,"column":29,"nodeType":"830","messageId":"831","endLine":74,"endColumn":31},{"ruleId":"828","severity":1,"message":"829","line":78,"column":29,"nodeType":"830","messageId":"831","endLine":78,"endColumn":31},{"ruleId":"878","severity":1,"message":"879","line":257,"column":35,"nodeType":"818","messageId":"880","endLine":257,"endColumn":36},{"ruleId":"878","severity":1,"message":"879","line":294,"column":36,"nodeType":"818","messageId":"880","endLine":294,"endColumn":37},{"ruleId":"809","severity":1,"message":"881","line":311,"column":15,"nodeType":"811","messageId":"812","endLine":311,"endColumn":29},{"ruleId":"809","severity":1,"message":"882","line":312,"column":15,"nodeType":"811","messageId":"812","endLine":312,"endColumn":28},{"ruleId":"809","severity":1,"message":"883","line":314,"column":15,"nodeType":"811","messageId":"812","endLine":314,"endColumn":22},{"ruleId":"821","severity":1,"message":"884","line":376,"column":6,"nodeType":"823","endLine":376,"endColumn":42,"suggestions":"905"},{"ruleId":"809","severity":1,"message":"810","line":1,"column":17,"nodeType":"811","messageId":"812","endLine":1,"endColumn":26},{"ruleId":"809","severity":1,"message":"865","line":2,"column":10,"nodeType":"811","messageId":"812","endLine":2,"endColumn":25},{"ruleId":"809","severity":1,"message":"836","line":55,"column":9,"nodeType":"811","messageId":"812","endLine":55,"endColumn":16},{"ruleId":"828","severity":1,"message":"829","line":115,"column":25,"nodeType":"830","messageId":"831","endLine":115,"endColumn":27},{"ruleId":"821","severity":1,"message":"852","line":122,"column":6,"nodeType":"823","endLine":122,"endColumn":18,"suggestions":"906"},{"ruleId":"828","severity":1,"message":"829","line":84,"column":25,"nodeType":"830","messageId":"831","endLine":84,"endColumn":27},{"ruleId":"816","severity":1,"message":"817","line":96,"column":26,"nodeType":"818","messageId":"819","endLine":96,"endColumn":28},{"ruleId":"821","severity":1,"message":"874","line":100,"column":6,"nodeType":"823","endLine":100,"endColumn":18,"suggestions":"907"},{"ruleId":"828","severity":1,"message":"829","line":105,"column":27,"nodeType":"830","messageId":"831","endLine":105,"endColumn":29},{"ruleId":"821","severity":1,"message":"876","line":214,"column":6,"nodeType":"823","endLine":214,"endColumn":46,"suggestions":"908"},{"ruleId":"816","severity":1,"message":"820","line":37,"column":51,"nodeType":"818","messageId":"819","endLine":37,"endColumn":53},{"ruleId":"816","severity":1,"message":"817","line":65,"column":17,"nodeType":"818","messageId":"819","endLine":65,"endColumn":19},{"ruleId":"816","severity":1,"message":"817","line":66,"column":22,"nodeType":"818","messageId":"819","endLine":66,"endColumn":24},{"ruleId":"816","severity":1,"message":"817","line":67,"column":22,"nodeType":"818","messageId":"819","endLine":67,"endColumn":24},{"ruleId":"821","severity":1,"message":"863","line":61,"column":6,"nodeType":"823","endLine":61,"endColumn":19,"suggestions":"909"},{"ruleId":"821","severity":1,"message":"863","line":61,"column":6,"nodeType":"823","endLine":61,"endColumn":19,"suggestions":"910"},"no-native-reassign",["911"],"no-negated-in-lhs",["912"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'Swal' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAccountInfo'. Either include it or remove the dependency array.","ArrayExpression",["913"],"React Hook useEffect has a missing dependency: 'getResourceInfo'. Either include it or remove the dependency array.",["914"],"'IAccountInfo' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getVulnList'. Either include it or remove the dependency array.",["915"],"React Hook useEffect has a missing dependency: 'vulnList'. Either include it or remove the dependency array.",["916"],"'history' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'MaterialTable' is defined but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getHistory'. Either include it or remove the dependency array.",["917"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["918"],["919"],"'transform' is defined but never used.","'fileDownload' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'accountInfo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'vulnList'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilteredList' needs the current value of 'vulnList'.",["920"],"React Hook useEffect has a missing dependency: 'getAssessmentList'. Either include it or remove the dependency array.",["921"],"'IVuln' is defined but never used.","'assessment_results' is assigned a value but never used.",["922"],["923"],"React Hook useEffect has missing dependencies: 'props.setting' and 'setSettingInfo'. Either include them or remove the dependency array.",["924"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'props.filterList'. Either include it or remove the dependency array. If 'setList' needs the current value of 'props.filterList', you can also switch to useReducer instead of useState and read 'props.filterList' in the reducer.",["925"],"'dashboardStyles' is defined but never used.","'dummy' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'rankGraphContainer.current'. Either exclude it or remove the dependency array. Mutable values like 'rankGraphContainer.current' aren't valid dependencies because mutating them doesn't re-render the component.",["926"],"'IServiceByData' is defined but never used.","React Hook useEffect has missing dependencies: 'props.data' and 'props.serviceByData'. Either include them or remove the dependency array.",["927"],"React Hook useEffect has an unnecessary dependency: 'donutContainer.current'. Either exclude it or remove the dependency array. Mutable values like 'donutContainer.current' aren't valid dependencies because mutating them doesn't re-render the component.",["928"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["929"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. Mutable values like 'groupedBarContainer.current' aren't valid dependencies because mutating them doesn't re-render the component.",["930"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'legendRectSize' is assigned a value but never used.","'legendSpacing' is assigned a value but never used.","'bLegend' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'cfg'. Either include it or remove the dependency array. Mutable values like 'radarContainer.current' aren't valid dependencies because mutating them doesn't re-render the component.",["931"],"'AWSChecklist' is defined but never used.",["932"],["911"],["912"],["933"],["934"],["935"],["936"],["937"],["938"],["939"],["940"],["941"],["942"],["943"],["944"],["945"],["946"],["947"],["948"],["949"],["950"],["951"],["952"],["953"],"no-global-assign","no-unsafe-negation",{"desc":"954","fix":"955"},{"desc":"956","fix":"957"},{"desc":"958","fix":"959"},{"desc":"960","fix":"961"},{"desc":"962","fix":"963"},{"desc":"964","fix":"965"},{"desc":"966","fix":"967"},{"desc":"968","fix":"969"},{"desc":"970","fix":"971"},{"desc":"970","fix":"972"},{"desc":"970","fix":"973"},{"desc":"974","fix":"975"},{"desc":"976","fix":"977"},{"desc":"978","fix":"979"},{"desc":"980","fix":"981"},{"desc":"982","fix":"983"},{"desc":"984","fix":"985"},{"desc":"986","fix":"987"},{"desc":"988","fix":"989"},{"desc":"968","fix":"990"},{"desc":"958","fix":"991"},{"desc":"960","fix":"992"},{"desc":"954","fix":"993"},{"desc":"956","fix":"994"},{"desc":"970","fix":"995"},{"desc":"962","fix":"996"},{"desc":"964","fix":"997"},{"desc":"966","fix":"998"},{"desc":"968","fix":"999"},{"desc":"970","fix":"1000"},{"desc":"970","fix":"1001"},{"desc":"974","fix":"1002"},{"desc":"980","fix":"1003"},{"desc":"982","fix":"1004"},{"desc":"978","fix":"1005"},{"desc":"988","fix":"1006"},{"desc":"968","fix":"1007"},{"desc":"984","fix":"1008"},{"desc":"986","fix":"1009"},{"desc":"976","fix":"1010"},{"desc":"976","fix":"1011"},"Update the dependencies array to be: [getAccountInfo]",{"range":"1012","text":"1013"},"Update the dependencies array to be: [accountInfo, getResourceInfo]",{"range":"1014","text":"1015"},"Update the dependencies array to be: [getVulnList]",{"range":"1016","text":"1017"},"Update the dependencies array to be: [info, vulnList]",{"range":"1018","text":"1019"},"Update the dependencies array to be: [accountList, getHistory]",{"range":"1020","text":"1021"},"Update the dependencies array to be: [assessment, history]",{"range":"1022","text":"1023"},"Update the dependencies array to be: [getVulnList, historyId]",{"range":"1024","text":"1025"},"Update the dependencies array to be: [filterList, vulnList]",{"range":"1026","text":"1027"},"Update the dependencies array to be: [accountList, getAssessmentList]",{"range":"1028","text":"1029"},{"range":"1030","text":"1029"},{"range":"1031","text":"1029"},"Update the dependencies array to be: [props.modal, props.setting, setSettingInfo]",{"range":"1032","text":"1033"},"Update the dependencies array to be: [props.filterList, props.modal]",{"range":"1034","text":"1035"},"Update the dependencies array to be: [rankData]",{"range":"1036","text":"1037"},"Update the dependencies array to be: [props.data, props.serviceByData, tempList]",{"range":"1038","text":"1039"},"Update the dependencies array to be: [props.historyId, donutData]",{"range":"1040","text":"1041"},"Update the dependencies array to be: [props, props.data]",{"range":"1042","text":"1043"},"Update the dependencies array to be: [graphData, props]",{"range":"1044","text":"1045"},"Update the dependencies array to be: [cfg, props.data]",{"range":"1046","text":"1047"},{"range":"1048","text":"1027"},{"range":"1049","text":"1017"},{"range":"1050","text":"1019"},{"range":"1051","text":"1013"},{"range":"1052","text":"1015"},{"range":"1053","text":"1029"},{"range":"1054","text":"1021"},{"range":"1055","text":"1023"},{"range":"1056","text":"1025"},{"range":"1057","text":"1027"},{"range":"1058","text":"1029"},{"range":"1059","text":"1029"},{"range":"1060","text":"1033"},{"range":"1061","text":"1039"},{"range":"1062","text":"1041"},{"range":"1063","text":"1037"},{"range":"1064","text":"1047"},{"range":"1065","text":"1027"},{"range":"1066","text":"1043"},{"range":"1067","text":"1045"},{"range":"1068","text":"1035"},{"range":"1069","text":"1035"},[5074,5076],"[getAccountInfo]",[5132,5145],"[accountInfo, getResourceInfo]",[5137,5139],"[getVulnList]",[5483,5489],"[info, vulnList]",[10646,10659],"[accountList, getHistory]",[10933,10945],"[assessment, history]",[10997,11008],"[getVulnList, historyId]",[9295,9307],"[filterList, vulnList]",[6171,6184],"[accountList, getAssessmentList]",[8612,8625],[6344,6357],[2127,2140],"[props.modal, props.setting, setSettingInfo]",[1367,1380],"[props.filterList, props.modal]",[3059,3097],"[rankData]",[3691,3701],"[props.data, props.serviceByData, tempList]",[7410,7462],"[props.historyId, donutData]",[2422,2434],"[props, props.data]",[5743,5783],"[graphData, props]",[11496,11532],"[cfg, props.data]",[2905,2917],[5137,5139],[5483,5489],[5074,5076],[5132,5145],[6344,6357],[10646,10659],[10933,10945],[10997,11008],[9295,9307],[8612,8625],[6171,6184],[2127,2140],[3691,3701],[7410,7462],[3059,3097],[11496,11532],[2829,2841],[2422,2434],[5743,5783],[1367,1380],[1367,1380]]